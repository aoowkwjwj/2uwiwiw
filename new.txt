_G.Pirates = true

spawn(function()
    while _G.Pirates do
        task.wait(1)

        local player = game.Players.LocalPlayer
        if player.Team == nil then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetTeam", "Pirates")
        elseif player.Team.Name == "Marines" then
            _G.Pirates = false
        end
    end
end)

repeat task.wait(1) until game.Players.LocalPlayer.Team ~= nil
task.wait(3)

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Blue X Hub",
    SubTitle = "Blox Fruits",
    TabWidth = 160,
    Size = UDim2.fromOffset(500,350),
    Acrylic = false,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local foldername = "Blue X Hub Script Blox Fruits"
local filename = "BloxFruit_" .. game.Players.LocalPlayer.Name .. "_Config.json"
local filepath = foldername .. "/" .. filename

_G.Settings = _G.Settings or {
    Hook = "Link";
    HookMi = false;
    HookPre = false;
    HookFro = false;
    MethodFarm = "Above";
    FastFruit = "Blade-Blade";
    EnableFastFruit = false;
    M1 = false;
    ShootGuitar = false;
    Weapon = "Melee";
    FastAttack = true;
    BringMob = true;
    BypassTP = false;
    AutoHaki = true;
    Active = false;
    ActiveRaceV = false;
    HopAfter = false;
    HopAdminJoin = true;
    Rejoin = true;   
    Sound = false;
    Notifi = false;
    Fps = false;
    StartFarmNek = false;
    StartBoneNek = false;    
    StartCakeNek = false;
    Quest = true;
    Kill = 35;
    MasF = false;
    MasG = false;
    ZMas = true;
    XMas = true;
    CMas = true;
    VMas = true;
    FMas = false;
    White = false;
    Orange = false;
    Green = false;
    Purple = false;
    FarmVol = false;
    DraQuest = false;
    SBoss = "Cake Queen";
    Boss = false;
    BossAll = false;
    Elite = false;
    HopElite = false;
    Tyrant = false;
    TikiFarm = "All Mob Tiki";
    MobTiki = false;
    SummonSkies = false;
    SkullSummonSkies = false;
    TyrantFull = false;
    RipFull = false;
    SoulFull = false;
    Law = false;
    HopFull = false;
    RanBone = false;
    Pray = false;
    Try = false;
    ChestT = false;
    HopChest = false;
    HakiObser = false;
    HopObser = false;
    Stop = true;
    Haki = false;
    HakiHop = false;
    SharkMan = false;
    Saber = false;
    TridentDra = false;
    Yama = false;
    HopSword = false;
    CDK = false;
    FindPre = false;
    FixVol = false;
    KillGolemFast = false;
    KillGolem = false;
    CollectBone = false;
    CollectEgg = false;
    UseM = true;
    UseS = true;
    UseG = false;
    Rock = true;
    BerryCollect = false;
    BerryEsp = false;
    SeaFarm = false;
    Shark = false;
    Piran = false;
    Terror = false;
    Fish = false;
    Boat = false;
    GhostBoat = false;
    SelectBoatLevi = "Beast Hunter";
    FindLe = false;
    Drivee = "Tiki";
    BoatD = false;
    FindMirage = false;
    TpMirage = false;
    Look = false;
    DoorDraco = false;
    DracoV = false;
    RaceV = false;
    CompleteRace = false;
    KillTrial = false;
    Train = false;
    BuyGear = false;
    BuyChip = false;
    StartRaid = false;
    AttackRaid = false;
    Awa = false;
    GetFruitM = false;
    Island = "Tiki Outpost";
    TpIsland = false;
    RanFruit = false;
    Store = false;
    CollectFruit = false;
    HopFruits = false;
    FruitPanel = "Eagle";
    SelectFile = "A";
    FarmFile = false;
    Factory = false;
    Piraid = false;
    Tpp = false;
    Water = true;
    Rain = false;
    TrainD = false;
    BuyGearD = false;
    Doors = false;
    Tree = false;
    Lever = false;
    One = false;
    Fogg = true;
    TpVolcanic = false;
    TpFrozen = false;
    AutoJob = false;
    Aimbot = false;
    DodgeNo = false;
    InfEn = false;
    InfNhayCao = false;
    InfSoru = false;
}

function SaveSettings()
    local HttpService = game:GetService("HttpService")
    local json = HttpService:JSONEncode(_G.Settings)

    if writefile then
        if not isfolder(foldername) then
            makefolder(foldername)
        end
        writefile(filepath, json)
    end
end

function loadSettings()
    local HttpService = game:GetService("HttpService")

    if isfile(filepath) then
        local success, data = pcall(function()
            return HttpService:JSONDecode(readfile(filepath))
        end)

        if success and type(data) == "table" then
            for k, v in pairs(data) do
                _G.Settings[k] = v
            end
        end
    end
end

loadSettings()

local Tabs = {
    W = Window:AddTab({ Title = "Webhook", Icon = "" }),
    Ser = Window:AddTab({ Title = "Server", Icon = "" }),
    S = Window:AddTab({ Title = "Setting", Icon = "" }),
    M = Window:AddTab({ Title = "Main Farm", Icon = "" }),
    SF = Window:AddTab({ Title = "Stack Farm", Icon = "" }),
    O = Window:AddTab({ Title = "Other Farm", Icon = "" }),
    I = Window:AddTab({ Title = "Item Farm", Icon = "" }),
    R = Window:AddTab({ Title = "Upgrade Race", Icon = "" }),
    Se = Window:AddTab({ Title = "Sea Event", Icon = "" }),
    V = Window:AddTab({ Title = "Prehistoric Island", Icon = "" }),
    F = Window:AddTab({ Title = "Fruits", Icon = "" }),
    P = Window:AddTab({ Title = "Player", Icon = "" })
}

Tabs.W:AddParagraph({
    Title = "Webhook",
    Content = "-----"
})

Hook = Tabs.W:AddInput("Hook", {
     Title = "Url Webhook",
     Default = "",
     Placeholder = "day nay ban oi",
     Numeric = false,
     Finished = false,
     Callback = function(value)
         WebhookURL = value
         _G.Settings.Hook = value
		 SaveSettings()
     end
})

HookMi = Tabs.W:AddToggle("HookMi", { Title = "Webhook Spam Mirage Island", Description = "", Default = _G.Settings.HookMi })
HookMi:OnChanged(function(value)
    _G.HookMi = value
    _G.Settings.HookMi = value
    SaveSettings()
end)

HookPre = Tabs.W:AddToggle("HookPre", { Title = "Webhook Spam Prehistoric Island", Description = "", Default = _G.Settings.HookPre })
HookPre:OnChanged(function(value)
    _G.HookPre = value
    _G.Settings.HookPre = value
    SaveSettings()    
end)

HookFro = Tabs.W:AddToggle("HookFro", { Title = "Webhook Spam Frozen Dimension", Description = "", Default = _G.Settings.HookFro })
HookFro:OnChanged(function(value)
    _G.HookFro = value
    _G.Settings.HookFro = value
    SaveSettings()    
end)

Tabs.Ser:AddParagraph({
    Title = "Job ID",
    Content = "-----"
})

Job = Tabs.Ser:AddInput("Job", {
     Title = "Job ID",
     Default = "",
     Placeholder = "Hi",
     Numeric = false,
     Finished = false,
     Callback = function(value)
         _G.Job = value
     end
})

AutoJob = Tabs.Ser:AddToggle("AutoJob", { Title = "Spam Join Server Job ID", Description = "", Default = _G.Settings.AutoJob })
AutoJob:OnChanged(function(value)
    _G.SpamJob = value
    _G.Settings.AutoJob = value
    SaveSettings()    
end)

spawn(function()
            while _G.SpamJob do
                if _G.Job and _G.Job ~= "" then
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, _G.Job, game.Players.LocalPlayer)
                end
                task.wait(5)
            end
        end)

Tabs.Ser:AddButton({
    Title = "Join Server Job ID",
    Callback = function()
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.placeId,_G.Job, game.Players.LocalPlayer)
    end
})

Tabs.Ser:AddButton({
    Title = "Hop Server",
    Callback = function()
        Hop()
    end
})

Tabs.Ser:AddParagraph({
    Title = "Teleport",
    Content = "-----"
})

Tabs.Ser:AddButton({
    Title = "Teleport Sea 1",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelMain")
    end
})

Tabs.Ser:AddButton({
    Title = "Teleport Sea 2",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
    end
})

Tabs.Ser:AddButton({
    Title = "Teleport Sea 3",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
    end
})

if World1 then
 IslandList={
                "WindMill",
                "Marine",
                "Middle Town",
                "Jungle",
                "Pirate Village",
                "Desert",
                "Snow Island",
                "MarineFord",
                "Colosseum",
                "Sky Island 1",
                "Sky Island 2",
                "Sky Island 3",
                "Prison",
                "Magma Village",
                "Under Water Island",
                "Fountain City",
                "Shank Room",
                "Mob Island",
}
elseif World2 then
       IslandList={
        "The Cafe",
        "Frist Spot",
        "Dark Area",
        "Flamingo Mansion",
        "Flamingo Room",
        "Green Zone",
        "Factory",
        "Colossuim",
        "Zombie Island",
        "Two Snow Mountain",
        "Punk Hazard",
        "Cursed Ship",
        "Ice Castle",
        "Forgotten Island",
        "Ussop Island",
        "Mini Sky Island",
       }
elseif World3 then
    IslandList={
        "Mansion",
        "Port Town",
        "Great Tree",
        "Castle On The Sea",
        "MiniSky", 
        "Hydra Island",
        "Floating Turtle",
        "Haunted Castle",
        "Ice Cream Island",
        "Peanut Island",
        "Cake Island",
        "Cocoa Island",
        "Candy Island",
        "Tiki Outpost",
       }
    end

Selectsland = Tabs.Ser:AddDropdown("Selectsland", {
    Title = "Select Island",
    Values = IslandList,
    Multi = false,
    Default = _G.Settings.Island,
})
Selectsland:SetValue(_G.Settings.Island)
Selectsland:OnChanged(function(value)
_G.ChonDao = value
_G.Settings.Island = value
SaveSettings()
end)

TpIsland = Tabs.Ser:AddToggle("TpIsland", { Title = "Teleport Island", Description = "", Default = _G.Settings.TpIsland })
TpIsland:OnChanged(function(value)
    _G.TpDao = value
    _G.Settings.TpIsland = value
    SaveSettings()
    StopTween(_G.TpDao)
end)

spawn(function()
    while wait(1) do
        pcall(function()
            if _G.TpDao and _G.ChonDao == "WindMill" then
                topos(CFrame.new(979.79895019531, 16.516613006592, 1429.0466308594))
            elseif _G.TpDao and _G.ChonDao == "Marine" then
                topos(CFrame.new(-2566.4296875, 6.8556680679321, 2045.2561035156))
            elseif _G.TpDao and _G.ChonDao == "Middle Town" then
                topos(CFrame.new(-690.33081054688, 15.09425163269, 1582.2380371094))
            elseif _G.TpDao and _G.ChonDao == "Jungle" then
                topos(CFrame.new(-1612.7957763672, 36.852081298828, 149.12843322754))
            elseif _G.TpDao and _G.ChonDao == "Pirate Village" then
    topos(CFrame.new(-1181.3093261719, 4.7514905929565, 3803.5456542969))
elseif _G.TpDao and _G.ChonDao == "Desert" then
    topos(CFrame.new(944.15789794922, 20.919729232788, 4373.3002929688))
elseif _G.TpDao and _G.ChonDao == "Snow Island" then
    topos(CFrame.new(1347.8067626953, 104.66806030273,-1319.7370605469))
elseif _G.TpDao and _G.ChonDao == "MarineFord" then
    topos(CFrame.new(-4914.8212890625, 50.963626861572, 4281.0278320313))
elseif _G.TpDao and _G.ChonDao == "Colosseum" then
    topos(CFrame.new(-1427.6203613281, 7.2881078720093,-2792.7722167969))
elseif _G.TpDao and _G.ChonDao == "Sky Island 1" then
    topos(CFrame.new(-4869.1025390625, 733.46051025391,-2667.0180664063))
elseif _G.TpDao and _G.ChonDao == "Sky Island 2" then  
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-4607.82275, 872.54248,-1667.55688))
elseif _G.TpDao and _G.ChonDao == "Sky Island 3" then
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7894.6176757813, 5547.1416015625,-380.29119873047))
elseif _G.TpDao and _G.ChonDao == "Prison" then
    topos(CFrame.new(4875.330078125, 5.6519818305969, 734.85021972656))
elseif _G.TpDao and _G.ChonDao == "Magma Village" then
    topos(CFrame.new(-5247.7163085938, 12.883934020996, 8504.96875))
elseif _G.TpDao and _G.ChonDao == "Under Water Island" then
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163.8515625, 11.6796875, 1819.7841796875))
elseif _G.TpDao and _G.ChonDao == "Fountain City" then
    topos(CFrame.new(5127.1284179688, 59.501365661621, 4105.4458007813))
elseif _G.TpDao and _G.ChonDao == "Shank Room" then
    topos(CFrame.new(-1442.16553, 29.8788261,-28.3547478))
elseif _G.TpDao and _G.ChonDao == "Mob Island" then
    topos(CFrame.new(-2850.20068, 7.39224768, 5354.99268))
elseif _G.TpDao and _G.ChonDao == "The Cafe" then
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-281.93707275390625, 306.130615234375, 609.280029296875))
    wait()
    topos(CFrame.new(-380.47927856445, 77.220390319824, 255.82550048828))
elseif _G.TpDao and _G.ChonDao == "Frist Spot" then
    topos(CFrame.new(-11.311455726624, 29.276733398438, 2771.5224609375))
elseif _G.TpDao and _G.ChonDao == "Dark Area" then
    topos(CFrame.new(3780.0302734375, 22.652164459229,-3498.5859375))
elseif _G.TpDao and _G.ChonDao == "Flamingo Mansion" then
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-281.93707275390625, 306.130615234375, 609.280029296875))
elseif _G.TpDao and _G.ChonDao == "Flamingo Room" then
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(2284.912109375, 15.152034759521484, 905.48291015625))
elseif _G.TpDao and _G.ChonDao == "Green Zone" then
    topos(CFrame.new(-2448.5300292969, 73.016105651855,-3210.6306152344))
elseif _G.TpDao and _G.ChonDao == "Factory" then
    topos(CFrame.new(424.12698364258, 211.16171264648,-427.54049682617))
elseif _G.TpDao and _G.ChonDao == "Colossuim" then
    topos(CFrame.new(-1503.6224365234, 219.7956237793, 1369.3101806641))
elseif _G.TpDao and _G.ChonDao == "Zombie Island" then
    topos(CFrame.new(-5622.033203125, 492.19604492188,-781.78552246094))
elseif _G.TpDao and _G.ChonDao == "Two Snow Mountain" then
    topos(CFrame.new(753.14288330078, 408.23559570313,-5274.6147460938))
elseif _G.TpDao and _G.ChonDao == "Punk Hazard" then
    topos(CFrame.new(-6127.654296875, 15.951762199402,-5040.2861328125))
elseif _G.TpDao and _G.ChonDao == "Cursed Ship" then
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(923.40197753906, 125.05712890625, 32885.875))
elseif _G.TpDao and _G.ChonDao == "Ice Castle" then
    topos(CFrame.new(6148.4116210938, 294.38687133789,-6741.1166992188))
elseif _G.TpDao and _G.ChonDao == "Forgotten Island" then
    topos(CFrame.new(-3032.7641601563, 317.89672851563,-10075.373046875))
elseif _G.TpDao and _G.ChonDao == "Ussop Island" then
    topos(CFrame.new(4816.8618164063, 8.4599885940552, 2863.8195800781))
elseif _G.TpDao and _G.ChonDao == "Mini Sky Island" then
    topos(CFrame.new(-288.74060058594, 49326.31640625,-35248.59375))
elseif _G.TpDao and _G.ChonDao == "Great Tree" then
    topos(CFrame.new(2681.2736816406, 1682.8092041016,-7190.9853515625))
elseif _G.TpDao and _G.ChonDao == "Castle On The Sea" then
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-5075.50927734375, 314.5155029296875,-3150.0224609375))
elseif _G.TpDao and _G.ChonDao == "MiniSky" then
    topos(CFrame.new(-260.65557861328, 49325.8046875,-35253.5703125))
elseif _G.TpDao and _G.ChonDao == "Port Town" then
    topos(CFrame.new(-290.7376708984375, 6.729952812194824, 5343.5537109375))
elseif _G.TpDao and _G.ChonDao == "Hydra Island" then
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(5661.5322265625, 1013.0907592773438,-334.9649963378906))
elseif _G.TpDao and _G.ChonDao == "Floating Turtle" then
    topos(CFrame.new(-13274.528320313, 531.82073974609,-7579.22265625))
elseif _G.TpDao and _G.ChonDao == "Mansion" then
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-12468.5380859375, 375.0094299316406,-7554.62548828125))
elseif _G.TpDao and _G.ChonDao == "Haunted Castle" then
    topos(CFrame.new(-9515.3720703125, 164.00624084473, 5786.0610351562))
elseif _G.TpDao and _G.ChonDao == "Ice Cream Island" then
    topos(CFrame.new(-902.56817626953, 79.93204498291,-10988.84765625))
elseif _G.TpDao and _G.ChonDao == "Peanut Island" then
    topos(CFrame.new(-2062.7475585938, 50.473892211914,-10232.568359375))
elseif _G.TpDao and _G.ChonDao == "Cake Island" then
    topos(CFrame.new(-1884.7747802734375, 19.327526092529297,-11666.8974609375))
elseif _G.TpDao and _G.ChonDao == "Cocoa Island" then
    topos(CFrame.new(87.94276428222656, 73.55451202392578,-12319.46484375))
elseif _G.TpDao and _G.ChonDao == "Candy Island" then
    topos(CFrame.new(-1014.4241943359375, 149.11068725585938,-14555.962890625))
elseif _G.TpDao and _G.ChonDao == "Tiki Outpost" then
    topos(CFrame.new(-16542.447265625, 55.68632888793945, 1044.41650390625))
            end
        end)
    end
end)

Tabs.Ser:AddParagraph({
    Title = "Shop",
    Content = "-----"
})

Tabs.Ser:AddButton({
    Title = "Buy Geppo",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyHaki","Geppo")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy Haki Buso",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyHaki","Buso")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy Soru",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyHaki","Soru")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy Observation Haki",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("KenTalk","Buy")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy Black Leg",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyBlackLeg")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy Fishman Karate",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectro")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy Electric",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyFishmanKarate")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy Dragon Claw",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","DragonClaw","1")
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","DragonClaw","2")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy SuperHuman",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy Death Step",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDeathStep")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy Sharkman Karate",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate",true)
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy Electric Claw",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectricClaw")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy Dragon Talon",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDragonTalon")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy GodHuman",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyGodhuman")
    end
})

Tabs.Ser:AddButton({
    Title = "Buy Sanguine Art",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySanguineArt")
    end
})

Tabs.Ser:AddButton({
    Title = "Reset Stats",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","Refund","1")
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","Refund","2")
    end
})

Tabs.Ser:AddButton({
    Title = "Reroll Race",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","Reroll","1")
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","Reroll","2")
    end
})

Tabs.Ser:AddButton({
    Title = "Change Race Ghoul",
    Callback = function()
        local args = {
            [1]="Ectoplasm",
            [2]="Change",
            [3]=4
        }
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end
})

Tabs.Ser:AddButton({
    Title = "Change Race Cyborg",
    Callback = function()
        local args = {
            [1]="CyborgTrainer",
            [2]="Buy"
        }
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end
})

CDraco = Tabs.Ser:AddToggle("CDraco", { Title = "Change Race Draco", Description = "Sea 3 Only", Default = false })
CDraco:OnChanged(function(value)
    _G.ChangeDraco = value    
    StopTween(_G.ChangeDraco)
end)

spawn(function()
    while wait() do
        pcall(function()
            if _G.ChangeDraco and World3 then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance", Vector3.new(5661.5322265625, 1013.0907592773438, -334.9649963378906))
                topos(CFrame.new(5814.42724609375, 1208.3267822265625, 884.5785522460938))
                
                local targetPosition = Vector3.new(5814.42724609375, 1208.3267822265625, 884.5785522460938)
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                
                repeat
                    wait()
                until (character.HumanoidRootPart.Position - targetPosition).Magnitude < 1
                
                local args = {
                    [1] = {
                        ["NPC"] = "Dragon Wizard",
                        ["Command"] = "DragonRace"
                    }
                }
                
                game:GetService("ReplicatedStorage").Modules.Net:FindFirstChild("RF/InteractDragonQuest"):InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while wait() do
        pcall(function()
            if _G.ChangeDraco and not World3 then
                Fluent:Notify({
                Title = "Notification",
                Content = "Sea 3 Only",
                Duration = 8
            })
            _G.ChangeDraco = false
            end
        end)
    end
end)

Tabs.S:AddParagraph({
    Title = "Setting Farm",
    Content = "-----"
})

local MethodF = {"Above", "Horizontal", "Circle", "Below"}

Method = Tabs.S:AddDropdown("Method", {
    Title = "Select Method Farm",
    Values = MethodF,
    Multi = false,
    Default = _G.Settings.MethodFarm,
})
Method:SetValue(_G.Settings.MethodFarm)
Method:OnChanged(function(value)
Type = value
_G.Settings.MethodFarm = value
SaveSettings()
end)

local bluex = {"Melee", "Sword", "Fruit", "Gun"}

Weapon = Tabs.S:AddDropdown("Weapon", {
    Title = "Select Weapon",
    Values = bluex,
    Multi = false,
    Default = _G.Settings.Weapon,
})
Weapon:SetValue(_G.Settings.Weapon)
Weapon:OnChanged(function(value)
_G.SelectWeapon = value
_G.Settings.Weapon = value
SaveSettings()
end)

task.spawn(function()
    while wait() do
        pcall(function()
            if _G.SelectWeapon == "Melee" then
                for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ToolTip == "Melee" then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                            _G.SelectWeapon = v.Name
                        end
                    end
                end
            elseif _G.SelectWeapon == "Sword" then
                for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ToolTip == "Sword" then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                            _G.SelectWeapon = v.Name
                        end
                    end
                end
            elseif _G.SelectWeapon == "Gun" then
                for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ToolTip == "Gun" then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                            _G.SelectWeapon = v.Name
                        end
                    end
                end
            elseif _G.SelectWeapon == "Fruit" then
                for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ToolTip == "Blox Fruit" then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                            _G.SelectWeapon = v.Name
                        end
                    end
                end
            end
        end)
    end
end)

Fast = Tabs.S:AddToggle("Fast", { Title = "Fast Attack", Description = "Fix Ban", Description = "", Default = _G.Settings.FastAttack })
Fast:OnChanged(function(value)
    _G.FastAttack = value    
    _G.Settings.FastAttack = value
    SaveSettings()
end)

_G.FastAttack = true
if _G.FastAttack then
	local _ENV = (getgenv or getrenv or getfenv)()
	local function v0(v35, v36)
		local v37, v38 = pcall(function()
			return v35:WaitForChild(v36)
		end)
		return v38
	end
	local function v1(v39, ...)
		local v40 = v39
		for v60, v61 in {...} do
			v40 = v40:FindFirstChild(v61) or v0(v40, v61)
			if not v40 then
				break
			end
		end
		return v40
	end
	local v2 = game:GetService("VirtualInputManager")
	local v3 = game:GetService("CollectionService")
	local v4 = game:GetService("ReplicatedStorage")
	local v5 = game:GetService("TeleportService")
	local v6 = game:GetService("RunService")
	local v7 = game:GetService("Players")
	local v8 = v7.LocalPlayer
	local v9 = v0(v4, "Remotes")
	if not v9 then
		return
	end
	local v10 = v0(v9, "Validator")
	local v11 = v0(v9, "CommF_")
	local v12 = v0(v9, "CommE")
	local v13 = v0(workspace, "ChestModels")
	local v14 = v0(workspace, "_WorldOrigin")
	local v15 = v0(workspace, "Characters")
	local v16 = v0(workspace, "Enemies")
	local v17 = v0(workspace, "Map")
	local v18 = v0(v14, "EnemySpawns")
	local v19 = v0(v14, "Locations")
	local v20 = v6.RenderStepped
	local v21 = v6.Heartbeat
	local v22 = v6.Stepped
	local v23 = v0(v4, "Modules")
	local v24 = v0(v23, "Net")
	local v25 = sethiddenproperty or function(...)
		return ...
	end
	local v26 = setupvalue or (debug and debug.setupvalue)
	local v27 = getupvalue or (debug and debug.getupvalue)
	local v28 = {AutoClick=true,ClickDelay=0}
	local v29 = {}
	v29.AttackCooldown = 0
	v29.Connections = {}
	v29.IsAlive = function(v41)
		return v41 and v41:FindFirstChild("Humanoid") and (v41.Humanoid.Health > 0)
	end
	local function v33(v42)
		return v42 ~= v8
	end
	v29.FastAttack = (function()
		if _ENV.rz_FastAttack then
			return _ENV.rz_FastAttack
		end
		local v43 = {Distance=100,attackMobs=true,attackPlayers=true,Equipped=nil,Debounce=0,ComboDebounce=0,M1Combo=0,EnemyRootPart=nil,HitboxLimbs={"RightLowerArm","RightUpperArm","LeftLowerArm","LeftUpperArm","RightHand","LeftHand"}}
		local v44 = v0(v24, "RE/RegisterAttack")
		local v45 = v0(v24, "RE/RegisterHit")
		local v46 = v0(v4, "Events")
		local v47, v48 = pcall(function()
			return require(v23.Flags).COMBAT_REMOTE_THREAD or false
		end)
		local v49
		task.defer(function()
			local v62 = v8:WaitForChild("PlayerScripts")
			local v63 = v62:FindFirstChildOfClass("LocalScript")
			while not v63 do
				v8.PlayerScripts.ChildAdded:Wait()
				v63 = v62:FindFirstChildOfClass("LocalScript")
			end
			if getsenv then
				local v126, v127 = pcall(getsenv, v63)
				if (v126 and v127) then
					v49 = v127._G.SendHitsToServer
				end
			end
		end)
		v43.Process = function(v64, v65, v66, v67, v68, v69)
			if not v65 then
				return
			end
			local v70 = v64.HitboxLimbs
			local v71 = v66:GetChildren()
			for v114 = 1, #v71 do
				local v115 = v71[v114]
				local v116 = v115:FindFirstChild(v70[math.random(#v70)]) or v115:FindFirstChild("HumanoidRootPart") or v115.PrimaryPart
				if not v116 then
					continue
				end
				local v117 = (v115.Parent == v15) and v33(v7:GetPlayerFromCharacter(v115))
				if ((v115 ~= v8.Character) and ((v115.Parent ~= v15) or v117)) then
					if (v29.IsAlive(v115) and ((v68 - v116.Position).Magnitude <= v69)) then
						if not v64.EnemyRootPart then
							v64.EnemyRootPart = v116
						else
							table.insert(v67, {v115,v116})
						end
					end
				end
			end
		end
		v43.GetAllBladeHits = function(v72, v73, v74)
			local v75 = v73:GetPivot().Position
			local v76 = {}
			v74 = v74 or v72.Distance
			v72:Process(v72.attackMobs, v16, v76, v75, v74)
			v72:Process(v72.attackPlayers, v15, v76, v75, v74)
			return v76
		end
		v43.GetClosestEnemy = function(v77, v78, v79)
			local v80 = v77:GetAllBladeHits(v78, v79)
			local v81, v82 = math.huge
			for v118 = 1, #v80 do
				local v119 = (v82 and (v82.Position - v80[v118][2].Position).Magnitude) or v81
				if (v119 <= v81) then
					v81, v82 = v119, v80[v118][2]
				end
			end
			return v82
		end
		v43.GetCombo = function(v83)
			local v84 = (((tick() - v83.ComboDebounce) <= 0.4) and v83.M1Combo) or 0
			v84 = ((v84 >= 4) and 1) or (v84 + 1)
			v83.ComboDebounce = tick()
			v83.M1Combo = v84
			return v84
		end
		v43.UseFruitM1 = function(v87, v88, v89, v90)
			local v91 = v88:GetPivot().Position
			local v92 = v16:GetChildren()
			for v120 = 1, #v92 do
				local v121 = v92[v120]
				local v122 = v121.PrimaryPart or v121:FindFirstChild("HumanoidRootPart")
				if (v29.IsAlive(v121) and v122 and ((v122.Position - v91).Magnitude <= 50)) then
					local v132 = (v122.Position - v91).Unit
					return v89.LeftClickRemote:FireServer(v132, v90)
				end
			end
		end
		v43.UseNormalClick = function(v93, v94, v95, v96)
			v93.EnemyRootPart = nil
			local v98 = v93:GetAllBladeHits(v95)
			local v99 = v93.EnemyRootPart
			if v99 then
				if (v47 and v48 and v49) then
					v44:FireServer(v96)
					v49(v99, v98)
				elseif (v47 and not v48) then
					v44:FireServer(v96)
					v45:FireServer(v99, v98)
				else
					v2:SendMouseButtonEvent(0, 0, 0, true, game, 1)
					task.wait(0.05)
					v2:SendMouseButtonEvent(0, 0, 0, false, game, 1)
				end
			end
		end
		v43.CheckStun = function(v100, v101, v102, v103)
			local v104 = {"Stun","Stun Value","StunValue"}
			for v123, v124 in ipairs(v104) do
				local v125 = v102:FindFirstChild(v124)
				if (v125 and (v125.Value > 0)) then
					return false
				end
			end
			return true
		end
		v43.Attack = function(v105)
			if (not v28.AutoClick or ((tick() - v29.AttackCooldown) <= 1)) then
				return
			end
			if not v29.IsAlive(v8.Character) then
				return
			end
			local v106 = v8.Character
			local v107 = v106.Humanoid
			local v108 = v106:FindFirstChildOfClass("Tool")
			local v109 = v108 and v108.ToolTip
			local v110 = v108 and v108.Name
			if (not v108 or ((v109 ~= "Melee") and (v109 ~= "Blox Fruit") and (v109 ~= "Sword"))) then
				return nil
			end
			local v111 = (v108:FindFirstChild("Cooldown") and v108.Cooldown.Value) or 0.3
			if (((tick() - v105.Debounce) >= v111) and v105:CheckStun(v109, v106, v107)) then
				local v128 = v105:GetCombo()
				v111 = v111 + (((v128 >= 4) and 0.05) or 0)
				v105.Equipped = v108
				v105.Debounce = ((v128 >= 4) and (tick() + 0.05)) or tick()
				if (v109 == "Blox Fruit") then
					if ((v110 == "Ice-Ice") or (v110 == "Light-Light")) then
						return v105:UseNormalClick(v107, v106, v111)
					elseif v108:FindFirstChild("LeftClickRemote") then
						return v105:UseFruitM1(v106, v108, v128)
					end
				else
					return v105:UseNormalClick(v107, v106, v111)
				end
			end
		end
		v43.AttackNearest = function(v112)
			v112:Attack()
		end
		v43.BladeHits = function(v113)
			v113:Attack()
		end
		task.spawn(function()
			while task.wait(v28.ClickDelay) do
				if v28.AutoClick then
					v43:Attack()
				end
			end
		end)
		table.insert(v29.Connections, v22:Connect(function()
			v43:Attack()
		end))
		_ENV.rz_FastAttack = v43
		return v43
	end)()
end

local VirtualInputManager = game:GetService("VirtualInputManager")

getgenv().AutoClickM1 = false

task.spawn(function()
    while true do
        if _G.ClickM1Nek then
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        end
        task.wait(0.1)
    end
end)

Click = Tabs.S:AddToggle("Click", { Title = "Auto Click M1", Description = "", Default = _G.Settings.M1 })
Click:OnChanged(function(value)
    _G.ClickM1Nek = value    
    _G.Settings.M1 = value
    SaveSettings()    
end)

local VirtualInputManager = game:GetService("VirtualInputManager")

task.spawn(function()
    while getgenv().ClickM1 do
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        task.wait(0.1)
    end
end)

Shoot = Tabs.S:AddToggle("Shoot", { Title = "Auto Shoot Gun Skull Guitar", Description = "Skull Guitar Only", Default = _G.Settings.ShootGuitar })
Shoot:OnChanged(function(value)
    _G.ShootSkull = value    
    _G.Settings.ShootGuitar = value
    SaveSettings()    
end)

spawn(function()
    while task.wait(0.5) do
        if _G.ShootSkull then
            pcall(function()
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local root = character:FindFirstChild("HumanoidRootPart")
                if not root then return end

                local closestEnemy = nil
                local shortestDistance = math.huge

                for _, enemy in pairs(workspace.Enemies:GetChildren()) do
                    if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                        local distance = (root.Position - enemy.HumanoidRootPart.Position).Magnitude
                        if distance < shortestDistance then
                            shortestDistance = distance
                            closestEnemy = enemy
                        end
                    end
                end

                if closestEnemy and shortestDistance <= 1000 then
                    local pos = closestEnemy.HumanoidRootPart.Position
                    local guitar = character:FindFirstChild("Skull Guitar")
                    if guitar and guitar:FindFirstChild("RemoteEvent") then
                        guitar.RemoteEvent:FireServer("TAP", pos)
                    end
                    game:GetService("ReplicatedStorage").Remotes.Validator2:FireServer(8359618, math.floor(shortestDistance))
                end
            end)
        end
    end
end)

Bring = Tabs.S:AddToggle("Bring", { Title = "Bring Mob Farm", Description = "", Default = _G.Settings.BringMob })
Bring:OnChanged(function(value)
    _G.GomQuai = value    
    _G.Settings.BringMob = value
    SaveSettings()    
end)

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
spawn(function()
    while task.wait(0.1) do
        pcall(function()
            CheckQuest()
            local enemies = Workspace.Enemies:GetChildren()
            local MonsterCount = 0
            for _, enemy in ipairs(enemies) do
                if MonsterCount >= 2 then
                    break
                end                
                if _G.GomQuai and enemy:FindFirstChild("Humanoid") and enemy:FindFirstChild("HumanoidRootPart") then
                    local humanoid = enemy:FindFirstChild("Humanoid")
                    local rootPart = enemy:FindFirstChild("HumanoidRootPart")
                    if humanoid and rootPart and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        local distance = (rootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                        if StartMagnet and (enemy.Name == MonFarm or enemy.Name == Mon) and humanoid.Health > 0 and distance <= 350 then
                            if enemy.Name == "Factory Staff" and PosMon and (rootPart.Position - PosMon.Position).Magnitude <= 5000 then
                                if rootPart.Parent then
                                    rootPart.CanCollide = false
                                    rootPart.Size = Vector3.new(60, 60, 60)
                                    rootPart.CFrame = PosMon
                                    enemy.Head.CanCollide = false
                                    local animator = humanoid:FindFirstChild("Animator")
                                    if animator then
                                        pcall(function()
                                            animator:Destroy()
                                        end)
                                    end
                                    sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
                                    MonsterCount = MonsterCount + 1
                                end
                            elseif (enemy.Name == MonFarm or enemy.Name == Mon) and PosMon and (rootPart.Position - PosMon.Position).Magnitude <= 4500 then
                                if rootPart.Parent then
                                    rootPart.CanCollide = false
                                    rootPart.Size = Vector3.new(60, 60, 60)
                                    rootPart.CFrame = PosMon
                                    enemy.Head.CanCollide = false
                                    local animator = humanoid:FindFirstChild("Animator")
                                    if animator then
                                        pcall(function()
                                            animator:Destroy()
                                        end)
                                    end
                                    sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
                                    MonsterCount = MonsterCount + 1
                                end
                            end
                        end
                    end
                end
            end
        end)
    end
end)

Bypass = Tabs.S:AddToggle("Bypass", { Title = "Bypass Teleport", Description = "Error", Default = _G.Settings.BypassTP })
Bypass:OnChanged(function(value)
    BypassTP = value    
    _G.Settings.BypassTP = value
    SaveSettings()    
end)

Haki = Tabs.S:AddToggle("Haki", { Title = "Auto Active Haki Buso", Description = "", Default = _G.Settings.AutoHaki })
Haki:OnChanged(function(value)
    _G.HakiEna = value    
    _G.Settings.AutoHaki = value
    SaveSettings()   
end)

spawn(function()
    while wait(.1) do
        if _G.HakiEna then 
            if not game.Players.LocalPlayer.Character:FindFirstChild("HasBuso") then
                local args = {
                    [1] = "Buso"
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end
        end
    end
end)

AcV3 = Tabs.S:AddToggle("AcV3", { Title = "Auto Active Race V3", Description = "", Default = _G.Settings.Active })
AcV3:OnChanged(function(value)
    _G.AutoAgility = value    
    _G.Settings.Active = value
    SaveSettings()   
end)

spawn(function()
        pcall(function()
            while wait() do
                if _G.AutoAgility then
                    game:GetService("ReplicatedStorage").Remotes.CommE:FireServer("ActivateAbility")
                end
            end
        end)
    end)

AcV4 = Tabs.S:AddToggle("AcV4", { Title = "Auto Active Race V4", Description = "", Default = _G.Settings.ActiveRaceV })
AcV4:OnChanged(function(value)
    _G.AwaV = value    
    _G.Settings.ActiveRaceV = value
    SaveSettings()   
end)

spawn(function()
    while wait() do
		pcall(function()
			if _G.AwaV then
				game:GetService("VirtualInputManager"):SendKeyEvent(true,"Y",false,game)
				wait(0.1)
                game:GetService("VirtualInputManager"):SendKeyEvent(false,"Y",false,game)
			end
		end)
    end
end)

Tabs.S:AddParagraph({
    Title = "Setting Misc",
    Content = "-----"
})

After = Tabs.S:AddToggle("After", { Title = "Hop Server After 30 Minutes", Description = "", Default = _G.Settings.HopAfter })
After:OnChanged(function(value)
    _G.AntiBan = value    
    _G.Settings.HopAfter = value
    SaveSettings()    
end)

spawn(function()
    while task.wait(1800) do 
        if _G.AntiBan then
            Hop()
        end
    end
end)

local targetPlayers = {
    ["my_game43"] = true,
    ["rip_indra"] = true,
    ["Axiore"] = true,
    ["Polkster"] = true,
    ["wenlocktoad"] = true,
    ["Daigrock"] = true,
    ["toilamvidamme"] = true,
    ["oofficialnoobie"] = true,
    ["Uzoth"] = true,
    ["Azarth"] = true,
    ["arlthmetic"] = true,
    ["Death_King"] = true,
    ["Lunoven"] = true,
    ["TheGreateAced"] = true,
    ["rip_fud"] = true,
    ["drip_mama"] = true,
    ["layandikit12"] = true,
    ["Hingoi"] = true
}

AdminHop = Tabs.S:AddToggle("AdminHop", { Title = "Hop Server If Admin Join", Description = "", Default = _G.Settings.HopAdminJoin })
AdminHop:OnChanged(function(value)
    _G.HopIfAdminJoin = value    
    _G.Settings.HopAdminJoin = value
    SaveSettings()    
end)

spawn(function()
    while task.wait(1) do
        if _G.HopIfAdminJoin then
            for _, v in pairs(game.Players:GetPlayers()) do
                if targetPlayers[v.Name] then
                    Hop()
                    break
                end
            end
        end
    end
end)

AFK = Tabs.S:AddToggle("AFK", { Title = "Anti AFK", Description = "", Default = true })
AFK:OnChanged(function(value)
if value then
local vu = game:GetService("VirtualUser")
repeat wait() until game:IsLoaded()

game:GetService("Players").LocalPlayer.Idled:Connect(function()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
    vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    wait(1)
    vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
end)
end
end)

Rejoin = Tabs.S:AddToggle("Rejoin", { Title = "Rejoin Server If Disconnect", Description = "", Default = _G.Settings.Rejoin })
Rejoin:OnChanged(function(value)
    _G.AutoRejoin = value    
    _G.Settings.Rejoin = value
    SaveSettings()  
end)

spawn(function()
	    while wait() do
	        if _G.AutoRejoin then
	                getgenv().rejoin = game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
                        if child.Name == 'ErrorPrompt' and child:FindFirstChild('MessageArea') and child.MessageArea:FindFirstChild("ErrorFrame") then
                            game:GetService("TeleportService"):Teleport(game.PlaceId)
                        end
                     end)
	            end
	        end
	    end)

Notifi = Tabs.S:AddToggle("Notifi", { Title = "Remove Notification", Description = "", Default = _G.Settings.Notifi })
Notifi:OnChanged(function(value)
    _G.RemoveThongBao = value    
    _G.Settings.Notifi = value
    SaveSettings()    
end)

spawn(function()
	while wait() do
		if _G.RemoveThongBao then
			game.Players.LocalPlayer.PlayerGui.Notifications.Enabled = false
		else
			game.Players.LocalPlayer.PlayerGui.Notifications.Enabled = true
		end
	end
end)

Sound = Tabs.S:AddToggle("Sound", { Title = "Remove Sound", Description = "", Default = _G.Settings.Sound })
Sound:OnChanged(function(value)
    _G.RemoveAmThanh = value    
    _G.Settings.Sound = value
    SaveSettings()
end)

spawn(function()
    game:GetService("RunService").RenderStepped:Connect(function()
        if _G.RemoveAmThanh == true then
            game:GetService("ReplicatedStorage").Effect.Container.LevelUp:Destroy()
            game:GetService("ReplicatedStorage").Util.Sound:Destroy()
            game:GetService("ReplicatedStorage").Util.Sound.Storage.Other:FindFirstChild("LevelUp_Proxy"):Destroy()
            game:GetService("ReplicatedStorage").Util.Sound.Storage.Other:FindFirstChild("LevelUp"):Destroy()
            game:GetService("ReplicatedStorage").Effect.Container.Respawn:Destroy()        
        end
    end)
end)

Tabs.M:AddParagraph({
    Title = "Main Farm",
    Content = "-----"
})

ServerTime = Tabs.M:AddParagraph({
    Title = "Time Server:",
    Content = ""
})

function UpdateTime()
    local GameTime = math.floor(workspace.DistributedGameTime + 0.5)
    local Hour = math.floor(GameTime / (60^2)) % 24
    local Minute = math.floor(GameTime / (60^1)) % 60
    local Second = math.floor(GameTime / (60^0)) % 60
    ServerTime:SetDesc("[Server Time]: Hours: "..Hour.." Min: "..Minute.." Sec: "..Second)
end

spawn(function()
    while true do
        pcall(function()
            UpdateTime()
        end)
        wait(1)
    end
end)

Tabs.M:AddButton({
    Title = "Copy Link Discord",
    Callback = function()
        setclipboard("https://discord.gg/yqaMxpYJy8")
    end
})

Level = Tabs.M:AddToggle("Level", { Title = "Auto Farm Max Level", Description = "Farm Level 1-2600", Default = _G.Settings.StartFarmNek })
Level:OnChanged(function(value)
    _G.AutoFarm = value    
    _G.Settings.StartFarmNek = value
    SaveSettings()
    StopTween(_G.AutoFarm)
end)

spawn(function()
        while wait() do
            if _G.AutoFarm then
                pcall(function()
                    local QuestTitle = game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text
                    if not string.find(QuestTitle, NameMon) then
                        StartMagnet = false
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
                    end
                    if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
                        StartMagnet = false
                        CheckQuest()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest",NameQuest,LevelQuest)
                        if BypassTP then
                        if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - CFrameMon.Position).Magnitude > 1500 then
						BTP(CFrameMon)
						elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - CFrameMon.Position).Magnitude < 1500 then
						TP1(CFrameMon)
						end
					else
						TP1(CFrameMon)
					end
                    elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
                        CheckQuest()
                        if game:GetService("Workspace").Enemies:FindFirstChild(Mon) then
                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                                    if v.Name == Mon then
                                        if string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, NameMon) then
                                            repeat task.wait()
                                                EquipWeapon(_G.SelectWeapon)
                                                AutoHaki()                                            
                                                PosMon = v.HumanoidRootPart.CFrame
                                                TP1(v.HumanoidRootPart.CFrame * Pos)
                                                v.HumanoidRootPart.CanCollide = false
                                                v.Humanoid.WalkSpeed = 0
                                                v.Head.CanCollide = false
                                                v.HumanoidRootPart.Size = Vector3.new(70,70,70)
                                                StartMagnet = true
                                                game:GetService'VirtualUser':CaptureController()
                                                game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
                                            until not _G.AutoFarm or v.Humanoid.Health <= 0 or not v.Parent or game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false
                                        else
                                            StartMagnet = false
                                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
                                        end
                                    end
                                end
                            end
                        else
                            TP1(CFrameMon)
                            UnEquipWeapon(_G.SelectWeapon)
                            StartMagnet = false
                            if game:GetService("ReplicatedStorage"):FindFirstChild(Mon) then
                             TP1(game:GetService("ReplicatedStorage"):FindFirstChild(Mon).HumanoidRootPart.CFrame * CFrame.new(15,10,2))
                            end
                        end
                    end
                end)
            end
        end
    end)

Bone = Tabs.M:AddToggle("Bone", { Title = "Auto Farm Bone", Description = "", Default = _G.Settings.StartBoneNek })
Bone:OnChanged(function(value)
    _G.Bone = value    
    _G.Settings.StartBoneNek = value
    SaveSettings()
    StopTween(_G.Bone)
end)

local Bone = {
    ["Reborn Skeleton"] = CFrame.new(-8724.32227, 139.552002, 5959.23291, 0, 0, 1, 0, 1, -0, -1, 0, 0),
    ["Living Zombie"] = CFrame.new(-10283.6777, 138.796997, 5999.02295, 0.382687271, 0, 0.923877954, 0, 1, 0, -0.923877954, 0, 0.382687271),
    ["Demonic Soul"] = CFrame.new(-9517.19629, 172.223343, 6078.43848, -0.177305937, 0.157681227, -0.971441805, 0.0574468896, 0.987056494, 0.149730653, 0.982477725, -0.0292581618, -0.184069276),
    ["Posessed Mummy"] = CFrame.new(-9517.19629, 172.223343, 6078.43848, -0.177305937, 0.157681227, -0.971441805, 0.0574468896, 0.987056494, 0.149730653, 0.982477725, -0.0292581618, -0.184069276)
}
spawn(function()
    while task.wait(0.2) do
        if BonesBring then
            pcall(function()
                for _, v in ipairs(game.Workspace.Enemies:GetChildren()) do
                    if Bone[v.Name] and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                        v.HumanoidRootPart.CFrame = Bone[v.Name]
                        v.Head.CanCollide = false
                        v.Humanoid.Sit = false
                        v.Humanoid:ChangeState(11)
                        task.wait(0.1)
                        v.Humanoid:ChangeState(14)
                        v.HumanoidRootPart.CanCollide = false
                        v.Humanoid.JumpPower = 0
                        v.Humanoid.WalkSpeed = 0
                        local animator = v.Humanoid:FindFirstChild("Animator")
                        if animator then
                            animator:Destroy()
                        end
                        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                    end
                end
            end)
        end
    end
end)
BonePos = CFrame.new(-9506.234375, 172.130615234375, 6117.0771484375)

spawn(function()
    while wait(0.1) do
        if _G.Bone and World3 then
            pcall(function()
                if _G.QuestAccept then
                    local questGui = game.Players.LocalPlayer.PlayerGui.Main.Quest
                    local questTitle = questGui:FindFirstChild("Container") and questGui.Container:FindFirstChild("QuestTitle")
                    local hasQuest = questGui.Visible and questTitle and questTitle.Title.Text:find("Demonic Soul")

                    if not hasQuest then
                        BonesBring = false
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")

                        if BypassTP then
                            local playerPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                            if (playerPos - BonePos.Position).Magnitude > 1500 then
                                BTP(BonePos)
                            else
                                topos(BonePos)
                            end
                        else
                            topos(BonePos)
                        end

                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", "HauntedQuest2", 1)
                        wait(0.5)
                    end
                end

                local enemies = game:GetService("Workspace").Enemies:GetChildren()
                local foundEnemy = false
                for _, v in pairs(enemies) do
                    if v.Name == "Reborn Skeleton" or v.Name == "Living Zombie" or v.Name == "Demonic Soul" or v.Name == "Posessed Mummy" then
                        if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                            foundEnemy = true
                            repeat wait(0.1)
                                AutoHaki()
                                EquipWeapon(_G.SelectWeapon)
                                v.HumanoidRootPart.CanCollide = false
                                v.Humanoid.WalkSpeed = 0
                                v.Head.CanCollide = false
                                BonesBring = true
                                topos(v.HumanoidRootPart.CFrame * Pos)
                            until not _G.Bone or not v.Parent or v.Humanoid.Health <= 0
                        end
                    end
                end

                if not foundEnemy then
                    if BypassTP then
                        local playerPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                        if (playerPos - BonePos.Position).Magnitude > 1500 then
                            BTP(BonePos)
                        else
                            topos(BonePos)
                        end
                    else
                        topos(BonePos)
                    end

                    UnEquipWeapon(_G.SelectWeapon)
                    BonesBring = false
                    topos(CFrame.new(-9515, 164, 5786))

                    for _, v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
                        if v.Name == "Reborn Skeleton" or v.Name == "Living Zombie" or v.Name == "Demonic Soul" or v.Name == "Posessed Mummy" then
                            topos(v.HumanoidRootPart.CFrame * CFrame.new(2, 20, 2))
                        end
                    end
                end
            end)
        end
    end
end)

RanBone = Tabs.M:AddToggle("RanBone", { Title = "Auto Random Bone", Description = "", Default = _G.Settings.RanBone })
RanBone:OnChanged(function(value)
    _G.Auto_Random_Bone = value    
    _G.Settings.RanBone = value
    SaveSettings()    
end)

spawn(function()
        pcall(function()
            while wait(.1) do
                if _G.Auto_Random_Bone then    
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones","Buy",1,1)
                end
            end
        end)
    end)

CheckCake = Tabs.M:AddParagraph({
    Title = "Status Cake Prince:",
    Content = ""
})

spawn(function()
    while wait() do
        pcall(function()            
            if string.len(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner")) == 88 then
                CheckCake:SetDesc(""..string.sub(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner"),39,41).."")
            elseif string.len(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner")) == 87 then
                CheckCake:SetDesc(""..string.sub(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner"),39,40).."")
            elseif string.len(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner")) == 86 then
                CheckCake:SetDesc(""..string.sub(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner"),39,39).." ")
            else
                CheckCake:SetDesc("✅️Spawn")
            end
        end)
    end
end)

Cake = Tabs.M:AddToggle("Cake", { Title = "Auto Farm All Cake Prince", Description = "", Default = _G.Settings.StartCakeNek })
Cake:OnChanged(function(value)
    _G.Cake = value    
    _G.Settings.StartCakeNek = value
    SaveSettings()
    StopTween(_G.Cake)
end)

local Cake = {
    ["Cookie Crafter"] = CFrame.new(-2270.52905, 52.9949951, -12159.9785, -0.0449341536, -0.25486812, 0.965931237, -0.984802127, 0.173679709, 1.46925449e-05, -0.167766392, -0.951250553, -0.258798838),
    ["Cake Guard"] = CFrame.new(-1591.95801, 39.6470032, -12248.8896, -0.130574584, 0, -0.991438746, 0, 1, 0, 0.991438746, 0, -0.130574584),
    ["Baking Staff"] = CFrame.new(-1814.54797, 48.6410065, -12884.6904, -0.258864403, 0, 0.965913713, 0, 1, 0, -0.965913713, 0, -0.258864403),
    ["Head Baker"] = CFrame.new(-2248.06299, 49.2669983, -12945.7383, -0.707134247, 0, -0.707079291, 0, 1, 0, 0.707079291, 0, -0.707134247)
}
spawn(function()
    while task.wait(0.2) do
        if CakeBring then
            pcall(function()
                for _, v in pairs(game.Workspace.Enemies:GetChildren()) do
                    if Cake[v.Name] then
                        local targetCFrame = Cake[v.Name]
                        if targetCFrame then
                            v.HumanoidRootPart.CFrame = targetCFrame
                        end
                        v.Head.CanCollide = false
                        v.Humanoid.Sit = false
                        v.Humanoid:ChangeState(11)
                        task.wait(0.1)
                        v.Humanoid:ChangeState(14)
                        v.HumanoidRootPart.CanCollide = false
                        v.Humanoid.JumpPower = 0
                        v.Humanoid.WalkSpeed = 0
                        if v.Humanoid:FindFirstChild('Animator') then
                            v.Humanoid.Animator:Destroy()
                        end
                        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                    end
                end
            end)
        end
    end
end)
spawn(function()
    while task.wait(0.1) do
        if _G.Cake and World3 then
            pcall(function()
                game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CakePrinceSpawner")                
                if game.ReplicatedStorage:FindFirstChild("Cake Prince") or game:GetService("Workspace").Enemies:FindFirstChild("Cake Prince") then
                    if game:GetService("Workspace").Enemies:FindFirstChild("Cake Prince") then
                        for _, v in pairs(game.Workspace.Enemies:GetChildren()) do
                            if _G.Cake and v.Name == "Cake Prince" 
                                and v:FindFirstChild("HumanoidRootPart") 
                                and v:FindFirstChild("Humanoid") 
                                and v.Humanoid.Health > 0 then                                
                                repeat 
                                    game:GetService("RunService").Heartbeat:wait()
                                    AutoHaki()
                                    EquipWeapon(_G.SelectWeapon)
                                    v.HumanoidRootPart.CanCollide = false
                                    v.Humanoid.WalkSpeed = 0
                                    v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                    topos(v.HumanoidRootPart.CFrame * Pos)
                                until not _G.Cake or not v.Parent or v.Humanoid.Health <= 0
                            end
                        end
                    else
                        if game:GetService("Workspace").Map.CakeLoaf.BigMirror.Other.Transparency == 0 
                            and (CFrame.new(-1990.672607421875, 4532.99951171875, -14973.6748046875).Position 
                            - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude >= 2000 then                            
                            topos(CFrame.new(-2151.82153, 149.315704, -12404.9053))
                        end
                    end
                else
                    if game:GetService("Workspace").Enemies:FindFirstChild("Cookie Crafter") 
                        or game:GetService("Workspace").Enemies:FindFirstChild("Cake Guard") 
                        or game:GetService("Workspace").Enemies:FindFirstChild("Baking Staff") 
                        or game:GetService("Workspace").Enemies:FindFirstChild("Head Baker") then                        
                        for _, v in pairs(game.Workspace.Enemies:GetChildren()) do
                            if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                if (v.Name == "Cookie Crafter" or v.Name == "Cake Guard" 
                                    or v.Name == "Baking Staff" or v.Name == "Head Baker") 
                                    and v:FindFirstChild("HumanoidRootPart") 
                                    and v:FindFirstChild("Humanoid") 
                                    and v.Humanoid.Health > 0 then                                    
                                    repeat 
                                        game:GetService("RunService").Heartbeat:wait()
                                        AutoHaki()
                                        EquipWeapon(_G.SelectWeapon)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Humanoid.WalkSpeed = 0
                                        v.Head.CanCollide = false
                                        topos(v.HumanoidRootPart.CFrame * Pos)
                                        CakeBring = true
                                    until not _G.Cake or not v.Parent or v.Humanoid.Health <= 0
                                end
                            end
                        end
                    else
                        local CakePos = CFrame.new(-2077, 252, -12373)
                        if BypassTP then
                            BTP(CakePos)
                        else
                            topos(CakePos)
                        end
                    end
                    
                    if _G.QuestAccept then
                        local questGui = game.Players.LocalPlayer.PlayerGui.Main.Quest
                        local questTitle = questGui:FindFirstChild("Container") and questGui.Container:FindFirstChild("QuestTitle")
                        local hasQuest = questGui.Visible and questTitle and questTitle.Title.Text:find("Cake Quest")

                        if not hasQuest then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", "CakeQuest1", 1)
                        end
                    end
                end
            end)
        end
    end
end)

SpawnCake = Tabs.M:AddToggle("SpawnCake", { Title = "Spawn Cake Prince", Description = "", Default = true })
SpawnCake:OnChanged(function(value)
    if value then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner")
    end
end)

AcceptQuest = Tabs.M:AddToggle("AcceptQuest", { Title = "Accept Quest Bone / Cake Prince", Description = "", Default = _G.Settings.Quest })
AcceptQuest:OnChanged(function(value)
    _G.QuestAccept = value    
    _G.Settings.Quest = value
    SaveSettings()    
end)

Tabs.M:AddParagraph({
    Title = "Boss",
    Content = "-----"
})

if World1 then
    tableBoss = {
        "The Gorilla King", "Bobby", "Yeti", "Mob Leader", "Vice Admiral", 
        "Warden", "Chief Warden", "Swan", "Magma Admiral", "Fishman Lord", 
        "Wysper", "Thunder God", "Cyborg", "Saber Expert"
    }
elseif World2 then
    tableBoss = {
        "Diamond", "Jeremy", "Fajita", "Don Swan", "Smoke Admiral", 
        "Cursed Captain", "Darkbeard", "Order", "Awakened Ice Admiral", "Tide Keeper"
    }
elseif World3 then
    tableBoss = {
        "Stone", "Hydra Leader", "Kilo Admiral", "Captain Elephant", 
        "Beautiful Pirate", "rip_indra true form", "Longma", "Soul Reaper", 
        "Cake Queen", "Cake Prince", "Dough King", "Tyrant of the Skies"
    }
end

SBoss = Tabs.M:AddDropdown("SBoss", {
    Title = "Select Boss",
    Values = tableBoss,
    Multi = false,
    Default = _G.Settings.SBoss,
})
SBoss:SetValue(_G.Settings.SBoss)
SBoss:OnChanged(function(value)
SelectBoss = value
_G.Settings.SBoss = value
SaveSettings()
end)

FBoss = Tabs.M:AddToggle("FBoss", { Title = "Auto Farm Boss Select", Description = "", Default = _G.Settings.Boss })
FBoss:OnChanged(function(value)
    _G.Boss = value    
    _G.Settings.Boss = value
    SaveSettings()
    StopTween(_G.Boss)
end)

spawn(function()
    while task.wait(0.2) do
        if _G.Boss and BypassTP then
            pcall(function()
                local workspaceEnemies = game:GetService("Workspace").Enemies
                local selectBoss = SelectBoss
                local selectWeapon = _G.SelectWeapon
                local playerRoot = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                local boss = workspaceEnemies:FindFirstChild(selectBoss)
                if boss then
                    for _, v in pairs(workspaceEnemies:GetChildren()) do
                        if v.Name == selectBoss and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
                            local humanoid = v.Humanoid
                            local humanoidRootPart = v.HumanoidRootPart
                            if humanoid.Health > 0 then
                                repeat
                                    task.wait()
                                    AutoHaki()
                                    EquipWeapon(_G.SelectWeapon)
                                    if humanoidRootPart.CanCollide then
                                        humanoidRootPart.CanCollide = false
                                    end
                                    if humanoid.WalkSpeed ~= 0 then
                                        humanoid.WalkSpeed = 0
                                    end
                                    if humanoidRootPart.Size ~= Vector3.new(80, 80, 80) then
                                        humanoidRootPart.Size = Vector3.new(80, 80, 80)
                                    end
                                    topos(humanoidRootPart.CFrame * Pos)
                                until not _G.Boss or not v.Parent or humanoid.Health <= 0
                            end
                        end
                    end
                elseif game.ReplicatedStorage:FindFirstChild(selectBoss) then
                    local bossReplicated = game.ReplicatedStorage:FindFirstChild(selectBoss)
                    local bossRoot = bossReplicated.HumanoidRootPart
                    if (bossRoot.CFrame.Position - playerRoot.Position).Magnitude <= 1500 then
                        topos(bossRoot.CFrame)
                    else
                        BTP(bossRoot.CFrame)
                    end
                end
            end)
        end
    end
end)
spawn(function()
    while task.wait(0.2) do
        if _G.Boss and not BypassTP then
            pcall(function()
                local workspaceEnemies = game:GetService("Workspace").Enemies
                local selectBoss = SelectBoss
                local selectWeapon = SelectWeapon
                local boss = workspaceEnemies:FindFirstChild(selectBoss)
                if boss then
                    for _, v in pairs(workspaceEnemies:GetChildren()) do
                        if v.Name == selectBoss and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
                            local humanoid = v.Humanoid
                            local humanoidRootPart = v.HumanoidRootPart
                            if humanoid.Health > 0 then
                                repeat
                                    task.wait()
                                    AutoHaki()
                                    EquipWeapon(_G.SelectWeapon)
                                    if humanoidRootPart.CanCollide then
                                        humanoidRootPart.CanCollide = false
                                    end
                                    if humanoid.WalkSpeed ~= 0 then
                                        humanoid.WalkSpeed = 0
                                    end
                                    if humanoidRootPart.Size ~= Vector3.new(80, 80, 80) then
                                        humanoidRootPart.Size = Vector3.new(80, 80, 80)
                                    end
                                    topos(humanoidRootPart.CFrame * Pos)
                                until not _G.Boss or not v.Parent or humanoid.Health <= 0
                            end
                        end
                    end
                else
                    local replicatedBoss = game:GetService("ReplicatedStorage"):FindFirstChild(selectBoss)
                    if replicatedBoss then
                        topos(replicatedBoss.HumanoidRootPart.CFrame * CFrame.new(5, 10, 7))
                    end
                end
            end)
        end
    end
end)

AllBoss = Tabs.M:AddToggle("AllBoss", { Title = "Auto Farm All Boss In Server", Description = "", Default = _G.Settings.BossAll })
AllBoss:OnChanged(function(value)
    _G.AttackAllBoss = value    
    _G.Settings.BossAll = value
    SaveSettings()
    StopTween(_G.AttackAllBoss)
end)

spawn(function()
        while wait() do
            if _G.AttackAllBoss then
                pcall(function()
                    for i,v in pairs(game.ReplicatedStorage:GetChildren()) do
                        if (v.Name == "rip_indra" or v.Name == "Ice Admiral") or (v.Name == "Saber Expert" or v.Name == "The Saw" or v.Name == "Greybeard" or v.Name == "Mob Leader" or v.Name == "The Gorilla King" or v.Name == "Bobby" or v.Name == "Yeti" or v.Name == "Vice Admiral" or v.Name == "Warden" or v.Name == "Chief Warden" or v.Name == "Swan" or v.Name == "Magma Admiral" or v.Name == "Fishman Lord" or v.Name == "Wysper" or v.Name == "Thunder God" or v.Name == "Cyborg") or (v.Name == "Don Swan" or v.Name == "Diamond" or v.Name == "Jeremy" or v.Name == "Fajita" or v.Name == "Smoke Admiral" or v.Name == "Awakened Ice Admiral" or v.Name == "Tide Keeper" or v.Name == "Order" or v.Name == "Darkbeard") or (v.Name == "Stone" or v.Name == "Hydra Leader" or v.Name == "Kilo Admiral" or v.Name == "Captain Elephant" or v.Name == "Beautiful Pirate" or v.Name == "Cake Queen" or v.Name == "rip_indra True Form" or v.Name == "Longma" or v.Name == "Soul Reaper" or v.Name == "Cake Prince" or v.Name == "Dough King") then
                            if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 17000 then
                                repeat task.wait()
                                    AutoHaki()
                                    EquipWeapon(_G.SelectWeapon)
                                    v.Humanoid.WalkSpeed = 0
                                    v.HumanoidRootPart.CanCollide = false
                                    v.Head.CanCollide = false
                                    v.HumanoidRootPart.Size = Vector3.new(80,80,80)
                                    topos(v.HumanoidRootPart.CFrame*Pos)
                                    game:GetService'VirtualUser':CaptureController()
                                    game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
                                    sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",math.huge)
                                until v.Humanoid.Health <= 0 or _G.AttackAllBoss == false or not v.Parent
                            end                
                        end
                    end
                end)
            end
        end
    end)

Elite = Tabs.M:AddParagraph({
    Title = "Status Elite Hunter:",
    Content = ""
})

spawn(function()
    while wait(3) do
        pcall(function()            
            if game:GetService("ReplicatedStorage"):FindFirstChild("Diablo") or 
               game:GetService("ReplicatedStorage"):FindFirstChild("Deandre") or 
               game:GetService("ReplicatedStorage"):FindFirstChild("Urban") or 
               game:GetService("Workspace").Enemies:FindFirstChild("Diablo") or 
               game:GetService("Workspace").Enemies:FindFirstChild("Deandre") or 
               game:GetService("Workspace").Enemies:FindFirstChild("Urban") then
                Elite:SetDesc("✅ Spawn")
            else
                Elite:SetDesc("❌ Not Spawn")
            end            
        end)
    end
end)

EliteH = Tabs.M:AddToggle("EliteH", { Title = "Auto Farm Elite Hunter", Description = "", Default = _G.Settings.Elite })
EliteH:OnChanged(function(value)
    _G.AutoElitehunter = value    
    _G.Settings.Elite = value
    SaveSettings()
    StopTween(_G.AutoElitehunter)
end)

spawn(function()
    while wait() do
        if _G.AutoElitehunter and World3 then
            pcall(function()
                local QuestGui = game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest
                local QuestTitle = QuestGui.Container.QuestTitle.Title.Text
                
                if not QuestGui.Visible then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter") 
                    wait(1) 
                else
                    if string.find(QuestTitle, "Diablo") or string.find(QuestTitle, "Deandre") or string.find(QuestTitle, "Urban") then
                        local Enemies = game:GetService("Workspace").Enemies
                        local Target = Enemies:FindFirstChild("Diablo") or Enemies:FindFirstChild("Deandre") or Enemies:FindFirstChild("Urban")

                        if Target and Target:FindFirstChild("Humanoid") and Target:FindFirstChild("HumanoidRootPart") and Target.Humanoid.Health > 0 then
                            repeat task.wait()
                                AutoHaki()
                                EquipWeapon(_G.SelectWeapon)
                                Target.HumanoidRootPart.CanCollide = false
                                Target.Humanoid.WalkSpeed = 0
                                Target.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                topos(Target.HumanoidRootPart.CFrame * CFrame.new(0,20,0))
                                game:GetService("VirtualUser"):CaptureController()
                                game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                                sethiddenproperty(game:GetService("Players").LocalPlayer, "SimulationRadius", math.huge)
                            until _G.AutoElitehunter == false or Target.Humanoid.Health <= 0 or not Target.Parent
                        else
                            local Replicated = game:GetService("ReplicatedStorage")
                            local StoredTarget = Replicated:FindFirstChild("Diablo") or Replicated:FindFirstChild("Deandre") or Replicated:FindFirstChild("Urban")
                            
                            if StoredTarget then
                                topos(StoredTarget.HumanoidRootPart.CFrame * CFrame.new(0,20,0))
                            elseif _G.HopElite and Elite == "❌ Not Spawn" then
                                Hop()
                            end
                        end
                    end
                end
            end)
        end
    end
end)

HopElite = Tabs.M:AddToggle("HopElite", { Title = "Hop Farm Elite Hunter", Description = "", Default = _G.Settings.HopElite })
HopElite:OnChanged(function(value)
    if value and not _G.AutoElitehunter then
        Fluent:Notify({
            Title = "Notification",
            Content = "Pls Enable Auto Farm Elite Hunter",
            Duration = 8
        })
    end
    _G.HopElite = value    
    _G.Settings.HopElite = value
    SaveSettings()    
end)

Tabs.M:AddParagraph({
    Title = "Fully Boss",
    Content = "-----"
})

Tyrant = Tabs.M:AddToggle("Tyrant", { Title = "Auto Farm Tyrant of the Skies [ Fully ]", Description = "Sea 3 Only", Description = "", Default = _G.Settings.TyrantFull })
Tyrant:OnChanged(function(value)
    _G.FullyTyrant = value    
    _G.Settings.TyrantFull = value
    SaveSettings()
    StopTween(_G.FullyTyrant)
end)

local TikiPos = { 
    ["Isle Outlaw"] = CFrame.new(-16214.6426, 18.0590057, -231.332001, 0.224959731, 0, 0.974368095, 0, 1, 0, -0.974368095, 0, 0.224959731), 
    ["Island Boy"] = CFrame.new(-16821.1387, 59.8590088, -176.524994, -0.290469289, 0, 0.956884384, 0, 1, 0, -0.956884384, 0, -0.290469289), 
    ["Sun-kissed Warrior"] = CFrame.new(-16270.5537, 32.0599976, 1042.27405, -0.920131683, 0, 0.391609371, 0, 1, 0, -0.391609371, 0, -0.920131683), 
    ["Isle Champion"] = CFrame.new(-16820.7227, 18.0590057, 1081.64697, -0.22495985, 0, -0.974368095, 0, 1, 0, 0.974368095, 0, -0.22495985) 
}

spawn(function() 
    while task.wait(0.2) do 
        if TikiBring then 
            pcall(function() 
                for _, enemy in ipairs(workspace.Enemies:GetChildren()) do 
                    if TikiPos[enemy.Name] and enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then 
                        local hrp = enemy.HumanoidRootPart 
                        local humanoid = enemy.Humanoid

                        hrp.CFrame = TikiPos[enemy.Name]
                        hrp.CanCollide = false
                        enemy.Head.CanCollide = false

                        humanoid.Sit = false
                        humanoid:ChangeState(11)
                        task.wait(0.1)
                        humanoid:ChangeState(14)

                        humanoid.JumpPower = 0
                        humanoid.WalkSpeed = 0

                        local animator = humanoid:FindFirstChild("Animator")
                        if animator then
                            animator:Destroy()
                        end

                        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                    end
                end
            end)
        end
    end
end)

local FarmTiki1 = CFrame.new(-16423.8047, 146.953003, -123.602005, -0.999392033, 8.7369628e-08, -0.0348646119, 8.43748182e-08, 1, 8.7369628e-08, 0.0348646119, 8.43748182e-08, -0.999392033)
local FarmTiki2 = CFrame.new(-16593.5996, 155.350998, 1130.48096, 0.0870701671, 0.0561700463, -0.994617403, -0.542416334, 0.840109825, -3.94880772e-05, 0.835585654, 0.539500117, 0.103616059)

spawn(function() 
    while wait() do 
        if _G.FullyTyrant and _G.EyesCount ~= 4 and World3 then 
            pcall(function() 
                local enemyFolder = game:GetService("Workspace").Enemies 
                local targetList = { ["Isle Champion"] = true, ["Sun-kissed Warrior"] = true, ["Island Boy"] = true, ["Isle Outlaw"] = true }

                local foundEnemy = false

                for i, v in pairs(enemyFolder:GetChildren()) do
                    if targetList[v.Name] and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        foundEnemy = true
                        repeat task.wait()
                            AutoHaki()
                            TikiBring = true
                            EquipWeapon(_G.SelectWeapon)
                            v.HumanoidRootPart.CanCollide = false
                            v.Humanoid.WalkSpeed = 0
                            v.Head.CanCollide = false 
                            MakoriGayMag = true
                            PosGay = v.HumanoidRootPart.CFrame
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                        until not _G.FullyTyrant and _G.EyesCount == 4 or not v.Parent or v.Humanoid.Health <= 0
                        MakoriGayMag = false
                    end
                end

                if not foundEnemy then
                    local character = game.Players.LocalPlayer.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        local distanceToFarmTiki1 = (character.HumanoidRootPart.Position - FarmTiki1.Position).Magnitude
                        if distanceToFarmTiki1 > 1 then
                            topos(FarmTiki1)
                        else
                            wait(2)
                            local distanceToFarmTiki2 = (character.HumanoidRootPart.Position - FarmTiki2.Position).Magnitude
                            if distanceToFarmTiki2 > 1 then
                                topos(FarmTiki2)
                            end
                        end
                    end
                    TikiBring = false
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        end
    end
end)

local function isSkyBossAlive()
    local enemyFolder = workspace:FindFirstChild("Enemies")
    if not enemyFolder then return false end
    local boss = enemyFolder:FindFirstChild("Tyrant of the Skies")
    return boss and boss:FindFirstChild("Humanoid") and boss.Humanoid.Health > 0
end

local function attackSkyBoss()
    local enemyFolder = workspace:FindFirstChild("Enemies")
    for i, v in pairs(enemyFolder:GetChildren()) do
        if v.Name == "Tyrant of the Skies" and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
            repeat task.wait()
                EquipWeapon(_G.SelectWeapon)
                AutoHaki()
                v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                topos(v.HumanoidRootPart.CFrame * Pos)
                game:GetService("VirtualUser"):CaptureController()
                game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 670))
                v.HumanoidRootPart.Transparency = 1
                sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
            until v.Humanoid.Health <= 0 or not _G.FullyTyrant and _G.EyesCount == 4
        end
    end
end

local targetsty = {
    CFrame.new(-16335.1641, 158.167007, 1465.64404, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16288.6094, 158.167007, 1470.36804, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16258.001, 156.761002, 1461.40405, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16212.4688, 158.167007, 1466.34399, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16335.0967, 159.334, 1324.88599, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16286.0586, 155.949005, 1323.83801, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16250.335, 159.334, 1316.38904, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
}

spawn(function()
    while task.wait() do
        if _G.FullyTyrant and _G.EyesCount == 4 then
            AutoHaki()
            for _, target in ipairs(targetsty) do
                if not _G.FullyTyrant and _G.EyesCount == 4 then break end
                
                if isSkyBossAlive() then
                    attackSkyBoss()
                else
                    topos(target)
                    task.wait(0.5)

                    local char = game.Players.LocalPlayer.Character
                    if char and char:FindFirstChild("HumanoidRootPart") then
                        local dist = (char.HumanoidRootPart.Position - target.Position).Magnitude
                        if dist <= 1 then
                            equipAndUseSkill("Melee")
                            equipAndUseSkill("Sword")
                            equipAndUseSkill("Gun")
                            equipAndUseSkill("Blox Fruit")
                        wait(2)
                        end
                    end
                end
            end
        end
    end
end)

RipIndra = Tabs.M:AddToggle("RipIndra", { Title = "Auto Farm Rip Indra [ Fully ]", Description = "Sea 3 Only", Description = "", Default = _G.Settings.RipFull })
RipIndra:OnChanged(function(value)
    _G.FullyRip = value    
    _G.Settings.RipFull = value
    SaveSettings()
    StopTween(_G.FullyRip)
end)

spawn(function()
    while wait() do
        if _G.FullyRip then
            local Player = game:GetService("Players").LocalPlayer
            local Character = Player.Character or Player.CharacterAdded:Wait()
            local Position = Character:GetPivot().Position
            local CollectionService = game:GetService("CollectionService")
            local Chests = CollectionService:GetTagged("_ChestTagged")
            local Distance, Nearest = math.huge
            local HasValidChest = false
            local enemyFolder = game:GetService("Workspace").Enemies
            
            if World3 and enemyFolder:FindFirstChild("rip_indra true form") then
                for i,v in pairs(enemyFolder:GetChildren()) do
                    if v.Name == "rip_indra true form" and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        repeat task.wait()
                            EquipWeapon(_G.SelectWeapon)
                            AutoHaki()
                            v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 670))
                            v.HumanoidRootPart.Transparency = 1
                            sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                        until v.Humanoid.Health <= 0 or _G.FullyRip == false
                    end
                end
            else                
                if Player.Backpack:FindFirstChild("Sweet Chalice") or Character:FindFirstChild("Sweet Chalice") then
                    if Player.Backpack:FindFirstChild("God's Chalice") or Character:FindFirstChild("God's Chalice") then                        
                        local ReplicatedStorage = game:GetService("ReplicatedStorage")
                        local Remotes = ReplicatedStorage:WaitForChild("Remotes")

                        local args = {
    [1] = {
        ["StorageName"] = "Winter Sky",
        ["Type"] = "AuraSkin",
        ["Context"] = "Equip"
    }
}

game:GetService("ReplicatedStorage").Modules.Net:FindFirstChild("RF/FruitCustomizerRF"):InvokeServer(unpack(args))

                        wait(0.5)
                        repeat
                            topos(CFrame.new(-5420.16602, 1084.93994, -2666.82104, 0.390717864, 0, 0.92051065, 0, 1, 0, -0.92051065, 0, 0.390717864))
                            wait()
                        until _G.StopTween == true or _G.FullyRip == false or (Player.Character.HumanoidRootPart.Position - Vector3.new(-5420.16602, 1084.93994, -2666.82104, 0.390717864, 0, 0.92051065, 0, 1, 0, -0.92051065, 0, 0.390717864)).Magnitude <= 10

                        wait(0.5)
                        local args = {
    [1] = {
        ["StorageName"] = "Pure Red",
        ["Type"] = "AuraSkin",
        ["Context"] = "Equip"
    }
}

game:GetService("ReplicatedStorage").Modules.Net:FindFirstChild("RF/FruitCustomizerRF"):InvokeServer(unpack(args))

                        wait(0.5)
                        repeat
                            topos(CFrame.new(-5414.41406, 309.839996, -2212.45801, 0.374604106, -0, -0.92718488, 0, 1, -0, 0.92718488, 0, 0.374604106))
                            wait()
                        until _G.StopTween == true or _G.FullyRip == false or (Player.Character.HumanoidRootPart.Position - Vector3.new(-5414.41406, 309.839996, -2212.45801, 0.374604106, -0, -0.92718488, 0, 1, -0, 0.92718488, 0, 0.374604106)).Magnitude <= 10

                        wait(0.5)
                        local args = {
    [1] = {
        ["StorageName"] = "Snow White",
        ["Type"] = "AuraSkin",
        ["Context"] = "Equip"
    }
}

game:GetService("ReplicatedStorage").Modules.Net:FindFirstChild("RF/FruitCustomizerRF"):InvokeServer(unpack(args))

                        wait(0.5)
                        repeat
                            topos(CFrame.new(-4971.47607, 331.540009, -3720.03003, -0.92051065, 0, 0.390717506, 0, 1, 0, -0.390717506, 0, -0.92051065))
                            wait()
                        until _G.StopTween == true or _G.FullyRip == false or (Player.Character.HumanoidRootPart.Position - Vector3.new(-4971.47607, 331.540009, -3720.03003, -0.92051065, 0, 0.390717506, 0, 1, 0, -0.390717506, 0, -0.92051065)).Magnitude <= 10

                        wait(0.5)
                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,600))
                        wait(3)
                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,600))
                        break
                    end
                end
                
                for _, Chest in ipairs(Chests) do
                    local Magnitude = (Chest:GetPivot().Position - Position).Magnitude
                    if not Chest:GetAttribute("IsDisabled") and Magnitude < Distance then
                        Distance, Nearest = Magnitude, Chest
                        HasValidChest = true
                    end
                end

                if Nearest then
                    local ChestPosition = Nearest:GetPivot().Position
                    topos(CFrame.new(ChestPosition))
                elseif _G.FullyRip and _G.HopFully then
                    Hop()
                end
            end
        end
    end
end)

Soul = Tabs.M:AddToggle("Soul", { Title = "Auto Farm Soul Reaper [ Fully ]", Description = "Sea 3 Only", Description = "", Default = _G.Settings.SoulFull })
Soul:OnChanged(function(value)
    _G.FullySoul = value    
    _G.Settings.SoulFull = value
    SaveSettings()
    StopTween(_G.FullySoul)
    if not value then
        _G.Bone = false
        _G.Auto_Random_Bone = false
        StopTween(_G.Bone)
    end
end)

spawn(function()
    while wait() do
        if _G.FullySoul and World3 then
            pcall(function()
                local hasBoss = game:GetService("Workspace").Enemies:FindFirstChild("Soul Reaper")
                local hasEssence = game.Players.LocalPlayer.Backpack:FindFirstChild("Hallow Essence") or game.Players.LocalPlayer.Character:FindFirstChild("Hallow Essence")

                if hasBoss then
                    _G.Bone = false
                    _G.Auto_Random_Bone = false

                    for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                        if string.find(v.Name , "Soul Reaper") then
                            repeat task.wait()
                                EquipWeapon(_G.SelectWeapon)
                                AutoHaki()
                                v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                topos(v.HumanoidRootPart.CFrame*Pos)
                                game:GetService("VirtualUser"):CaptureController()
                                game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 670))
                                v.HumanoidRootPart.Transparency = 1
                                sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",math.huge)
                            until v.Humanoid.Health <= 0 or _G.FullySoul == false

                            if v.Humanoid.Health <= 0 then
                                _G.Bone = true
                                _G.Auto_Random_Bone = true
                            end
                        end
                    end

                elseif hasEssence then
                    _G.Bone = false
                    _G.Auto_Random_Bone = false

                    repeat 
                        topos(CFrame.new(-8932.322265625, 146.83154296875, 6062.55078125)) 
                        wait() 
                    until (CFrame.new(-8932.322265625, 146.83154296875, 6062.55078125).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 8

                    EquipWeapon("Hallow Essence")

                else
                    _G.Bone = true
                    _G.Auto_Random_Bone = true

                    if game:GetService("ReplicatedStorage"):FindFirstChild("Soul Reaper") then
                        topos(game:GetService("ReplicatedStorage"):FindFirstChild("Soul Reaper").HumanoidRootPart.CFrame * CFrame.new(2,20,2))
                    end
                end
            end)
        end
    end
end)

Law = Tabs.M:AddToggle("Law", { Title = "Auto Farm Law Koko [ Fully ]", Description = "Sea 2 Only", Description = "", Default = _G.Settings.Law })
Law:OnChanged(function(value)
    _G.FullyKoko = value    
    _G.Settings.Law = value
    SaveSettings()
    StopTween(_G.FullyKoko)
end)

spawn(function()
    while task.wait() do
        if _G.FullyKoko and World2 then
            local function SummonBoss()
                local law = {
                    [1] = "BlackbeardReward",
                    [2] = "Microchip",
                    [3] = "2"
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(law))

                task.wait(1)

                topos(CFrame.new(-6583.63818, 21.4980011, -4894.26221, 0.9510414, 0, 0.309063554, 0, 1, 0, -0.309063554, 0, 0.9510414))

                task.wait(1)

                local button = game:GetService("Workspace").Map.CircleIsland.RaidSummon.Button.Main.ClickDetector
                if button then
                    fireclickdetector(button)
                end

                task.wait(2)
            end

            local function KillBoss()
                while _G.FullyKoko do
                    task.wait()
                    pcall(function()
                        local enemies = game:GetService("Workspace").Enemies
                        local boss = enemies:FindFirstChild("Order")

                        if boss and boss:FindFirstChild("Humanoid") and boss:FindFirstChild("HumanoidRootPart") and boss.Humanoid.Health > 0 then
                            repeat
                                task.wait()
                                AutoHaki()
                                EquipWeapon(_G.SelectWeapon)
                                boss.HumanoidRootPart.CanCollide = false
                                boss.Humanoid.WalkSpeed = 0
                                boss.HumanoidRootPart.Size = Vector3.new(50, 50, 50)
                                topos(boss.HumanoidRootPart.CFrame * Pos)
                                sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                            until not _G.FullyKoko or not boss.Parent or boss.Humanoid.Health <= 0
                        end
                    end)
                    if not game:GetService("Workspace").Enemies:FindFirstChild("Order") then
                        break
                    end
                end
            end

            while _G.FullyKoko do
                if game:GetService("Workspace").Enemies:FindFirstChild("Order") then
                    KillBoss()
                else
                    SummonBoss()
                end
            end
        end
    end
end)

HopFully = Tabs.M:AddToggle("HopFully", { Title = "Hop Farm Boss Fully", Description = "Rip Indra Only", Default = _G.Settings.HopFull })
HopFully:OnChanged(function(value)
    if value and not _G.FullyRip then
        Fluent:Notify({
            Title = "Notification",
            Content = "Pls Enable Auto Farm Rip Indra [ Fully ]",
            Duration = 8
        })
    end
    _G.HopFully = value    
    _G.Settings.HopFull = value
    SaveSettings()   
end)

Tabs.M:AddParagraph({
    Title = "Farm Mastery",
    Content = "-----"
})

HealthMas = Tabs.M:AddSlider("HealthMas", {
     Title = "Health Kill Mob",
     Default = _G.Settings.Kill,
     Min = 1,
     Max = 100,
     Rounding = 0,
     Callback = function(value)
         KillAtMob = value
         _G.Settings.Kill = value
         SaveSettings()
    end
})

MasFruit = Tabs.M:AddToggle("MasFruit", { Title = "Auto Farm Mastery Fruits", Description = "", Default = _G.Settings.MasF })
MasFruit:OnChanged(function(value)
    _G.FarmMasFruit = value    
    _G.Settings.MasF = value
    SaveSettings()
    StopTween(_G.FarmMasFruit)
end)

spawn(function()
	while task.wait() do
		if _G.UseSkill then
			pcall(function()
				for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
					if v.Name == MonFarm and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health <= v.Humanoid.MaxHealth * KillAtMob / 100 then
						repeat
							game:GetService("RunService").Heartbeat:wait()
							EquipWeapon(game.Players.LocalPlayer.Data.DevilFruit.Value)
							topos(v.HumanoidRootPart.CFrame * Pos)
							PositionSkillMasteryDevilFruit = v.HumanoidRootPart.Position
							local df = game.Players.LocalPlayer.Character:FindFirstChild(game.Players.LocalPlayer.Data.DevilFruit.Value)
							if df then
								df.MousePos.Value = PositionSkillMasteryDevilFruit
								local DevilFruitMastery = df.Level.Value
								if SkillZ and DevilFruitMastery >= 1 then
									game:service('VirtualInputManager'):SendKeyEvent(true, "Z", false, game)
									wait()
									game:service('VirtualInputManager'):SendKeyEvent(false, "Z", false, game)
								end
								if SkillX and DevilFruitMastery >= 1 then
									game:service('VirtualInputManager'):SendKeyEvent(true, "X", false, game)
									wait()
									game:service('VirtualInputManager'):SendKeyEvent(false, "X", false, game)
								end
								if SkillC and DevilFruitMastery >= 1 then
									game:service('VirtualInputManager'):SendKeyEvent(true, "C", false, game)
									wait()
									game:service('VirtualInputManager'):SendKeyEvent(false, "C", false, game)
								end
								if SkillV and DevilFruitMastery >= 1 then
									game:service('VirtualInputManager'):SendKeyEvent(true, "V", false, game)
									wait()
									game:service('VirtualInputManager'):SendKeyEvent(false, "V", false, game)
								end
								if SkillF and DevilFruitMastery >= 1 then
									game:GetService("VirtualInputManager"):SendKeyEvent(true, "F", false, game)
									wait()
									game:GetService("VirtualInputManager"):SendKeyEvent(false, "F", false, game)
								end
							end
						until not _G.FarmMasFruit or not _G.UseSkill or v.Humanoid.Health == 0
					end
				end
			end)
		end
	end
end)

spawn(function()
	while wait() do
		if _G.FarmMasFruit then
			pcall(function()
				topos(CFrame.new(-9506.234375, 172.130615234375, 6117.0771484375))
			end)
			for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
				if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
					if v.Name == "Reborn Skeleton" or v.Name == "Living Zombie" or v.Name == "Demonic Soul" or v.Name == "Posessed Mummy" then
						repeat wait(_G.FastAttack)
							if v.Humanoid.Health <= v.Humanoid.MaxHealth * KillAtMob / 100 then
								_G.UseSkill = true
							else
								_G.UseSkill = false
								AutoHaki()
								BonesBring = true
								EquipWeapon(_G.SelectWeapon)
								topos(v.HumanoidRootPart.CFrame * Pos)
								v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
								v.HumanoidRootPart.Transparency = 1
								v.Humanoid.JumpPower = 0
								v.Humanoid.WalkSpeed = 0
								v.HumanoidRootPart.CanCollide = false
								FarmPos = v.HumanoidRootPart.CFrame
								MonFarm = v.Name
								AttackNoCoolDown()
							end
						until not _G.FarmMasFruit or not v.Parent or v.Humanoid.Health == 0
						BonesBring = false
						_G.UseSkill = false
					end
				end
			end
			for i, v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
				if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
					if v.Name == "Reborn Skeleton" or v.Name == "Living Zombie" or v.Name == "Demonic Soul" or v.Name == "Posessed Mummy" then
						topos(v.HumanoidRootPart.CFrame * Pos)
					end
				end
			end
		end
	end
end)

MasGun = Tabs.M:AddToggle("MasGun", { Title = "Auto Farm Mastery Gun", Description = "", Default = _G.Settings.MasG })
MasGun:OnChanged(function(value)
    _G.FarmMasGun = value    
    _G.Settings.MasG = value
    SaveSettings()
    StopTween(_G.FarmMasGun)
end)

spawn(function()
	while task.wait() do
		if _G.UseSkillGun then
			pcall(function()
				for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
					if v.Name == MonFarm and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health <= v.Humanoid.MaxHealth * KillAtMob / 100 then
						repeat
							game:GetService("RunService").Heartbeat:wait()
							EquipToolGun()
							topos(v.HumanoidRootPart.CFrame * Pos)
							PositionSkillMasteryGun = v.HumanoidRootPart.Position
							if SkillZ then
								game:service('VirtualInputManager'):SendKeyEvent(true, "Z", false, game)
								wait()
								game:service('VirtualInputManager'):SendKeyEvent(false, "Z", false, game)
							end
							if SkillX then
								game:service('VirtualInputManager'):SendKeyEvent(true, "X", false, game)
								wait()
								game:service('VirtualInputManager'):SendKeyEvent(false, "X", false, game)
							end
							if SkillC then
								game:service('VirtualInputManager'):SendKeyEvent(true, "C", false, game)
								wait()
								game:service('VirtualInputManager'):SendKeyEvent(false, "C", false, game)
							end
							if SkillV then
								game:service('VirtualInputManager'):SendKeyEvent(true, "V", false, game)
								wait()
								game:service('VirtualInputManager'):SendKeyEvent(false, "V", false, game)
							end
							if SkillF then
								game:GetService("VirtualInputManager"):SendKeyEvent(true, "F", false, game)
								wait()
								game:GetService("VirtualInputManager"):SendKeyEvent(false, "F", false, game)
							end
						until not _G.FarmMasGun or not _G.UseSkillGun or v.Humanoid.Health == 0
					end
				end
			end)
		end
	end
end)

spawn(function()
	while wait() do
		if _G.FarmMasGun then
			pcall(function()
				topos(CFrame.new(-9506.234375, 172.130615234375, 6117.0771484375))
			end)
			for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
				if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
					if v.Name == "Reborn Skeleton" or v.Name == "Living Zombie" or v.Name == "Demonic Soul" or v.Name == "Posessed Mummy" then
						repeat wait(_G.FastAttack)
							if v.Humanoid.Health <= v.Humanoid.MaxHealth * KillAtMob / 100 then
								_G.UseSkillGun = true
							else
								_G.UseSkillGun = false
								AutoHaki()
								BonesBring = true
								EquipWeapon(_G.SelectWeapon)
								topos(v.HumanoidRootPart.CFrame * Pos)
								v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
								v.HumanoidRootPart.Transparency = 1
								v.Humanoid.JumpPower = 0
								v.Humanoid.WalkSpeed = 0
								v.HumanoidRootPart.CanCollide = false
								FarmPos = v.HumanoidRootPart.CFrame
								MonFarm = v.Name
								AttackNoCoolDown()
							end
						until not _G.FarmMasGun or not v.Parent or v.Humanoid.Health == 0
						BonesBring = false
						_G.UseSkillGun = false
					end
				end
			end
			for i, v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
				if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
					if v.Name == "Reborn Skeleton" or v.Name == "Living Zombie" or v.Name == "Demonic Soul" or v.Name == "Posessed Mummy" then
						topos(v.HumanoidRootPart.CFrame * Pos)
					end
				end
			end
		end
	end
end)

function EquipToolGun()
	pcall(function()
		for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
			if v.ToolTip == "Gun" and v:IsA('Tool') then
				game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
			end
		end
	end)
end

Z = Tabs.M:AddToggle("Z", { Title = "Use Skill Z Farm Mastery", Description = "", Default = _G.Settings.ZMas })
Z:OnChanged(function(value)
    SkillZ = value    
    _G.Settings.ZMas = value
    SaveSettings()    
end)

X = Tabs.M:AddToggle("X", { Title = "Use Skill X Farm Mastery", Description = "", Default = _G.Settings.XMas })
X:OnChanged(function(value)
    SkillX = value    
    _G.Settings.XMas = value
    SaveSettings()  
end)

C = Tabs.M:AddToggle("C", { Title = "Use Skill C Farm Mastery", Description = "", Default = _G.Settings.CMas })
C:OnChanged(function(value)
    SkillC = value    
    _G.Settings.CMas = value
    SaveSettings()    
end)

V = Tabs.M:AddToggle("V", { Title = "Use Skill V Farm Mastery", Description = "", Default = _G.Settings.VMas })
V:OnChanged(function(value)
    SkillV = value    
    _G.Settings.VMas = value
    SaveSettings()    
end)

F = Tabs.M:AddToggle("F", { Title = "Use Skill F Farm Mastery", Description = "", Default = _G.Settings.FMas })
F:OnChanged(function(value)
    SkillF = value    
    _G.Settings.FMas = value
    SaveSettings()    
end)

Tabs.SF:AddParagraph({
    Title = "Dojo Trainer",
    Content = "-----"
})

White = Tabs.SF:AddToggle("White", { Title = "Auto Farm White Belt", Description = "Belt 1", Default = _G.Settings.White })
White:OnChanged(function(value)
    _G.WhiteBelt = value    
    _G.Settings.White = value
    SaveSettings()
    StopTween(_G.WhiteBelt)
end)

local FarmBeltW = CFrame.new(-16855.043, 122.457253, 1478.15308, -0.999392271, 0, -0.0348687991, 0, 1, 0, 0.0348687991, 0, -0.999392271)

spawn(function() 
    while wait() do 
        if _G.WhiteBelt and World3 then 
            pcall(function() 
                local enemyFolder = game:GetService("Workspace").Enemies 
                local targetList = { ["Skull Slayer"] = true }

                local foundEnemy = false

                for i, v in pairs(enemyFolder:GetChildren()) do
                    if targetList[v.Name] and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        foundEnemy = true
                        repeat task.wait()
                            AutoHaki()          
                            EquipWeapon(_G.SelectWeapon)
                            v.HumanoidRootPart.CanCollide = false
                            v.Humanoid.WalkSpeed = 0
                            v.Head.CanCollide = false 
                            MakoriGayMag = true
                            PosGay = v.HumanoidRootPart.CFrame
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                        until not _G.WhiteBelt or not v.Parent or v.Humanoid.Health <= 0
                        MakoriGayMag = false
                    end
                end

                if not foundEnemy then
                    local character = game.Players.LocalPlayer.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        local distanceToFarmBeltW = (character.HumanoidRootPart.Position - FarmBeltW.Position).Magnitude
                        if distanceToFarmBeltW > 5 then
                            topos(FarmBeltW)
                        end
                    end                    
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        end
    end
end)

Yellow = Tabs.SF:AddToggle("Yellow", { Title = "Auto Farm Yellow Belt", Description = "Belt 2", Default = false })
Yellow:OnChanged(function(value)
    _G.StartSea = value
	_G.Sharkk = value
	_G.CaDien = value
	_G.Terror = value
	_G.FishCrew = value		    	
    if not value then
	    StopTween(_G.StartSea)
		StopTween(_G.Sharkk)
		StopTween(_G.CaDien)
		StopTween(_G.FishCrew)
		StopTween(_G.Terror)
	end
end)

Orange = Tabs.SF:AddToggle("Orange", { Title = "Teleport Trade Fruits Orange Belt", Description = "Belt 3", Default = _G.Settings.Orange })
Orange:OnChanged(function(value)
    _G.Orange = value    
    _G.Settings.Orange = value
    SaveSettings()
    StopTween(_G.Orange)
end)

spawn(function()
    while wait() do
        pcall(function()
            if _G.Orange and World3 then
                topos(CFrame.new(-12591.4512, 335.955994, -7556.75684, 0, 0, -1, 0, 1, 0, 1, 0, 0))
                wait(3)
            end
        end)
    end
end)

Green = Tabs.SF:AddToggle("Green", { Title = "Auto Farm Green Belt", Description = "Belt 4", Default = _G.Settings.Green })
Green:OnChanged(function(value)
    _G.StartSea = value    
    _G.Settings.Green = value
    SaveSettings()
    StopTween(_G.StartSea)
end)

Purple = Tabs.SF:AddToggle("Purple", { Title = "Auto Farm Purple Belt", Description = "Belt 6", Default = _G.Settings.Purple })
Purple:OnChanged(function(value)
    _G.AutoElitehunter = value    
    _G.Settings.Purple = value
    SaveSettings()
    StopTween(_G.AutoElitehunter)
end)

Tabs.SF:AddParagraph({
    Title = "Dragon Hunter",
    Content = "-----"
})

QuestDra = Tabs.SF:AddParagraph({
    Title = "Status Quest Dragon Hunter:",
    Content = ""
})

drahun = ""

spawn(function()
    while wait(3) do
        pcall(function()
            drahun = ""
            local args = { [1] = {["Context"] = "Check"} }
            local response = game:GetService("ReplicatedStorage").Modules.Net:FindFirstChild("RF/DragonHunter"):InvokeServer(unpack(args))

            if typeof(response) == "table" then
                for _, value in pairs(response) do
                    if value == "Defeat 3 Venomous Assailants on Hydra Island." then
                        drahun = "Defeat 3 Venomous Assailants"
                    elseif value == "Defeated 1/3 Venomous Assailants on Hydra Island." then
                        drahun = "Defeat 3 Venomous Assailants" 
                    elseif value == "Defeated 2/3 Venomous Assailants on Hydra Island." then
                        drahun = "Defeat 3 Venomous Assailants"       
                    elseif value == "Defeat 3 Hydra Enforcers on Hydra Island." then
                        drahun = "Defeat 3 Hydra Enforcers"
                    elseif value == "Defeated 1/3 Hydra Enforcers on Hydra Island." then
                        drahun = "Defeat 3 Hydra Enforcers"    
                    elseif value == "Defeated 2/3 Hydra Enforcers on Hydra Island." then
                        drahun = "Defeat 3 Hydra Enforcers"    
                    elseif value == "Destroy 10 trees on Hydra Island." then
                        drahun = "Destroy 10 Tree On Hydra Island"
                    elseif value == "Destroyed 1/10 trees on Hydra Island." then
                        drahun = "Destroy 10 Tree On Hydra Island"
                    elseif value == "Destroyed 2/10 trees on Hydra Island." then
                        drahun = "Destroy 10 Tree On Hydra Island"
                    elseif value == "Destroyed 3/10 trees on Hydra Island." then
                        drahun = "Destroy 10 Tree On Hydra Island"
                    elseif value == "Destroyed 4/10 trees on Hydra Island." then
                        drahun = "Destroy 10 Tree On Hydra Island"    
                    elseif value == "Destroyed 5/10 trees on Hydra Island." then
                        drahun = "Destroy 10 Tree On Hydra Island"                
                    elseif value == "Destroyed 6/10 trees on Hydra Island." then
                        drahun = "Destroy 10 Tree On Hydra Island" 
                    elseif value == "Destroyed 7/10 trees on Hydra Island." then
                        drahun = "Destroy 10 Tree On Hydra Island"
                    elseif value == "Destroyed 8/10 trees on Hydra Island." then
                        drahun = "Destroy 10 Tree On Hydra Island"
                    elseif value == "Destroyed 9/10 trees on Hydra Island." then
                        drahun = "Destroy 10 Tree On Hydra Island"                       
                    end
                end
            end
            QuestDra:SetDesc("" .. drahun)
        end)
    end
end)

FarmDraQ = Tabs.SF:AddToggle("FarmDraQ", { Title = "Auto Farm Dragon Hunter Quest", Description = "Attack Mob, Destroy Tree + Collect Blaze Ember", Default = _G.Settings.DraQuest })
FarmDraQ:OnChanged(function(value)
    _G.DragonHunter = value    
    _G.Settings.DraQuest = value
    SaveSettings()
    StopTween(_G.DragonHunter)
end)


spawn(function()
    while wait() do
        if _G.DragonHunter then
            pcall(function()
                game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/DragonDojoEmber"):FireServer()
            end)
        end
    end
end)

spawn(function()
    while wait() do
        if _G.DragonHunter and drahun == "" then
            pcall(function()                
                topos(CFrame.new(5814.43, 1208.32, 884.57))
                local args = { [1] = {["Context"] = "RequestQuest"} }
                game:GetService("ReplicatedStorage").Modules.Net:FindFirstChild("RF/DragonHunter"):InvokeServer(unpack(args))
            end)
        end
    end
end)

local HydraPos = {
    ["Hydra Enforcer"] = CFrame.new(4482.42, 992.3, 521.08),
    ["Venomous Assailant"] = CFrame.new(4662.17, 1068.35, 1032.97),
}

spawn(function() 
    while task.wait(0.2) do 
        if HydraBring then 
            pcall(function() 
                for _, enemy in ipairs(workspace.Enemies:GetChildren()) do 
                    if HydraPos[enemy.Name] and enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then 
                        local hrp = enemy.HumanoidRootPart 
                        local humanoid = enemy.Humanoid

                        hrp.CFrame = HydraPos[enemy.Name]
                        hrp.CanCollide = false
                        enemy.Head.CanCollide = false

                        humanoid.Sit = false
                        humanoid:ChangeState(11)
                        task.wait(0.1)
                        humanoid:ChangeState(14)

                        humanoid.JumpPower = 0
                        humanoid.WalkSpeed = 0

                        local animator = humanoid:FindFirstChild("Animator")
                        if animator then
                            animator:Destroy()
                        end

                        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                    end
                end
            end)
        end
    end
end)

local DraQuestFarm = CFrame.new(4717.74, 1145.73, 748.87)

spawn(function()
    while wait() do
        if _G.DragonHunter and drahun == "Defeat 3 Venomous Assailants" then
            pcall(function()
                local found = false
                for _, v in pairs(workspace.Enemies:GetChildren()) do
                    if v.Name == "Venomous Assailant" and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        found = true
                        repeat task.wait()
                            AutoHaki()
                            HydraBring = true
                            EquipWeapon(_G.SelectWeapon)
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
                        until not _G.DragonHunter or not v.Parent or v.Humanoid.Health <= 0
                    end
                end

                if not found then
                    topos(DraQuestFarm)
                    HydraBring = false
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        end
    end
end)

spawn(function()
    while wait() do
        if _G.DragonHunter and drahun == "Defeat 3 Hydra Enforcers" then
            pcall(function()
                local found = false
                for _, v in pairs(workspace.Enemies:GetChildren()) do
                    if v.Name == "Hydra Enforcer" and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        found = true
                        repeat task.wait()
                            AutoHaki()
                            HydraBring = true
                            EquipWeapon(_G.SelectWeapon)
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
                        until not _G.DragonHunter or not v.Parent or v.Humanoid.Health <= 0
                    end
                end

                if not found then
                    topos(DraQuestFarm)
                    HydraBring = false
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        end
    end
end)
	
local function sendSkillKey(skillKey)
    local virtualInputManager = game:GetService("VirtualInputManager")
    virtualInputManager:SendKeyEvent(true, skillKey, false, game)
    virtualInputManager:SendKeyEvent(false, skillKey, false, game)
end

local function equipAndUseSkill(toolType)
    local player = game.Players.LocalPlayer
    local backpack = player.Backpack
    for _, item in pairs(backpack:GetChildren()) do
        if item:IsA("Tool") and item.ToolTip == toolType then
            item.Parent = player.Character  
            for _, skill in ipairs({"Z", "X", "C", "V", "F"}) do
                wait() 
                pcall(function() sendSkillKey(skill) end) 
            end
            item.Parent = backpack
            break
        end
    end
end

local targetstree = {
    CFrame.new(5223.85791, 1011.26703, 420.833008),
    CFrame.new(5269.84424, 1011.26703, 333.738007),
    CFrame.new(5359.29004, 1011.26703, 368.653992),
    CFrame.new(5312.2168, 1011.26703, 454.072998),
    CFrame.new(4943.45312, 1079.12402, 411.097992),
}

spawn(function()
    while wait() do
        if _G.DragonHunter and drahun == "Destroy 10 Tree On Hydra Island" then
            AutoHaki()
            for _, target in ipairs(targetstree) do
                if drahun ~= "Destroy 10 Tree On Hydra Island" then break end
                topos(target)
                wait()
                local character = game.Players.LocalPlayer.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local distance = (character.HumanoidRootPart.Position - target.Position).Magnitude
                    if distance <= 1 then
                        equipAndUseSkill("Melee")
                        equipAndUseSkill("Sword")
                        equipAndUseSkill("Gun")
                    end
                end
            end
        end
    end
end)

Tabs.SF:AddParagraph({
    Title = "Tyrant of the Skies",
    Content = "-----"
})

EyesTyrant = Tabs.SF:AddParagraph({
    Title = "Status Eyes Tyrant:",
    Content = ""
})

spawn(function()
    while wait(3) do
        pcall(function()
            local model = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("TikiOutpost") and workspace.Map.TikiOutpost:FindFirstChild("IslandModel")
            local visibleCount = 0
            if model then
                for i = 1, 4 do
                    local eye = model:FindFirstChild("Eye" .. i)
                    if eye and eye:IsA("BasePart") and eye.Transparency == 0 then
                        visibleCount = visibleCount + 1
                    end
                end
            end
            
            _G.EyesCount = visibleCount
            
            EyesTyrant:SetDesc(tostring(visibleCount) .. " Eyes")            
        end)
    end
end)

local TikiMob = {"Mob Tiki 1","Mob Tiki 2","All Mob Tiki"}

MobTiki = Tabs.SF:AddDropdown("MobTiki", {
    Title = "Select Mob Farm Tiki",
    Values = TikiMob,
    Multi = false,
    Default = _G.Settings.TikiFarm,
})
MobTiki:SetValue(_G.Settings.TikiFarm)
MobTiki:OnChanged(function(value)
_G.MobTiki = value
_G.Settings.TikiFarm = value
SaveSettings()
end)

FarmTiki = Tabs.SF:AddToggle("FarmTiki", { Title = "Auto Farm Mob Tiki", Description = "", Default = _G.Settings.MobTiki })
FarmTiki:OnChanged(function(value)
    _G.AttackTiki = value    
    _G.Settings.MobTiki = value
    SaveSettings()
    StopTween(_G.AttackTiki)
end)

spawn(function() 
    while wait() do 
        if _G.AttackTiki and _G.MobTiki == "Mob Tiki 1" and World3 then 
            pcall(function() 
                local enemyFolder = game:GetService("Workspace").Enemies 
                local targetList = { ["Island Boy"] = true, ["Isle Outlaw"] = true }

                local foundEnemy = false

                for i, v in pairs(enemyFolder:GetChildren()) do
                    if targetList[v.Name] and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        foundEnemy = true
                        repeat task.wait()
                            AutoHaki()
                            TikiBring = true
                            EquipWeapon(_G.SelectWeapon)
                            v.HumanoidRootPart.CanCollide = false
                            v.Humanoid.WalkSpeed = 0
                            v.Head.CanCollide = false 
                            MakoriGayMag = true
                            PosGay = v.HumanoidRootPart.CFrame
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                        until not _G.AttackTiki or not v.Parent or v.Humanoid.Health <= 0
                        MakoriGayMag = false
                    end
                end

                if not foundEnemy then
                    local character = game.Players.LocalPlayer.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        local distanceToFarmTiki1 = (character.HumanoidRootPart.Position - FarmTiki1.Position).Magnitude
                        if distanceToFarmTiki1 > 5 then
                            topos(FarmTiki1)
                        end
                    end
                    TikiBring = false
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        end
    end
end)

spawn(function() 
    while wait() do 
        if _G.AttackTiki and _G.MobTiki == "Mob Tiki 2" and World3 then 
            pcall(function() 
                local enemyFolder = game:GetService("Workspace").Enemies 
                local targetList = { ["Isle Champion"] = true, ["Sun-kissed Warrior"] = true }

                local foundEnemy = false

                for i, v in pairs(enemyFolder:GetChildren()) do
                    if targetList[v.Name] and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        foundEnemy = true
                        repeat task.wait()
                            AutoHaki()
                            TikiBring = true
                            EquipWeapon(_G.SelectWeapon)
                            v.HumanoidRootPart.CanCollide = false
                            v.Humanoid.WalkSpeed = 0
                            v.Head.CanCollide = false 
                            MakoriGayMag = true
                            PosGay = v.HumanoidRootPart.CFrame
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                        until not _G.AttackTiki or not v.Parent or v.Humanoid.Health <= 0
                        MakoriGayMag = false
                    end
                end

                if not foundEnemy then
                    local character = game.Players.LocalPlayer.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        local distanceToFarmTiki2 = (character.HumanoidRootPart.Position - FarmTiki2.Position).Magnitude
                        if distanceToFarmTiki2 > 5 then
                            topos(FarmTiki2)
                        end
                    end
                    TikiBring = false
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        end
    end
end)

spawn(function() 
    while wait() do 
        if _G.AttackTiki and _G.MobTiki == "All Mob Tiki" and World3 then 
            pcall(function() 
                local enemyFolder = game:GetService("Workspace").Enemies 
                local targetList = { ["Isle Champion"] = true, ["Sun-kissed Warrior"] = true, ["Island Boy"] = true, ["Isle Outlaw"] = true }

                local foundEnemy = false

                for i, v in pairs(enemyFolder:GetChildren()) do
                    if targetList[v.Name] and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        foundEnemy = true
                        repeat task.wait()
                            AutoHaki()
                            TikiBring = true
                            EquipWeapon(_G.SelectWeapon)
                            v.HumanoidRootPart.CanCollide = false
                            v.Humanoid.WalkSpeed = 0
                            v.Head.CanCollide = false 
                            MakoriGayMag = true
                            PosGay = v.HumanoidRootPart.CFrame
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                        until not _G.AttackTiki or not v.Parent or v.Humanoid.Health <= 0
                        MakoriGayMag = false
                    end
                end

                if not foundEnemy then
                    local character = game.Players.LocalPlayer.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        local distanceToFarmTiki1 = (character.HumanoidRootPart.Position - FarmTiki1.Position).Magnitude
                        if distanceToFarmTiki1 > 1 then
                            topos(FarmTiki1)
                        else
                            wait(2)
                            local distanceToFarmTiki2 = (character.HumanoidRootPart.Position - FarmTiki2.Position).Magnitude
                            if distanceToFarmTiki2 > 1 then
                                topos(FarmTiki2)
                            end
                        end
                    end
                    TikiBring = false
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        end
    end
end)

SummonTy = Tabs.SF:AddToggle("SummonTy", { Title = "Summon Tyrant of the Skies", Description = "", Default = _G.Settings.SummonSkies })
SummonTy:OnChanged(function(value)
    _G.SummonTyrant = value    
    _G.Settings.SummonSkies = value
    SaveSettings()
    StopTween(_G.SummonTyrant)
end)

local function sendSkillKey(skillKey)
    local virtualInputManager = game:GetService("VirtualInputManager")
    virtualInputManager:SendKeyEvent(true, skillKey, false, game)
    virtualInputManager:SendKeyEvent(false, skillKey, false, game)
end
local function equipAndUseSkill(toolType)
    local player = game.Players.LocalPlayer
    local backpack = player.Backpack
    for _, item in pairs(backpack:GetChildren()) do
        if item:IsA("Tool") and item.ToolTip == toolType then
            item.Parent = player.Character  
            for _, skill in ipairs({"Z", "X", "C", "V", "F"}) do
                wait() 
                pcall(function() sendSkillKey(skill) end) 
            end
            item.Parent = backpack
            break
        end
    end
end
local targetstyrant = {
    CFrame.new(-16335.1641, 158.167007, 1465.64404, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16288.6094, 158.167007, 1470.36804, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16258.001, 156.761002, 1461.40405, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16212.4688, 158.167007, 1466.34399, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16335.0967, 159.334, 1324.88599, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16286.0586, 155.949005, 1323.83801, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16250.335, 159.334, 1316.38904, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
}
spawn(function()
    while wait() do
        if _G.SummonTyrant and World3 then
            AutoHaki()  
            for _, target in ipairs(targetstyrant) do
                if not _G.SummonTyrant then break end 
                topos(target) 
                wait()
                local character = game.Players.LocalPlayer.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local distance = (character.HumanoidRootPart.Position - target.Position).Magnitude
                    if distance <= 1 then
                        equipAndUseSkill("Melee")
                        equipAndUseSkill("Sword")
                        equipAndUseSkill("Gun")
                        equipAndUseSkill("Blox Fruit")
                        wait(2)
                    end
                end
            end
        end
    end
end)

SkullSummonTy = Tabs.SF:AddToggle("SkullSummonTy", { Title = "Use Skull Guitar Summon Tyrant of the Skies", Description = "", Default = _G.Settings.SkullSummonSkies })
SkullSummonTy:OnChanged(function(value)
    _G.UseSkullSummon = value    
    _G.Settings.SkullSummonSkies = value
    SaveSettings()
    StopTween(_G.UseSkullSummon)
end)

local targetsskull = {
    CFrame.new(-16335.1641, 158.167007, 1465.64404, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16288.6094, 158.167007, 1470.36804, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16258.001, 156.761002, 1461.40405, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16212.4688, 158.167007, 1466.34399, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16335.0967, 159.334, 1324.88599, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16286.0586, 155.949005, 1323.83801, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
    CFrame.new(-16250.335, 159.334, 1316.38904, 0.999388874, 0, 0.0349550731, 0, 1, 0, -0.0349550731, 0, 0.999388874),
}

spawn(function()
    while task.wait(1) do
        if _G.UseSkullSummon and World3 then
            pcall(function()
                for _, target in ipairs(targetsskull) do
                    topos(target) 
                    task.wait(2)   

                    local targetPos = target.Position
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadItem","Skull Guitar")

                    if game.Players.LocalPlayer.Character:FindFirstChild("Skull Guitar") or game.Players.LocalPlayer.Backpack:FindFirstChild("Skull Guitar") then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild("Skull Guitar") then
                            EquipWeapon("Skull Guitar")
                        end

                        local player = game.Players.LocalPlayer
                        local character = player.Character or player.CharacterAdded:Wait()
                        local guitar = character:FindFirstChild("Skull Guitar")
                        if not guitar or not guitar:FindFirstChild("RemoteEvent") then return end

                        guitar.RemoteEvent:FireServer("TAP", targetPos)
                        game:GetService("ReplicatedStorage").Remotes.Validator2:FireServer(8359618, 0)
                        task.wait(0.5)
                    end
                end
            end)
        end
    end
end)

AttackTy = Tabs.SF:AddToggle("AttackTy", { Title = "Auto Attack Tyrant of the Skies", Description = "", Default = _G.Settings.Tyrant })
AttackTy:OnChanged(function(value)
    _G.AttackTy = value    
    _G.Settings.Tyrant = value
    SaveSettings()
    StopTween(_G.AttackTy)
end)

local SkyBossCFrame = CFrame.new(-16178.3105, 149.261002, 1430.26196, -0.0348494053, 0, -0.999392569, 0, 1, 0, 0.999392569, 0, -0.0348494053)

spawn(function()
    while wait() do
        if _G.AttackTy and World3 then
            pcall(function()
                local enemyFolder = game:GetService("Workspace").Enemies
                if enemyFolder:FindFirstChild("Tyrant of the Skies") then
                    for i,v in pairs(enemyFolder:GetChildren()) do
                        if v.Name == "Tyrant of the Skies" and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                            repeat task.wait()
                                EquipWeapon(_G.SelectWeapon)
                                AutoHaki()
                                v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                topos(v.HumanoidRootPart.CFrame * Pos)
                                game:GetService("VirtualUser"):CaptureController()
                                game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 670))
                                v.HumanoidRootPart.Transparency = 1
                                sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                            until v.Humanoid.Health <= 0 or _G.AttackTy == false
                        end
                    end
                else
                    topos(SkyBossCFrame)
                end
            end)
        end
    end
end)

Tabs.SF:AddParagraph({
    Title = "Chest",
    Content = "-----"
})

Chest = Tabs.SF:AddToggle("Chest", { Title = "Auto Collect Chest", Description = "", Default = _G.Settings.ChestT })
Chest:OnChanged(function(value)
    _G.AutoCollectChest = value    
    _G.Settings.ChestT = value
    SaveSettings()
    StopTween(_G.AutoCollectChest)
end)

spawn(function()
    while wait() do
        if _G.AutoCollectChest then
            local Player = game:GetService("Players").LocalPlayer
            local Character = Player.Character or Player.CharacterAdded:Wait()
            local Position = Character:GetPivot().Position
            local CollectionService = game:GetService("CollectionService")
            local Chests = CollectionService:GetTagged("_ChestTagged") 
            local Distance, Nearest = math.huge
            local HasValidChest = false
            
            if _G.Settings.Stop and (
                Player.Backpack:FindFirstChild("Fist of Darkness") or Character:FindFirstChild("Fist of Darkness") or
                Player.Backpack:FindFirstChild("Sweet Chalice") or Character:FindFirstChild("Sweet Chalice") or
                Player.Backpack:FindFirstChild("God's Chalice") or Character:FindFirstChild("God's Chalice")
            ) then
                break
            end
            
            for i, Chest in ipairs(Chests) do
                local Magnitude = (Chest:GetPivot().Position - Position).Magnitude
                if not Chest:GetAttribute("IsDisabled") and Magnitude < Distance then
                    Distance, Nearest = Magnitude, Chest
                    HasValidChest = true
                end
            end
            
            if Nearest then
                local ChestPosition = Nearest:GetPivot().Position
                topos(CFrame.new(ChestPosition))
            elseif _G.ChestHop then
                Hop()
            end
        end
    end
end)

Stop = Tabs.SF:AddToggle("Stop", { Title = "Stop If Fist of Darkness / God's Chalice", Description = "", Default = _G.Settings.Stop })
Stop:OnChanged(function(value)
    _G.Settings.Stop = value    
    SaveSettings()    
end)

HopChest = Tabs.SF:AddToggle("HopChest", { Title = "Hop Server Collect Chest", Description = "", Default = _G.Settings.HopChest })
HopChest:OnChanged(function(value)
    if value and not _G.AutoCollectChest then
        Fluent:Notify({
            Title = "Notification",
            Content = "Pls Enable Auto Collect Chest",
            Duration = 8
        })
    end
    _G.ChestHop = value    
    _G.Settings.HopChest = value
    SaveSettings()   
end)

Tabs.O:AddParagraph({
    Title = "Farm Sea",
    Content = "-----"
})

if World3 then
PiratesRaid = Tabs.O:AddToggle("PiratesRaid", { Title = "Auto Farm Pirates Raid", Description = "", Default = _G.Settings.Piraid })
PiratesRaid:OnChanged(function(value)
    _G.TapKichHaiTac = value    
    _G.Settings.Piraid = value
    SaveSettings()
    StopTween(_G.TapKichHaiTac)
end)

task.spawn(function()
    local maxDist = 1000
    local targetPos = Vector3.new(-5508.47998, 324.688995, -2995.97607)
    local vu = game:GetService("VirtualUser")

    while task.wait(0.1) do
        if not _G.TapKichHaiTac then
            task.wait(0.5)
            continue
        end

        local player = game.Players.LocalPlayer
        local char = player.Character
        if not char or not char:FindFirstChild("HumanoidRootPart") then
            task.wait(0.5)
            continue
        end

        local hrp = char.HumanoidRootPart
        if (hrp.Position - targetPos).Magnitude > 5 then
            topos(CFrame.new(targetPos))
        end

        local found = false
        for _, enemy in ipairs(game.Workspace.Enemies:GetChildren()) do
            local hum = enemy:FindFirstChild("Humanoid")
            local root = enemy:FindFirstChild("HumanoidRootPart")
            if hum and root and hum.Health > 0 and (root.Position - targetPos).Magnitude <= maxDist then
                found = true
                repeat task.wait(0.1)
                    EquipWeapon(_G.SelectWeapon)
                    if not char:FindFirstChild("HasBuso") then
                        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("Buso")
                    end
                    topos(root.CFrame)
                    root.CanCollide = false
                    root.Size = Vector3.new(60, 60, 60)
                    PosMon = root.CFrame

                    vu:CaptureController()
                    vu:SetKeyDown("0x57")
                    vu:Button1Down(Vector2.new(0, 0), game.Workspace.CurrentCamera.CFrame)
                until not _G.TapKichHaiTac or not enemy.Parent or hum.Health <= 0

                vu:SetKeyUp("0x57")
            end
        end
    end
end)
end

if World2 then
Factory = Tabs.O:AddToggle("Factory", { Title = "Auto Farm Factory", Description = "", Default = _G.Settings.Factory })
Factory:OnChanged(function(value)
    _G.Factoryy = value    
    _G.Settings.Factory = value
    SaveSettings()
    StopTween(_G.Factoryy)
end)

spawn(function()
            while wait() do
                pcall(function()
                    if _G.Factoryy then
                        if game:GetService("Workspace").Enemies:FindFirstChild("Core") then
                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                if v.Name == "Core" and v.Humanoid.Health > 0 then
                                    repeat task.wait()
                                        AutoHaki()         
                                        EquipWeapon(_G.SelectWeapon)           
                                        topos(CFrame.new(448.46756, 199.356781, -441.389252))                                  
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                                    until v.Humanoid.Health <= 0 or _G.Factoryy == false
                                end
                            end
                        else
                            topos(CFrame.new(448.46756, 199.356781, -441.389252))
                        end
                    end
                end)
            end
        end)
end

Tabs.O:AddParagraph({
    Title = "Mirage Island",
    Content = "-----"
})

Mystic = Tabs.O:AddParagraph({
    Title = "Status Mirage Island:",
    Content = ""
})

spawn(function()
    while wait(3) do
        pcall(function()            
            if game.Workspace._WorldOrigin.Locations:FindFirstChild("Mirage Island") then
                Mystic:SetDesc("✅ Spawn")
            else
                Mystic:SetDesc("❌ Not Spawn")
            end            
        end)
    end
end)

FindMi = Tabs.O:AddToggle("FindMi", { Title = "Auto Find Mirage Island", Description = "", Default = _G.Settings.FindMirage })
FindMi:OnChanged(function(value)
    _G.AutoFindMystic = value    
    _G.Settings.FindMirage = value
    SaveSettings()
    StopTween(_G.AutoFindMystic)
end)

local seatHistory = {}
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Workspace = game:GetService("Workspace")
local SetSpeedBoat = 350  

RunService.RenderStepped:Connect(function()
    for boatName, seat in pairs(seatHistory) do
        if seat and seat.Parent and seat.Name == "VehicleSeat" and not seat.Occupant then
            seatHistory[boatName] = seat
        end
    end
end)

local function tpToMyBoat()
    for boatName, seat in pairs(seatHistory) do
        if seat and seat.Parent and seat.Name == "VehicleSeat" and not seat.Occupant then
            topos(seat.CFrame)
        end
    end
end

spawn(function()
    while wait() do
        pcall(function()
            if _G.AutoFindMystic then
                local LocalPlayer = game.Players.LocalPlayer
                local MyBoat = nil

                for _, boat in pairs(Workspace.Boats:GetChildren()) do
                    if boat.Name == "Guardian" and boat:FindFirstChild("Owner") and boat.Owner.Value == LocalPlayer then
                        MyBoat = boat
                        break
                    end
                end

                if not MyBoat then
                    buyb = TPP(CFrame.new(-17064.3008, 103.064011, 881.570007, 0.207885921, 0, 0.97815311, 0, 1, 0, -0.97815311, 0, 0.207885921))
                    if (LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(-17064.3008, 103.064011, 881.570007, 0.207885921, 0, 0.97815311, 0, 1, 0, -0.97815311, 0, 0.207885921)).Magnitude <= 10 then
                        if buyb then buyb:Stop() end
                        local args = {
                            [1] = "BuyBoat",
                            [2] = "Guardian"
                        }
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    end
                elseif MyBoat then
                    local seat = MyBoat:FindFirstChild("VehicleSeat")
                    if seat and LocalPlayer.Character:FindFirstChild("Humanoid").Sit == false then
                        TPP(seat.CFrame * CFrame.new(0,1,0))
                    end
                end
            end
        end)
    end
end)

local isTeleporting = false
local notified = false
RunService.RenderStepped:Connect(function()
    if not _G.AutoFindMystic then
        notified = false
        return
    end
    local player = Players.LocalPlayer
    local character = player.Character
    if not character or not character:FindFirstChild("Humanoid") then return end
    
    local function tpToMyBoat()
        if isTeleporting then return end
        isTeleporting = true
        for boatName, seat in pairs(seatHistory) do
            if seat and seat.Parent and seat.Name == "VehicleSeat" and not seat.Occupant then
                topos(seat.CFrame)
                break
            end
        end
        isTeleporting = false
    end
    
    local humanoid = character.Humanoid
    local boatFound = false
    local currentBoat = nil
    
    for _, b in pairs(Workspace.Boats:GetChildren()) do
        local seat = b:FindFirstChild("VehicleSeat")
        if seat and seat.Occupant == humanoid then
            boatFound = true
            currentBoat = seat
            seatHistory[b.Name] = seat
        elseif seat and seat.Occupant == nil then
            tpToMyBoat()
        end
    end

    if not boatFound then return end
    
    currentBoat.MaxSpeed = SetSpeedBoat
    currentBoat.CFrame = CFrame.new(Vector3.new(currentBoat.Position.X, currentBoat.Position.Y, currentBoat.Position.Z)) * currentBoat.CFrame.Rotation
    VirtualInputManager:SendKeyEvent(true, "W", false, game)

    for _, v in pairs(Workspace.Boats:GetDescendants()) do
        if v:IsA("BasePart") then v.CanCollide = false end
    end
    for _, v in pairs(character:GetDescendants()) do
        if v:IsA("BasePart") then v.CanCollide = false end
    end

    local islandsToDelete = { 
        "ShipwreckIsland", 
        "SandIsland", 
        "TreeIsland",
        "TinyIsland", 
        "PrehistoricIsland", 
        "KitsuneIsland", 
        "FrozenDimension" 
    }
    for _, islandName in ipairs(islandsToDelete) do
        local island = Workspace.Map:FindFirstChild(islandName)
        if island and island:IsA("Model") then
            island:Destroy()
        end
    end

    local mysticIsland = Workspace.Map:FindFirstChild("MysticIsland")
    if mysticIsland then
        VirtualInputManager:SendKeyEvent(false, "W", false, game)
        
         sendWebhook("Notification", "Mirage Island Spawn")
        _G.AutoFindMystic = false
        Fluent:Notify({
            Title = "Notification",
            Content = "Mirage Island Spawn",
            Duration = 5
        })
        game.Players.LocalPlayer.Character.Humanoid.Sit = false
        _G.TeleportMirage = true

        if not notified then
            notified = true
        end
        return
    end
end)

TpMi = Tabs.O:AddToggle("TpMi", { Title = "Teleport Mirage Island", Description = "", Default = _G.Settings.TpMirage })
TpMi:OnChanged(function(value)
    _G.TeleportMirage = value    
    _G.Settings.TpMirage = value
    SaveSettings()
    StopTween(_G.TeleportMirage)
end)

spawn(function()
    pcall(function()
    while wait() do
        if _G.TeleportMirage then
            if game:GetService("Workspace").NPCs:FindFirstChild("Advanced Fruit Dealer") then
                topos(CFrame.new(game:GetService("Workspace").NPCs["Advanced Fruit Dealer"].HumanoidRootPart.Position))
                end
            end
        end
    end)
end)

LookMoon = Tabs.O:AddToggle("LookMoon", { Title = "Look Moon", Description = "", Default = _G.Settings.Look })
LookMoon:OnChanged(function(value)
    _G.MoonLook = value    
    _G.Settings.Look = value
    SaveSettings()    
end)

function CamToMoon()
workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position,game:GetService("Lighting"):GetMoonDirection() + workspace.CurrentCamera.CFrame.Position)
end

spawn(function()
pcall(function()
while wait() do
if _G.MoonLook then
   CamToMoon()
end
end
end)
end)

Tabs.O:AddParagraph({
    Title = "Observation Haki",
    Content = "-----"
})

Ob = Tabs.O:AddParagraph({
    Title = "Level Observation Haki:",
    Content = ""
})

spawn(function()
    while wait(3) do
        pcall(function()            
            local value = game:GetService("Players").LocalPlayer:FindFirstChild("VisionRadius")
            if value then
                Ob:SetDesc("" .. math.floor(value.Value))
            end
        end)
    end
end)

FarmOb = Tabs.O:AddToggle("FarmOb", { Title = "Auto Farm Observation Haki", Description = "", Default = _G.Settings.HakiObser })
FarmOb:OnChanged(function(value)
    _G.FarmObser = value    
    _G.Settings.HakiObser = value
    SaveSettings()
    StopTween(_G.FarmObser)
end)

spawn(function()
    while wait() do
        pcall(function()
            if _G.FarmObser then               
                game:GetService('VirtualUser'):CaptureController()
                game:GetService('VirtualUser'):SetKeyDown('0x65')
                wait(2)
                game:GetService('VirtualUser'):SetKeyUp('0x65')
                
                repeat task.wait()
                    if not game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") then
                        game:GetService('VirtualUser'):CaptureController()
                        game:GetService('VirtualUser'):SetKeyDown('0x65')
                        wait(2)
                        game:GetService('VirtualUser'):SetKeyUp('0x65')
                    end
                until game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") or not _G.FarmObser
            end
        end)
    end
end)

spawn(function()
        pcall(function()
            while wait() do
                if _G.FarmObser then
                    if game:GetService("Players").LocalPlayer.VisionRadius.Value >= 2999 then
                        Fluent:Notify({
                            Title = "Notification",
                            Content = "Max Point Haki Observation",
                            Duration = 8
                        })
                        _G.FarmObser = false
                        wait(2)
                    else
                        if World2 then
                            if game:GetService("Workspace").Enemies:FindFirstChild("Lava Pirate [Lv. 1200]") then
                                if game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") then
                                    repeat task.wait()
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Enemies:FindFirstChild("Lava Pirate").HumanoidRootPart.CFrame * CFrame.new(3,0,0)
                                    until _G.FarmObser == false or not game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel")
                                else
                                    repeat task.wait()
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Enemies:FindFirstChild("Lava Pirate").HumanoidRootPart.CFrame * CFrame.new(0,50,0)+
                                            wait(1)
                                        if not game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") and _G.HopObser == true then
                                            game:GetService("TeleportService"):Teleport(game.PlaceId,game:GetService("Players").LocalPlayer)
                                        end
                                    until _G.FarmObser == false or game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel")
                                end
                            else
                                topos(CFrame.new(-5478.39209, 15.9775667, -5246.9126))
                            end
                        elseif World1 then
                            if game:GetService("Workspace").Enemies:FindFirstChild("Galley Captain") then
                                if game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") then
                                    repeat task.wait()
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Enemies:FindFirstChild("Galley Captain").HumanoidRootPart.CFrame * CFrame.new(3,0,0)
                                    until _G.FarmObser == false or not game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel")
                                else
                                    repeat task.wait()
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Enemies:FindFirstChild("Galley Captain").HumanoidRootPart.CFrame * CFrame.new(0,50,0)
                                        wait(1)
                                        if not game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") and _G.HopObser == true then
                                            game:GetService("TeleportService"):Teleport(game.PlaceId,game:GetService("Players").LocalPlayer)
                                        end
                                    until _G.FarmObser == false or game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel")
                                end
                            else
                                topos(CFrame.new(5533.29785, 88.1079102, 4852.3916))
                            end
                        elseif World3 then
                            if game:GetService("Workspace").Enemies:FindFirstChild("Venomous Assailant") then
                                if game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") then
                                    repeat task.wait()
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Enemies:FindFirstChild("Venomous Assailant").HumanoidRootPart.CFrame * CFrame.new(3,0,0)
                                    until _G.FarmObser == false or not game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel")
                                else
                                    repeat task.wait()
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Enemies:FindFirstChild("Venomous Assailant").HumanoidRootPart.CFrame * CFrame.new(0,50,0)
                                        wait(1)
                                        if not game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") and _G.HopObser == true then
                                            game:GetService("TeleportService"):Teleport(game.PlaceId,game:GetService("Players").LocalPlayer)
                                        end
                                    until _G.FarmObser == false or game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel")
                                end
                            else
                                topos(CFrame.new(4599.875, 1080.63184, 888.004333, -0.119759351, -0.273801446, 0.954301119, -0.150435477, 0.955124617, 0.255158961, -0.981339455, -0.113003023, -0.155574545))
                            end
                        end
                    end
                end
            end
        end)
    end)

HopOb = Tabs.O:AddToggle("HopOb", { Title = "Hop Farm Observation Haki", Description = "", Default = _G.Settings.HopObser })
HopOb:OnChanged(function(value)
    if value and not _G.FarmObser then
        Fluent:Notify({
            Title = "Notification",
            Content = "Pls Enable Auto Farm Haki Observation",
            Duration = 8
        })
    end
    _G.HopObser = value    
    _G.Settings.HopObser = value
    SaveSettings()   
end)

Tabs.I:AddParagraph({
    Title = "Melee",
    Content = "-----"
})

Karate = Tabs.I:AddToggle("Karate", { Title = "Auto Farm Sharkman Karate [ Fully ]", Description = "Farm Mastery Fishman, Farm Key Water and Get Sharkman", Default = _G.Settings.SharkMan })
Karate:OnChanged(function(value)
    _G.AutoSharkMan = value    
    _G.Settings.SharkMan = value
    SaveSettings()
    if not value then
	    _G.AutoFarm = false
		StopTween(_G.AutoFarm)    
	end
end)

local TideKee = CFrame.new(-3740.021, 71.9830017, -11710.9189, 0.121901691, -0, -0.992542267, 0, 1, -0, 0.992542267, 0, 0.121901691)

spawn(function()
        while wait() do wait()
            if _G.AutoSharkMan then
                if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Fishman Karate") or game:GetService("Players").LocalPlayer.Character:FindFirstChild("Fishman Karate") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Sharkman Karate") or game:GetService("Players").LocalPlayer.Character:FindFirstChild("Sharkman Karate") then
                    if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Fishman Karate") and game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Fishman Karate").Level.Value >= 450 then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate")
                    elseif string.find(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate"), "keys") then
                    if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Water Key") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Water Key") then   
                        _G.SelectWeapon = "Sharkman Karate"
                    elseif _G.AutoSharkMan and World2 then 
            pcall(function() 
                local enemyFolder = game:GetService("Workspace").Enemies 
                local targetList = { ["Tide Keeper"] = true }

                local foundEnemy = false

                for i, v in pairs(enemyFolder:GetChildren()) do
                    if targetList[v.Name] and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        foundEnemy = true
                        repeat task.wait()
                            AutoHaki()         
                            EquipWeapon(_G.SelectWeapon)
                            v.HumanoidRootPart.CanCollide = false
                            v.Humanoid.WalkSpeed = 0
                            v.Head.CanCollide = false 
                            MakoriGayMag = true
                            PosGay = v.HumanoidRootPart.CFrame
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                        until not _G.AttackTiki or not v.Parent or v.Humanoid.Health <= 0
                        MakoriGayMag = false
                    end
                end

                if not foundEnemy then
                    local character = game.Players.LocalPlayer.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        local distanceToTideKee = (character.HumanoidRootPart.Position - TideKee.Position).Magnitude
                        if distanceToTideKee > 5 then
                            topos(TideKee)
                        end
                    end
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        end
                    end  
                    if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Fishman Karate") and game:GetService("Players").LocalPlayer.Character:FindFirstChild("Fishman Karate").Level.Value >= 450 then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate")
                        Fluent:Notify({
                            Title = "Notification",
                            Content = "Done Sharkman Karate",
                            Duration = 8
                        })
                        _G.AutoSharkMan = false
                        _G.SelectWeapon = "Sharkman Karate"
                    end  
                    if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Fishman Karate") and game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Fishman Karate").Level.Value <= 449 then
                        _G.SelectWeapon = "Fishman Karate"
                        _G.AutoFarm = true
                    end 
                else 
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyFishmanKarate")
                end
            end
        end
    end)

Tabs.I:AddParagraph({
    Title = "Sword",
    Content = "-----"
})

Saber = Tabs.I:AddToggle("Saber", { Title = "Auto Farm Saber", Description = "Sea 1 Only", Default = _G.Settings.Saber })
Saber:OnChanged(function(value)
    _G.Auto_Saber = value    
    _G.Settings.Saber = value
    SaveSettings()
    StopTween(_G.Auto_Saber)
end)

spawn(function()
        while task.wait() do
            if _G.Auto_Saber and World1 and game.Players.LocalPlayer.Data.Level.Value >= 200 then
                pcall(function()
                    if game:GetService("Workspace").Map.Jungle.Final.Part.Transparency == 0 then
                        if game:GetService("Workspace").Map.Jungle.QuestPlates.Door.Transparency == 0 then
                            if (CFrame.new(-1612.55884, 36.9774132, 148.719543, 0.37091279, 3.0717151e-09, -0.928667724, 3.97099491e-08, 1, 1.91679348e-08, 0.928667724, -4.39869794e-08, 0.37091279).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 100 then
                                topos(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame)
                                wait(1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Jungle.QuestPlates.Plate1.Button.CFrame
                                wait(1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Jungle.QuestPlates.Plate2.Button.CFrame
                                wait(1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Jungle.QuestPlates.Plate3.Button.CFrame
                                wait(1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Jungle.QuestPlates.Plate4.Button.CFrame
                                wait(1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Jungle.QuestPlates.Plate5.Button.CFrame
                                wait(1)
                            else
                                topos(CFrame.new(-1612.55884, 36.9774132, 148.719543, 0.37091279, 3.0717151e-09, -0.928667724, 3.97099491e-08, 1, 1.91679348e-08, 0.928667724, -4.39869794e-08, 0.37091279))
                            end
                        else
                            if game:GetService("Workspace").Map.Desert.Burn.Part.Transparency == 0 then
                                if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Torch") or game.Players.LocalPlayer.Character:FindFirstChild("Torch") then
                                    EquipWeapon("Torch")
                                    topos(CFrame.new(1114.61475, 5.04679728, 4350.22803, -0.648466587, -1.28799094e-09, 0.761243105, -5.70652914e-10, 1, 1.20584542e-09, -0.761243105, 3.47544882e-10, -0.648466587))
                                  else
                                  topos(CFrame.new(-1610.00757, 11.5049858, 164.001587, 0.984807551, -0.167722285, -0.0449818149, 0.17364943, 0.951244235, 0.254912198, 3.42372805e-05, -0.258850515, 0.965917408))
                                end
                            else
                                if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","SickMan") ~= 0 then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","GetCup")
                                    wait(0.5)
                                    EquipWeapon("Cup")
                                    wait(0.5)
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","FillCup",game:GetService("Players").LocalPlayer.Character.Cup)
                                    wait(0)
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","SickMan")
                                else
                                    if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","RichSon") == nil then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","RichSon")
                                    elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","RichSon") == 0 then
                                    if game:GetService("Workspace").Enemies:FindFirstChild("Mob Leader") or game:GetService("ReplicatedStorage"):FindFirstChild("Mob Leader") then
										topos(CFrame.new(-2967.59521, -4.91089821, 5328.70703, 0.342208564, -0.0227849055, 0.939347804, 0.0251603816, 0.999569714, 0.0150796166, -0.939287126, 0.0184739735, 0.342634559)) 
                                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                                if v.Name == "Mob Leader" then
                                                   if game:GetService("Workspace").Enemies:FindFirstChild("Mob Leader [Lv. 120] [Boss]") then
                                                    if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                                        repeat task.wait()
                                                        AutoHaki()
                                                        EquipWeapon(_G.SelectWeapon)
                                                        v.HumanoidRootPart.CanCollide = false
                                                        v.Humanoid.WalkSpeed = 0
                                                        v.HumanoidRootPart.Size = Vector3.new(80,80,80)                             
                                                        topos(v.HumanoidRootPart.CFrame * Pos)
                                                        game:GetService("VirtualUser"):CaptureController()
                                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                                                        sethiddenproperty(game:GetService("Players").LocalPlayer,"SimulationRadius",math.huge)
                                                        until v.Humanoid.Health <= 0 or not _G.Auto_Saber
                                                     end
                                                end
                                                if game:GetService("ReplicatedStorage"):FindFirstChild("Mob Leader") then
                                                    topos(game:GetService("ReplicatedStorage"):FindFirstChild("Mob Leader").HumanoidRootPart.CFrame * Farm_Mode)
                                                end
                                            end
                                        end
                                     end
                                    elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","RichSon") == 1 then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","RichSon")
                                        wait(0.5)
                                        EquipWeapon("Relic")
                                        wait(0.5)
                                        topos(CFrame.new(-1404.91504, 29.9773273, 3.80598116, 0.876514494, 5.66906877e-09, 0.481375456, 2.53851997e-08, 1, -5.79995607e-08, -0.481375456, 6.30572643e-08, 0.876514494))
                                    end
                                end
                            end
                        end
                    else
                        if game:GetService("Workspace").Enemies:FindFirstChild("Saber Expert") or game:GetService("ReplicatedStorage"):FindFirstChild("Saber Expert") then
                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    if v.Name == "Saber Expert" then
                                        repeat task.wait()
                                            EquipWeapon(_G.SelectWeapon)
                                            topos(v.HumanoidRootPart.CFrame * Pos)
                                            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                            v.HumanoidRootPart.Transparency = 1
                                            v.Humanoid.JumpPower = 0
                                            v.Humanoid.WalkSpeed = 0
                                            v.HumanoidRootPart.CanCollide = false
                                            --v.Humanoid:ChangeState(11)
                                            --v.Humanoid:ChangeState(14)
                                            FarmPos = v.HumanoidRootPart.CFrame
                                            MonFarm = v.Name
                                            game:GetService'VirtualUser':CaptureController()
                                            game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672),workspace.CurrentCamera.CFrame)
                                        until v.Humanoid.Health <= 0 or not _G.Auto_Saber
                                        if v.Humanoid.Health <= 0 then
                                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","PlaceRelic")
                                        end
                                    end
                                elseif _G.HopFarmSword then
                                    Hop()
                                end
                            end
                        end
                    end
                end)
            end
        end
    end)

DraTri = Tabs.I:AddToggle("DraTri", { Title = "Auto Farm Dragon Trident", Description = "Sea 1 Only", Default = _G.Settings.TridentDra })
DraTri:OnChanged(function(value)
    _G.Auto_Dragon_Trident = value    
    _G.Settings.TridentDra = value
    SaveSettings()
    StopTween(_G.Auto_Dragon_Trident)
end)

local TridentPos = CFrame.new(-3914.830322265625, 123.29389190673828, -11516.8642578125)
    spawn(function()
        while wait() do
            if  _G.Auto_Dragon_Trident and World2 then
                pcall(function()
                    if game:GetService("Workspace").Enemies:FindFirstChild("Tide Keeper") then
                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                            if v.Name == "Tide Keeper" then
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    repeat task.wait()
                                        AutoHaki()
                                        EquipWeapon(_G.SelectWeapon)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Humanoid.WalkSpeed = 0
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        topos(v.HumanoidRootPart.CFrame * Pos)
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                                        sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",math.huge)
                                    until not  _G.Auto_Dragon_Trident or not v.Parent or v.Humanoid.Health <= 0
                                end
                            end
                        end
                    else
                    if BypassTP then
                    if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - TridentPos.Position).Magnitude > 1500 then
			        BTP(TridentPos)
				    elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - TridentPos.Position).Magnitude < 1500 then
				    topos(TridentPos)
					end
				else
				    topos(TridentPos)
				end
				    UnEquipWeapon(_G.SelectWeapon)
                    topos(CFrame.new(-3914.830322265625, 123.29389190673828, -11516.8642578125))
                        if game:GetService("ReplicatedStorage"):FindFirstChild("Tide Keeper") then
                            topos(game:GetService("ReplicatedStorage"):FindFirstChild("Tide Keeper").HumanoidRootPart.CFrame * CFrame.new(2,20,2))
                        elseif _G.HopFarmSword then
                            Hop()
                        end
                    end
                end)
            end
        end
    end)

Yama = Tabs.I:AddToggle("Yama", { Title = "Auto Farm Yama [ Fully ]", Description = "Farm Elite Get Yama, Sea 3 Only", Default = _G.Settings.Yama })
Yama:OnChanged(function(value)
    _G.AutoYama = value    
    _G.Settings.Yama = value
    SaveSettings()
    if not value then
	    _G.AutoElitehunter = false
		StopTween(_G.AutoElitehunter)
	end
end)

spawn(function()
    pcall(function()
        while wait() do
            if _G.AutoYama then
                local progress = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter","Progress")
                if progress < 30 then
                    _G.AutoElitehunter = true
                    if _G.HopFarmSword then
                        _G.HopElite = true
                    end
                elseif progress >= 30 then
                    _G.AutoElitehunter = false 
                    _G.HopElite = false
                    repeat wait()
                        fireclickdetector(game:GetService("Workspace").Map.Waterfall.SealedKatana.Handle.ClickDetector)
                    until game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Yama") or not _G.AutoYama
                    if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Yama") then
                        Fluent:Notify({
                            Title = "Notification",
                            Content = "Done Yama",
                            Duration = 8
                        })
                        _G.AutoYama = false
                    end
                end
            end
        end
    end)
end)

Cdk = Tabs.I:AddToggle("Cdk", { Title = "Auto Farm Cursed Dual Katana", Description = "Sea 3 Only", Default = _G.Settings.CDK })
Cdk:OnChanged(function(value)
    _G.CDK = value    
    _G.Settings.CDK = value
    SaveSettings()
    StopTween(_G.CDK)
end)

spawn(function()
        while wait() do
            pcall(function()
                if _G.CDK then
                    if game.Players.LocalPlayer.Character:FindFirstChild("Tushita") or game.Players.LocalPlayer.Backpack:FindFirstChild("Tushita") or game.Players.LocalPlayer.Character:FindFirstChild("Yama") or game.Players.LocalPlayer.Backpack:FindFirstChild("Yama") then
                        if game.Players.LocalPlayer.Character:FindFirstChild("Tushita") or game.Players.LocalPlayer.Backpack:FindFirstChild("Tushita") then
                            if game.Players.LocalPlayer.Backpack:FindFirstChild("Tushita") then
                                EquipWeapon("Tushita")
                            end
                        elseif game.Players.LocalPlayer.Character:FindFirstChild("Yama") or game.Players.LocalPlayer.Backpack:FindFirstChild("Yama") then
                            if game.Players.LocalPlayer.Backpack:FindFirstChild("Yama") then
                                EquipWeapon("Yama")
                                
                            end
                        end
                    else
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadItem","Tushita")
                    end
                end
            end)
        end
    end)
    spawn(function()
        while wait() do
            pcall(function()
                if _G.CDK then
                    if GetMaterial("Alucard Fragment") == 0 then
                        Auto_Quest_Yama_1 = true
                        Auto_Quest_Yama_2 = false
                        Auto_Quest_Yama_3 = false
                        Auto_Quest_Tushita_1 = false
                        Auto_Quest_Tushita_2 = false
                        Auto_Quest_Tushita_3 = false
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Evil")
                    elseif GetMaterial("Alucard Fragment") == 1 then
                        Auto_Quest_Yama_1 = false
                        Auto_Quest_Yama_2 = true
                        Auto_Quest_Yama_3 = false
                        Auto_Quest_Tushita_1 = false
                        Auto_Quest_Tushita_2 = false
                        Auto_Quest_Tushita_3 = false
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Evil")
                    elseif GetMaterial("Alucard Fragment") == 2 then
                        Auto_Quest_Yama_1 = false
                        Auto_Quest_Yama_2 = false
                        Auto_Quest_Yama_3 = true
                        Auto_Quest_Tushita_1 = false
                        Auto_Quest_Tushita_2 = false
                        Auto_Quest_Tushita_3 = false
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Evil")
                    elseif GetMaterial("Alucard Fragment") == 3 then
                        Auto_Quest_Yama_1 = false
                        Auto_Quest_Yama_2 = false
                        Auto_Quest_Yama_3 = false
                        Auto_Quest_Tushita_1 = true
                        Auto_Quest_Tushita_2 = false
                        Auto_Quest_Tushita_3 = false
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Good")
                    elseif GetMaterial("Alucard Fragment") == 4 then
                        Auto_Quest_Yama_1 = false
                        Auto_Quest_Yama_2 = false
                        Auto_Quest_Yama_3 = false
                        Auto_Quest_Tushita_1 = false
                        Auto_Quest_Tushita_2 = true
                        Auto_Quest_Tushita_3 = false
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Good")
                    elseif GetMaterial("Alucard Fragment") == 5 then
                        Auto_Quest_Yama_1 = false
                        Auto_Quest_Yama_2 = false
                        Auto_Quest_Yama_3 = false
                        Auto_Quest_Tushita_1 = false
                        Auto_Quest_Tushita_2 = false
                        Auto_Quest_Tushita_3 = true
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Good")
                    elseif GetMaterial("Alucard Fragment") == 6 then
                        if game:GetService("Workspace").Enemies:FindFirstChild("Cursed Skeleton Boss [Lv. 2025] [Boss]") or game:GetService("Workspace").ReplicatedStorage:FindFirstChild("Cursed Skeleton Boss [Lv. 2025] [Boss]") then
                            Auto_Quest_Yama_1 = false
                            Auto_Quest_Yama_2 = false
                            Auto_Quest_Yama_3 = false
                            Auto_Quest_Tushita_1 = false
                            Auto_Quest_Tushita_2 = false
                            Auto_Quest_Tushita_3 = false
                            if game:GetService("Workspace").Enemies:FindFirstChild("Cursed Skeleton Boss [Lv. 2025] [Boss]") or game:GetService("Workspace").Enemies:FindFirstChild("Cursed Skeleton [Lv. 2200]") then
                                for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                    if v.Name == "Cursed Skeleton Boss" or v.Name == "Cursed Skeleton" then
                                        if v.Humanoid.Health > 0 then
                                            EquipWeapon("Yama")
                                            topos(v.HumanoidRootPart.CFrame * CFrame.new(0, 34, 4))
                                            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                            v.HumanoidRootPart.Transparency = 1
                                            v.Humanoid.JumpPower = 0
                                            v.Humanoid.WalkSpeed = 0
                                            v.HumanoidRootPart.CanCollide = false
                                            PosMon = v.HumanoidRootPart.CFrame
                                            MonFarm = v.Name
                                        end
                                    end
                                end
                            end
                        else
                            if (CFrame.new(-12361.7060546875, 603.3547973632812, -6550.5341796875).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 100 then
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")
                                wait(1)
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")
                                wait(1)
                                topos(CFrame.new(-12361.7060546875, 603.3547973632812, -6550.5341796875))
                                wait(1.5)
                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                wait(1.5)
                                topos(CFrame.new(-12253.5419921875, 598.8999633789062, -6546.8388671875))
                            else
                                topos(CFrame.new(-12361.7060546875, 603.3547973632812, -6550.5341796875))
                            end   
                        end
                    end
                end
            end)
        end
    end)

    spawn(function()
        while wait() do
            if Auto_Quest_Yama_1 then
                pcall(function()
                    if game:GetService("Workspace").Enemies:FindFirstChild("Mythological Pirate") then
                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                            if v.Name == "Mythological Pirate" then
                                repeat wait()
                                    topos(v.HumanoidRootPart.CFrame * CFrame.new(0,0,-2))
                                until _G.CDK == false or Auto_Quest_Yama_1 == false
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Evil")
                            end
                        end
                    else
                        topos(CFrame.new(-13451.46484375, 543.712890625, -6961.0029296875))
                    end
                end)
            end
        end
    end)

    spawn(function()
        while wait() do
            pcall(function()
                if Auto_Quest_Yama_2 then
                    for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                        if v:FindFirstChild("HazeESP") then
                            v.HazeESP.Size = UDim2.new(50,50,50,50)
                            v.HazeESP.MaxDistance = "inf"
                        end
                    end
                    for i,v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
                        if v:FindFirstChild("HazeESP") then
                            v.HazeESP.Size = UDim2.new(50,50,50,50)
                            v.HazeESP.MaxDistance = "inf"
                        end
                    end
                end
            end)
        end
    end)

    spawn(function()
        while wait() do
            pcall(function()
                for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                    if Auto_Quest_Yama_2 and v:FindFirstChild("HazeESP") and (v.HumanoidRootPart.Position - PosMonsEsp.Position).magnitude <= 300 then
                        v.HumanoidRootPart.CFrame = PosMonsEsp
                        v.HumanoidRootPart.CanCollide = false
                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                        if not v.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                            local vc = Instance.new("BodyVelocity", v.HumanoidRootPart)
                            vc.MaxForce = Vector3.new(1, 1, 1) * math.huge
                            vc.Velocity = Vector3.new(0, 0, 0)
                        end
                    end
                end
            end)
        end
    end)

    spawn(function()
        while wait() do
            if Auto_Quest_Yama_2 then 
                pcall(function() 
                    for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                        if v:FindFirstChild("HazeESP") then
                            repeat wait()
                                if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 2000 then
                                    topos(v.HumanoidRootPart.CFrame * Pos)
                                else
                                    EquipWeapon("Yama")
                                    topos(v.HumanoidRootPart.CFrame * Pos)
                                    v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                    v.HumanoidRootPart.Transparency = 1
                                    v.Humanoid.JumpPower = 0
                                    v.Humanoid.WalkSpeed = 0
                                    v.HumanoidRootPart.CanCollide = false
                                    PosMon = v.HumanoidRootPart.CFrame
                                    MonFarm = v.Name
                                    if v.Humanoid.Health <= 0 and v.Humanoid:FindFirstChild("Animator") then
                                        v.Humanoid.Animator:Destroy()
                                    end							
                                end      
                            until _G.CDK == false or Auto_Quest_Yama_2 == false or not v.Parent or v.Humanoid.Health <= 0 or not v:FindFirstChild("HazeESP")
                        else
                            for x,y in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
                                if y:FindFirstChild("HazeESP") then
                                    if (y.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 2000 then
                                        topos(y.HumanoidRootPart.CFrameMon* Farm_Mode)
                                    else
                                        topos(y.HumanoidRootPart.CFrame * Farm_Mode)
                                    end
                                end
                            end
                        end
                    end
                end)
            end
        end
    end)

    spawn(function()
        while wait() do
            if Auto_Quest_Yama_3 then
                pcall(function()
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Hallow Essence") then         
                        topos(game:GetService("Workspace").Map["Haunted Castle"].Summoner.Detection.CFrame)
                    elseif game:GetService("Workspace").Map:FindFirstChild("HellDimension") then
                        repeat wait()
                            if game:GetService("Workspace").Enemies:FindFirstChild("Cursed Skeleton [Lv. 2200]") or game:GetService("Workspace").Enemies:FindFirstChild("Cursed Skeleton [Lv. 2200] [Boss]") or game:GetService("Workspace").Enemies:FindFirstChild("Hell's Messenger [Lv. 2200] [Boss]") then
                                for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                    if v.Name == "Cursed Skeleton" or v.Name == "Cursed Skeleton" or v.Name == "Hell's Messenger" then
                                        if v.Humanoid.Health > 0 then
                                            repeat wait()
                                                EquipWeapon("Yama")
                                                topos(v.HumanoidRootPart.CFrame * Pos)
                                                v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                                v.HumanoidRootPart.Transparency = 1
                                                v.Humanoid.JumpPower = 0
                                                v.Humanoid.WalkSpeed = 0
                                                v.HumanoidRootPart.CanCollide = false
                                                PosMon = v.HumanoidRootPart.CFrame
                                                MonFarm = v.Name
                                                if v.Humanoid.Health <= 0 and v.Humanoid:FindFirstChild("Animator") then
                                                    v.Humanoid.Animator:Destroy()
                                                end
                                            until v.Humanoid.Health <= 0 or not v.Parent or Auto_Quest_Yama_3 == false
                                        end
                                    end
                                end
                            else
                                wait(5)
                                topos(game:GetService("Workspace").Map.HellDimension.Torch1.CFrame)
                                wait(1.5)
                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                wait(1.5)        
                                topos(game:GetService("Workspace").Map.HellDimension.Torch2.CFrame)
                                wait(1.5)
                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                wait(1.5)     
                                topos(game:GetService("Workspace").Map.HellDimension.Torch3.CFrame)
                                wait(1.5)
                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                wait(1.5)     
                                topos(game:GetService("Workspace").Map.HellDimension.Exit.CFrame)
                            end
                        until _G.CDK == false or Auto_Quest_Yama_3 == false or GetMaterial("Alucard Fragment") == 3
                    else
                        if game:GetService("Workspace").Enemies:FindFirstChild("Soul Reaper") or game.ReplicatedStorage:FindFirstChild("Soul Reaper [Lv. 2100] [Raid Boss]") then
                            if game:GetService("Workspace").Enemies:FindFirstChild("Soul Reaper") then
                                for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                    if v.Name == "Soul Reaper" then
                                        if v.Humanoid.Health > 0 then
                                            repeat wait()
                                                topos(v.HumanoidRootPart.CFrame * CFrame.new(PosX,PosY,PosZ))
                                            until _G.CDK == false or Auto_Quest_Yama_3 == false or game:GetService("Workspace").Map:FindFirstChild("HellDimension")
                                        end
                                    end
                                end
                            else
                                topos(CFrame.new(-9570.033203125, 315.9346923828125, 6726.89306640625))
                            end
                        else
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones","Buy",1,1)
                        end
                    end
                end)
            end
        end
    end)
    spawn(function()
        while wait() do
            if Auto_Quest_Tushita_1 then
                topos(CFrame.new(-9546.990234375, 21.139892578125, 4686.1142578125))
                wait(5)
                topos(CFrame.new(-6120.0576171875, 16.455780029296875, -2250.697265625))
                wait(5)
                topos(CFrame.new(-9533.2392578125, 7.254445552825928, -8372.69921875))    
            end
        end
    end)
    spawn(function()
        while wait() do
            if Auto_Quest_Tushita_2 then
                pcall(function()
                    if (CFrame.new(-5539.3115234375, 313.800537109375, -2972.372314453125).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 500 then
                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                            if Auto_Quest_Tushita_2 and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                                if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 2000 then
                                    repeat wait()
                                        EquipWeapon("Yama")
                                        topos(v.HumanoidRootPart.CFrame * Pos)
                                        v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                        v.HumanoidRootPart.Transparency = 1
                                        v.Humanoid.JumpPower = 0
                                        v.Humanoid.WalkSpeed = 0
                                        v.HumanoidRootPart.CanCollide = false
                                        PosMon = v.HumanoidRootPart.CFrame
                                        MonFarm = v.Name
                                        if v.Humanoid.Health <= 0 and v.Humanoid:FindFirstChild("Animator") then
                                            v.Humanoid.Animator:Destroy()
                                        end
                                    until v.Humanoid.Health <= 0 or not v.Parent or Auto_Quest_Tushita_2 == false
                                end
                            end
                        end
                    else
                        topos(CFrame.new(-5545.1240234375, 313.800537109375, -2976.616455078125))
                    end
                end)
            end
        end
    end)
    spawn(function()
        while wait() do
            if Auto_Quest_Tushita_3 then
                pcall(function()
                    if game:GetService("Workspace").Enemies:FindFirstChild("Cake Queen") or game.ReplicatedStorage:FindFirstChild("Cake Queen [Lv. 2175] [Boss]") then
                        if game:GetService("Workspace").Enemies:FindFirstChild("Cake Queen") then
                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                if v.Name == "Cake Queen" then
                                    if v.Humanoid.Health > 0 then
                                        repeat wait()
                                            EquipWeapon("Yama")
                                            topos(v.HumanoidRootPart.CFrame * Pos)
                                            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                            v.HumanoidRootPart.Transparency = 1
                                            v.Humanoid.JumpPower = 0
                                            v.Humanoid.WalkSpeed = 0
                                            v.HumanoidRootPart.CanCollide = false
                                            PosMon = v.HumanoidRootPart.CFrame
                                            MonFarm = v.Name
                                            if v.Humanoid.Health <= 0 and v.Humanoid:FindFirstChild("Animator") then
                                                v.Humanoid.Animator:Destroy()
                                            end
                                        until _G.CDK == false or Auto_Quest_Tushita_3 == false or game:GetService("Workspace").Map:FindFirstChild("HeavenlyDimension")
                                    end
                                end
                            end
                        else
                            topos(CFrame.new(-709.3132934570312, 381.6005859375, -11011.396484375))
                        end
                    elseif game:GetService("Workspace").Map:FindFirstChild("HeavenlyDimension") then
                        repeat wait()
                            if game:GetService("Workspace").Enemies:FindFirstChild("Cursed Skeleton [Lv. 2200]") or game:GetService("Workspace").Enemies:FindFirstChild("Cursed Skeleton [Lv. 2200] [Boss]") or game:GetService("Workspace").Enemies:FindFirstChild("Heaven's Guardian [Lv. 2200] [Boss]") then
                                for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                    if v.Name == "Cursed Skeleton" or v.Name == "Cursed Skeleton" or v.Name == "Heaven's Guardian" then
                                        if v.Humanoid.Health > 0 then
                                            repeat wait()
                                                EquipWeapon("Yama")
                                                topos(v.HumanoidRootPart.CFrame * Pos)
                                                v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                                v.HumanoidRootPart.Transparency = 1
                                                v.Humanoid.JumpPower = 0
                                                v.Humanoid.WalkSpeed = 0
                                                v.HumanoidRootPart.CanCollide = false
                                                PosMon = v.HumanoidRootPart.CFrame
                                                MonFarm = v.Name    
                                                if v.Humanoid.Health <= 0 and v.Humanoid:FindFirstChild("Animator") then
                                                    v.Humanoid.Animator:Destroy()
                                                end
                                            until v.Humanoid.Health <= 0 or not v.Parent or Auto_Quest_Tushita_3 == false
                                        end
                                    end
                                end
                            else
                                wait(5)
                                topos(game:GetService("Workspace").Map.HeavenlyDimension.Torch1.CFrame)
                                wait(1.5)
                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                wait(1.5)        
                                topos(game:GetService("Workspace").Map.HeavenlyDimension.Torch2.CFrame)
                                wait(1.5)
                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                wait(1.5)     
                                topos(game:GetService("Workspace").Map.HeavenlyDimension.Torch3.CFrame)
                                wait(1.5)
                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                wait(1.5)     
                                topos(game:GetService("Workspace").Map.HeavenlyDimension.Exit.CFrame)
                            end
                        until not _G.CDK or not Auto_Quest_Tushita_3 or GetMaterial("Alucard Fragment") == 6
                    end
                end)
            end
        end
    end)

HopSword = Tabs.I:AddToggle("HopSword", { Title = "Hop Farm Sword", Description = "Saber, Dragon Trident and Yama Only", Default = _G.Settings.HopSword })
HopSword:OnChanged(function(value)
    if value and (not _G.Auto_Saber or not _G.Auto_Dragon_Trident or not _G.AutoYama) then
        Fluent:Notify({
            Title = "Notification",
            Content = "Pls Enable Farm One Sword",
            Duration = 8
        })
    end
    _G.HopFarmSword = value    
    _G.Settings.HopSword = value
    SaveSettings()    
end)

Tabs.I:AddParagraph({
    Title = "Haki Colors",
    Content = "-----"
})

Colors = Tabs.I:AddToggle("Colors", { Title = "Auto Buy Unlock Haki Colors", Description = "", Default = _G.Settings.Haki })
Colors:OnChanged(function(value)
    _G.BuyUnlockHaki = value    
    _G.Settings.Haki = value
    SaveSettings()   
end)

spawn(function()
        while wait() do
            if _G.BuyUnlockHaki then
                local args = {
                    [1] = "ColorsDealer",
                    [2] = "2"
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                if _G.BuyUnlockHakiHop and _G.BuyUnlockHaki and not World1 then
                    wait(3)
                    Hop()
                end
            end 
        end
    end)

HopColors = Tabs.I:AddToggle("HopColors", { Title = "Hop Server Buy Unlock Haki Colors", Description = "", Default = _G.Settings.HakiHop })
HopColors:OnChanged(function(value)
    if value and not _G.BuyUnlockHaki then
        Fluent:Notify({
            Title = "Notification",
            Content = "Pls Enable Auto Buy Unlock Haki Colors",
            Duration = 8
        })
    end
    _G.BuyUnlockHakiHop = value    
    _G.Settings.HakiHop = value
    SaveSettings()    
end)

Rainbow = Tabs.I:AddToggle("Rainbow", { Title = "Auto Farm Haki Rainbow", Description = "", Default = _G.Settings.Rain })
Rainbow:OnChanged(function(value)
    _G.Auto_Rainbow_Haki = value    
    _G.Settings.Rain = value
    SaveSettings()
    StopTween(_G.Auto_Rainbow_Haki)
end)

spawn(function()
        pcall(function()
            while wait(.1) do
                if _G.Auto_Rainbow_Haki then
                    if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
                        topos(CFrame.new(-11892.0703125, 930.57672119141, -8760.1591796875))
                        if (Vector3.new(-11892.0703125, 930.57672119141, -8760.1591796875) - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 30 then
                            wait(1.5)
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("HornedMan","Bet")
                        end
                    elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true and string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Stone") then
                        if game:GetService("Workspace").Enemies:FindFirstChild("Stone") then
                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                if v.Name == "Stone" then
                                    OldCFrameRainbow = v.HumanoidRootPart.CFrame
                                    repeat task.wait()
                                        EquipWeapon(_G.SelectWeapon)
                                        topos(v.HumanoidRootPart.CFrame * Pos)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.HumanoidRootPart.CFrame = OldCFrameRainbow
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
                                        sethiddenproperty(game:GetService("Players").LocalPlayer,"SimulationRadius",math.huge)
                                    until _G.Auto_Rainbow_Haki == false or v.Humanoid.Health <= 0 or not v.Parent or game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false
                                end
                            end
                        else
                            topos(CFrame.new(-1086.11621, 38.8425903, 6768.71436, 0.0231462717, -0.592676699, 0.805107772, 2.03251839e-05, 0.805323839, 0.592835128, -0.999732077, -0.0137055516, 0.0186523199))
                        end
                    elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true and string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Hydra Leader") then
                        if game:GetService("Workspace").Enemies:FindFirstChild("Hydra Leader") then
                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                if v.Name == "Hydra Leader" then
                                    OldCFrameRainbow = v.HumanoidRootPart.CFrame
                                    repeat task.wait()
                                        EquipWeapon(_G.SelectWeapon)
                                        topos(v.HumanoidRootPart.CFrame * Pos)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.HumanoidRootPart.CFrame = OldCFrameRainbow
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
                                        sethiddenproperty(game:GetService("Players").LocalPlayer,"SimulationRadius",math.huge)
                                    until _G.Auto_Rainbow_Haki == false or v.Humanoid.Health <= 0 or not v.Parent or game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false
                                end
                            end
                        else
                            topos(CFrame.new(5713.98877, 601.922974, 202.751251, -0.101080291, -0, -0.994878292, -0, 1, -0, 0.994878292, 0, -0.101080291))
                        end
                    elseif string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Kilo Admiral") then
                        if game:GetService("Workspace").Enemies:FindFirstChild("Kilo Admiral") then
                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                if v.Name == "Kilo Admiral" then
                                    OldCFrameRainbow = v.HumanoidRootPart.CFrame
                                    repeat task.wait()
                                        EquipWeapon(_G.SelectWeapon)
                                        topos(v.HumanoidRootPart.CFrame * Pos)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        v.HumanoidRootPart.CFrame = OldCFrameRainbow
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
                                        sethiddenproperty(game:GetService("Players").LocalPlayer,"SimulationRadius",math.huge)
                                    until _G.Auto_Rainbow_Haki == false or v.Humanoid.Health <= 0 or not v.Parent or game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false
                                end
                            end
                        else
                            topos(CFrame.new(2877.61743, 423.558685, -7207.31006, -0.989591599, -0, -0.143904909, -0, 1.00000012, -0, 0.143904924, 0, -0.989591479))
                        end
                    elseif string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Captain Elephant") then
                        if game:GetService("Workspace").Enemies:FindFirstChild("Captain Elephant") then
                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                if v.Name == "Captain Elephant" then
                                    OldCFrameRainbow = v.HumanoidRootPart.CFrame
                                    repeat task.wait()
                                        EquipWeapon(_G.SelectWeapon)
                                        topos(v.HumanoidRootPart.CFrame * Pos)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        v.HumanoidRootPart.CFrame = OldCFrameRainbow
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
                                        sethiddenproperty(game:GetService("Players").LocalPlayer,"SimulationRadius",math.huge)
                                    until _G.Auto_Rainbow_Haki == false or v.Humanoid.Health <= 0 or not v.Parent or game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false
                                end
                            end
                        else
                            topos(CFrame.new(-13485.0283, 331.709259, -8012.4873, 0.714521289, 7.98849911e-08, 0.69961375, -1.02065748e-07, 1, -9.94383065e-09, -0.69961375, -6.43015241e-08, 0.714521289))
                        end
                    elseif string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Beautiful Pirate") then
                        if game:GetService("Workspace").Enemies:FindFirstChild("Beautiful Pirate") then
                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                if v.Name == "Beautiful Pirate" then
                                    OldCFrameRainbow = v.HumanoidRootPart.CFrame
                                    repeat task.wait()
                                        EquipWeapon(_G.SelectWeapon)
                                        topos(v.HumanoidRootPart.CFrame * Pos)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        v.HumanoidRootPart.CFrame = OldCFrameRainbow
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
                                        sethiddenproperty(game:GetService("Players").LocalPlayer,"SimulationRadius",math.huge)
                                    until _G.Auto_Rainbow_Haki == false or v.Humanoid.Health <= 0 or not v.Parent or game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false
                                end
                            end
                        else
                            topos(CFrame.new(5312.3598632813, 20.141201019287, -10.158538818359))
                        end
                    else
                        topos(CFrame.new(-11892.0703125, 930.57672119141, -8760.1591796875))
                        if (Vector3.new(-11892.0703125, 930.57672119141, -8760.1591796875) - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 30 then
                            wait(1.5)
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("HornedMan","Bet")
                        end
                    end
                end
            end
        end)
    end)

Tabs.R:AddParagraph({
    Title = "Race Draco",
    Content = "-----"
})

TrialDra = Tabs.R:AddToggle("TrialDra", { Title = "Auto Trial Draco", Description = "Help You Fly To The Highest Place To Attach The Light", Default = _G.Settings.DracoV })
TrialDra:OnChanged(function(value)
    _G.TrialDraco = value    
    _G.Settings.DracoV = value
    SaveSettings()
    StopTween(_G.TrialDraco)
end)

local targetsdra = {
    CFrame.new(-39932.1719, 10690.8682, 22998.2168, -0.545981169, -0.00131224166, -0.837796509, -0.00172352674, 0.999998391, -0.00044309895, 0.837795794, 0.00120204105, -0.545982599),
}

spawn(function()
    while wait() do
        if _G.TrialDraco then
            for _, target in ipairs(targetsdra) do
                if not _G.TrialDraco then break end
                topos(target)
                wait()
                local character = game.Players.LocalPlayer.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local distance = (character.HumanoidRootPart.Position - target.Position).Magnitude
                    if distance <= 1 then
                        wait(3)
                        game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                        game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)
                        wait(4.5)
                    end
                end
            end
            _G.TrialDraco = false
        end
    end
end)

TpTrialDra = Tabs.R:AddToggle("TpTrialDra", { Title = "Teleport Door Trial Draco", Description = "Possible Error", Default = _G.Settings.DoorDraco })
TpTrialDra:OnChanged(function(value)
    _G.TrialDracoDoor = value    
    _G.Settings.DoorDraco = value
    SaveSettings()
    StopTween(_G.TrialDracoDoor)
end)

spawn(function()
    while wait() do
        if _G.TrialDracoDoor then
            local trialTeleport = workspace.Map.PrehistoricIsland:FindFirstChild("TrialTeleport")
            if trialTeleport and trialTeleport:IsA("Part") then
                topos(CFrame.new(trialTeleport.Position))
                local distance = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - trialTeleport.Position).Magnitude
                if distance <= 1 then
                    _G.TrialDracoDoor = false
                end
            end
        end
    end
end)

TrainDra = Tabs.R:AddToggle("TrainDra", { Title = "Auto Train Gear Draco", Description = "", Default = _G.Settings.TrainD })
TrainDra:OnChanged(function(value)
    _G.Bone = value
    _G.GearDraco = value
    _G.AwaV = value
    _G.Settings.TrainD = value
    SaveSettings()
    StopTween(_G.Bone)
end)

BuyGearDra = Tabs.R:AddToggle("BuyGearDra", { Title = "Auto Buy Gear Draco", Description = "", Default = _G.Settings.BuyGearD })
BuyGearDra:OnChanged(function(value)
    _G.GearDraco = value    
    _G.Settings.BuyGearD = value
    SaveSettings()   
end)

spawn(function()
            while _G.GearDraco do
                pcall(function()
                    local args = {
    [1] = "Interacted"
}

workspace.Map.Waterfall.HydraIslandClient.RemoteFunction:InvokeServer(unpack(args))
local args = {
    [1] = "UpgradeRace",
    [2] = "Check",
    [3] = 2
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
local args = {
    [1] = "UpgradeRace",
    [2] = "Buy",
    [3] = 2
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                end)
                task.wait(5)
            end
        end)

Tabs.R:AddButton({
    Title = "Buy Gear Draco",
    Callback = function()
        local args = {
    [1] = "Interacted"
}

workspace.Map.Waterfall.HydraIslandClient.RemoteFunction:InvokeServer(unpack(args))
local args = {
    [1] = "UpgradeRace",
    [2] = "Check",
    [3] = 2
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
local args = {
    [1] = "UpgradeRace",
    [2] = "Buy",
    [3] = 2
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end
})

Tabs.R:AddParagraph({
    Title = "Race Normal",
    Content = "-----"
})

Trial = Tabs.R:AddToggle("Trial", { Title = "Auto Complete Trial", Description = "", Default = _G.Settings.CompleteRace })
Trial:OnChanged(function(value)
    _G.AutoQuestRace = value    
    _G.Settings.CompleteRace = value
    SaveSettings()
    StopTween(_G.AutoQuestRace)
end)

spawn(function()
    pcall(function()
        while wait() do
            if _G.AutoQuestRace then
				if game:GetService("Players").LocalPlayer.Data.Race.Value == "Human" then
					for i,v in pairs(game.Workspace.Enemies:GetDescendants()) do
						if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
							pcall(function()
								repeat wait(.1)
									v.Humanoid.Health = 0
									v.HumanoidRootPart.CanCollide = false
									sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
								until not _G.AutoQuestRace or not v.Parent or v.Humanoid.Health <= 0
							end)
						end
					end
				elseif game:GetService("Players").LocalPlayer.Data.Race.Value == "Skypiea" then
					for i,v in pairs(game:GetService("Workspace").Map.SkyTrial.Model:GetDescendants()) do
						if v.Name ==  "snowisland_Cylinder.081" then
							topos(v.CFrame* CFrame.new(0,0,0))
						end
					end
				elseif game:GetService("Players").LocalPlayer.Data.Race.Value == "Fishman" then
					for i,v in pairs(game:GetService("Workspace").SeaBeasts.SeaBeast1:GetDescendants()) do
						if v.Name ==  "HumanoidRootPart" then
							topos(v.CFrame* CFrame.new(PosX,PosY,PosZ))
							for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
								if v:IsA("Tool") then
									if v.ToolTip == "Melee" then -- "Blox Fruit" , "Sword" , "Wear" , "Agility"
										game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
									end
								end
							end
							game:GetService("VirtualInputManager"):SendKeyEvent(true,122,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							game:GetService("VirtualInputManager"):SendKeyEvent(false,122,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							wait(.2)
							game:GetService("VirtualInputManager"):SendKeyEvent(true,120,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							game:GetService("VirtualInputManager"):SendKeyEvent(false,120,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							wait(.2)
							game:GetService("VirtualInputManager"):SendKeyEvent(true,99,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							game:GetService("VirtualInputManager"):SendKeyEvent(false,99,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
								if v:IsA("Tool") then
									if v.ToolTip == "Blox Fruit" then -- "Blox Fruit" , "Sword" , "Wear" , "Agility"
										game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
									end
								end
							end
							game:GetService("VirtualInputManager"):SendKeyEvent(true,122,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							game:GetService("VirtualInputManager"):SendKeyEvent(false,122,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							wait(.2)
							game:GetService("VirtualInputManager"):SendKeyEvent(true,120,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							game:GetService("VirtualInputManager"):SendKeyEvent(false,120,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							wait(.2)
							game:GetService("VirtualInputManager"):SendKeyEvent(true,99,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							game:GetService("VirtualInputManager"):SendKeyEvent(false,99,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
					
							wait(0.5)
							for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
								if v:IsA("Tool") then
									if v.ToolTip == "Sword" then -- "Blox Fruit" , "Sword" , "Wear" , "Agility"
										game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
									end
								end
							end
							game:GetService("VirtualInputManager"):SendKeyEvent(true,122,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							game:GetService("VirtualInputManager"):SendKeyEvent(false,122,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							wait(.2)
							game:GetService("VirtualInputManager"):SendKeyEvent(true,120,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							game:GetService("VirtualInputManager"):SendKeyEvent(false,120,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							wait(.2)
							game:GetService("VirtualInputManager"):SendKeyEvent(true,99,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							game:GetService("VirtualInputManager"):SendKeyEvent(false,99,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							wait(0.5)
							for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
								if v:IsA("Tool") then
									if v.ToolTip == "Gun" then -- "Blox Fruit" , "Sword" , "Wear" , "Agility"
										game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
									end
								end
							end
							game:GetService("VirtualInputManager"):SendKeyEvent(true,122,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							game:GetService("VirtualInputManager"):SendKeyEvent(false,122,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							wait(.2)
							game:GetService("VirtualInputManager"):SendKeyEvent(true,120,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							game:GetService("VirtualInputManager"):SendKeyEvent(false,120,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							wait(.2)
							game:GetService("VirtualInputManager"):SendKeyEvent(true,99,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
							game:GetService("VirtualInputManager"):SendKeyEvent(false,99,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
						end
					end
				elseif game:GetService("Players").LocalPlayer.Data.Race.Value == "Cyborg" then
					topos(CFrame.new(28654, 14898.7832, -30, 1, 0, 0, 0, 1, 0, 0, 0, 1))
				elseif game:GetService("Players").LocalPlayer.Data.Race.Value == "Ghoul" then
					for i,v in pairs(game.Workspace.Enemies:GetDescendants()) do
						if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
							pcall(function()
								repeat wait(.1)
									v.Humanoid.Health = 0
									v.HumanoidRootPart.CanCollide = false
									sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
								until not _G.AutoQuestRace or not v.Parent or v.Humanoid.Health <= 0
							end)
						end
					end
				elseif game:GetService("Players").LocalPlayer.Data.Race.Value == "Mink" then
					for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
						if v.Name == "StartPoint" then
							topos(v.CFrame* CFrame.new(0,10,0))
					  	end
				   	end
				end
			end
        end
    end)
end)

spawn(function()
    while wait() do
        if _G.AutoQuestRace and game:GetService("Players").LocalPlayer.Data.Race.Value == "Ghoul" then
            if game:GetService("Workspace").Enemies:FindFirstChild("Ancient Zombie") or game:GetService("Workspace").Enemies:FindFirstChild("Ancient Vampire") then
                for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                    if v.Name == "Ancient Zombie" or v.Name == "Ancient Vampire" then
                        if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                            repeat task.wait()
                                AutoHaki()
                                EquipWeapon(_G.SelectWeapon)
                                v.HumanoidRootPart.CanCollide = false
                                v.Humanoid.WalkSpeed = 0
                                v.Head.CanCollide = false 
                                StartMagnet = true
                                PosGay = v.HumanoidRootPart.CFrame
                                game:GetService("VirtualUser"):CaptureController()
                                game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                            until not _G.AutoQuestRace or not v.Parent or v.Humanoid.Health <= 0
                            StartMagnet = false
                        end
                    end
                end
            else
                UnEquipWeapon(_G.SelectWeapon)
                if game:GetService("ReplicatedStorage"):FindFirstChild("Ancient Zombie") then
                elseif game:GetService("ReplicatedStorage"):FindFirstChild("Ancient Vampire") then
                end
            end
        end
    end
end)

KillTrial = Tabs.R:AddToggle("KillTrial", { Title = "Auto Kill Player Trial", Description = "", Default = _G.Settings.KillTrial })
KillTrial:OnChanged(function(value)
    _G.KillTriall = value    
    _G.Settings.KillTrial = value
    SaveSettings()
    StopTween(_G.KillTriall)
end)

spawn(function()
    while wait() do 
        pcall(function()
            if _G.KillTriall then
                for i,v in pairs(game:GetService("Workspace").Characters:GetChildren()) do
                    if v.Name ~= game.Players.LocalPlayer.Name and (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 100 then
                        if v.Humanoid.Health > 0 then
                            repeat wait()
                                AutoHaki()
                                EquipWeapon(_G.SelectWeapon)
                                NameTarget = v.Name
                                TP1(v.HumanoidRootPart.CFrame * CFrame.new(0,0,5))
                                v.HumanoidRootPart.CanCollide = false
                                v.Head.CanCollide = false
                                v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                Click()
                            until not _G.KillTriall or not v.Parent or v.Humanoid.Health <= 0 
                        end
                    end
                end
            end
        end)
    end
end)

Train = Tabs.R:AddToggle("Train", { Title = "Auto Train Gear", Description = "", Default = _G.Settings.Train })
Train:OnChanged(function(value)
    _G.Bone = value
    _G.Gear = value
    _G.AwaV = value
    _G.Settings.Train = value
    SaveSettings()
    StopTween(_G.Bone)
end)

blue = Tabs.R:AddToggle("blue", { Title = "Auto Buy Gear", Description = "", Default = _G.Settings.BuyGear })
blue:OnChanged(function(value)
    _G.Gear = value    
    _G.Settings.BuyGear = value
    SaveSettings()    
end)

spawn(function()
            while _G.Gear do
                pcall(function()
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer('UpgradeRace', 'Buy')
                end)
                task.wait(5)
            end
        end)

Tabs.R:AddButton({
    Title = "Buy Gear",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer('UpgradeRace','Buy')
    end
})

Great = Tabs.R:AddToggle("Great", { Title = "Teleport Great Tree", Description = "", Default = _G.Settings.Tree })
Great:OnChanged(function(value)
    _G.GreatTree = value    
    _G.Settings.Tree = value
    SaveSettings()
    StopTween(_G.GreatTree)
end)

spawn(function()
            while _G.GreatTree do
                topos(CFrame.new(3032.78003, 2280.85107, -7325.47803, 0.607629955, 0, 0.794220269, 0, 1, 0, -0.794220269, 0, 0.607629955))
                task.wait(0.1)
            end
        end)

Door = Tabs.R:AddToggle("Door", { Title = "Teleport Race Door", Description = "", Default = _G.Settings.Doors })
Door:OnChanged(function(value)
    _G.Door = value    
    _G.Settings.Doors = value
    SaveSettings()
    StopTween(_G.Door)
end)

spawn(function()
            while _G.Door do
                local player = game:GetService("Players").LocalPlayer
        local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if not hrp then return end  

        hrp.CFrame = CFrame.new(28286.355, 14895.302, 102.625)
        wait(0.1)

        local race = player.Data.Race.Value
        local racePositions = {
            ["Fishman"] = CFrame.new(28224.057, 14889.427, -210.587),
            ["Human"] = CFrame.new(29237.295, 14889.427, -206.950),
            ["Cyborg"] = CFrame.new(28492.414, 14894.427, -422.110),
            ["Skypiea"] = CFrame.new(28967.408, 14918.075, 234.312),
            ["Ghoul"] = CFrame.new(28672.721, 14889.128, 454.596),
            ["Mink"] = CFrame.new(29020.660, 14889.427, -379.268)
        }

        if racePositions[race] then
            wait(0.6)
            if topos then
                topos(racePositions[race])
            else
                hrp.CFrame = racePositions[race]
            end
        end
                task.wait(0.1)
            end
        end)

Lever = Tabs.R:AddToggle("Lever", { Title = "Teleport Lever", Description = "", Default = _G.Settings.Lever })
Lever:OnChanged(function(value)
    _G.PullLever = value    
    _G.Settings.Lever = value
    SaveSettings()
    StopTween(_G.PullLever)
end)

spawn(function()
            while _G.PullLever do
                topos(CFrame.new(28575.181640625, 14936.6279296875, 72.31636810302734))
                task.wait(0.1)
            end
        end)

Ancient = Tabs.R:AddToggle("Ancient", { Title = "Teleport Ancient One", Description = "", Default = _G.Settings.One })
Ancient:OnChanged(function(value)
    _G.Ancient = value    
    _G.Settings.One = value
    SaveSettings()
    StopTween(_G.Ancient)
end)

spawn(function()
            while _G.Ancient do
                topos(CFrame.new(28981.552734375, 14888.4267578125, -120.245849609375))
                task.wait(0.1)
            end
        end)

Tabs.Se:AddParagraph({
    Title = "Sea Event",
    Content = "-----"
})

if World3 then
Rock = Tabs.Se:AddToggle("Rock", { Title = "Remove Rock Sea Event", Description = "", Default = _G.Settings.Rock })
Rock:OnChanged(function(value)    
    _G.Settings.Rock = value
    SaveSettings()    
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if _G.Settings.Rock then
        local rocks = Workspace.Rocks:GetChildren()
        for _, rock in pairs(rocks) do
            if rock:IsA("BasePart") then
                rock.CanCollide = false
                rock:Destroy()
            end
        end
    end
end)
end

Fog = Tabs.Se:AddToggle("Fog", { Title = "Remove Fog", Description = "", Default = _G.Settings.Fogg })
Fog:OnChanged(function(value)
    _G.Fog = value    
    _G.Settings.Fogg = value
    SaveSettings()    
end)

spawn(function()
            pcall(function()
             if _G.Fog then
                game:GetService("Lighting").LightingLayers:Destroy()
                game:GetService("Lighting").Sky:Destroy()
             end
            end)
        end)

FarmSe = Tabs.Se:AddToggle("FarmSe", { Title = "Auto Farm Sea Event", Description = "", Default = _G.Settings.SeaFarm })
FarmSe:OnChanged(function(value)
    _G.StartSea = value    
    _G.Settings.SeaFarm = value
    SaveSettings()
    StopTween(_G.StartSea)
end)

local seatHistory = {}
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Workspace = game:GetService("Workspace")
local SetSpeedBoat = 350  

local function isEnemyAvailable()
	local enemies = Workspace.Enemies
	if _G.Sharkk and enemies:FindFirstChild("Shark") then return true end
	if _G.Terror and enemies:FindFirstChild("Terrorshark") then return true end
	if _G.CaDien and enemies:FindFirstChild("Piranha") then return true end
	if _G.FishCrew and enemies:FindFirstChild("Fish Crew Member") then return true end
	return false
end

RunService.RenderStepped:Connect(function()
	for boatName, seat in pairs(seatHistory) do
		if seat and seat.Parent and seat.Name == "VehicleSeat" and not seat.Occupant then
			seatHistory[boatName] = seat
		end
	end
end)

local function tpToMyBoat()
	for boatName, seat in pairs(seatHistory) do
		if seat and seat.Parent and seat.Name == "VehicleSeat" and not seat.Occupant then
			topos(seat.CFrame)
		end
	end
end

spawn(function()
	while wait() do
		pcall(function()
			if _G.StartSea and not isEnemyAvailable() then
				local LocalPlayer = Players.LocalPlayer
				local MyBoat = nil

				for _, boat in pairs(Workspace.Boats:GetChildren()) do
					if boat.Name == "Guardian" and boat:FindFirstChild("Owner") and boat.Owner.Value == LocalPlayer then
						MyBoat = boat
						break
					end
				end

				if not MyBoat then
					buyb = TPP(CFrame.new(-17064.3008, 103.064011, 881.570007))
					if (LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(-17064.3008, 103.064011, 881.570007)).Magnitude <= 10 then
						if buyb then buyb:Stop() end
						local args = {
							[1] = "BuyBoat",
							[2] = "Guardian"
						}
						game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
					end
				elseif MyBoat then
					local seat = MyBoat:FindFirstChild("VehicleSeat")
					if seat and LocalPlayer.Character:FindFirstChild("Humanoid").Sit == false then
						TPP(seat.CFrame * CFrame.new(0,1,0))
						repeat wait()
						until isEnemyAvailable() or not _G.AppleAutoDriveBoat
					end
				end
			end
		end)
	end
end)

local isTeleporting = false
RunService.RenderStepped:Connect(function()
	if not _G.StartSea then return end
	local player = Players.LocalPlayer
	local character = player.Character
	if not character or not character:FindFirstChild("Humanoid") then return end

	local humanoid = character.Humanoid
	local boatFound = false
	local currentBoat = nil

	for _, b in pairs(Workspace.Boats:GetChildren()) do
		local seat = b:FindFirstChild("VehicleSeat")
		if seat and seat.Occupant == humanoid then
			boatFound = true
			currentBoat = seat
			seatHistory[b.Name] = seat
		elseif seat and seat.Occupant == nil and not isEnemyAvailable() then
			tpToMyBoat()
		end
	end

	if not boatFound then return end

	currentBoat.MaxSpeed = SetSpeedBoat
	currentBoat.CFrame = CFrame.new(currentBoat.Position) * currentBoat.CFrame.Rotation
	VirtualInputManager:SendKeyEvent(true, "W", false, game)

	for _, v in pairs(Workspace.Boats:GetDescendants()) do
		if v:IsA("BasePart") then v.CanCollide = false end
	end
	for _, v in pairs(character:GetDescendants()) do
		if v:IsA("BasePart") then v.CanCollide = false end
	end
end)

spawn(function()
	pcall(function()
		while wait() do
			if _G.StartSea and isEnemyAvailable() then
				Players.LocalPlayer.Character.Humanoid.Sit = false
			end
		end
	end)
end)

Shark = Tabs.Se:AddToggle("Shark", { Title = "Farm Shark", Description = "", Default = _G.Settings.Shark })
Shark:OnChanged(function(value)
    _G.Sharkk = value    
    _G.Settings.Shark = value
    SaveSettings()
    StopTween(_G.Sharkk)
end)

spawn(function()
        while wait() do
            if _G.Sharkk and World3 then
                pcall(function()
                    if game:GetService("Workspace").Enemies:FindFirstChild("Shark") then
                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                            if v.Name == "Shark" then
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    repeat task.wait()
                                        AutoHaki()
                                        EquipWeapon(_G.SelectWeapon)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Humanoid.WalkSpeed = 0
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        PosNarathiwat = v.HumanoidRootPart.CFrame
                                        topos(v.HumanoidRootPart.CFrame * Pos)
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                                    until not  _G.Sharkk or not v.Parent or v.Humanoid.Health <= 0                          
                                end
                            end
                        end
                    else
                        if game:GetService("ReplicatedStorage"):FindFirstChild("Terrorshark") then
                            topos(game:GetService("ReplicatedStorage"):FindFirstChild("Terrorshark").HumanoidRootPart.CFrame * CFrame.new(2,20,2))                       
                        end
                    end
                end)
            end
        end
    end)

Piranha = Tabs.Se:AddToggle("Piranha", { Title = "Farm Piranha", Description = "", Default = _G.Settings.Piran })
Piranha:OnChanged(function(value)
    _G.CaDien = value    
    _G.Settings.Piran = value
    SaveSettings()
    StopTween(_G.CaDien)
end)

Fish = Tabs.Se:AddToggle("Fish", { Title = "Farm Fish Crew", Description = "", Default = _G.Settings.Fish })
Fish:OnChanged(function(value)
    _G.FishCrew = value    
    _G.Settings.Fish = value
    SaveSettings()
    StopTween(_G.FishCrew)
end)

Terror = Tabs.Se:AddToggle("Terror", { Title = "Farm TerrorShark", Description = "", Default = _G.Settings.Terror })
Terror:OnChanged(function(value)
    _G.Terror = value    
    _G.Settings.Terror = value
    SaveSettings()
    StopTween(_G.Terror)
end)

spawn(function()
        while wait() do
            if  _G.Terror and World3 then
                pcall(function()
                    if game:GetService("Workspace").Enemies:FindFirstChild("Terrorshark") then
                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                            if v.Name == "Terrorshark" then
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    repeat task.wait()
                                        AutoHaki()
                                        EquipWeapon(_G.SelectWeapon)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Humanoid.WalkSpeed = 0
                                        PosNarathiwat = v.HumanoidRootPart.CFrame
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        topos(v.HumanoidRootPart.CFrame * Pos)
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                                    until not  _G.Terror or not v.Parent or v.Humanoid.Health <= 0                       
                                end
                            end
                        end
                    else
                        if game:GetService("ReplicatedStorage"):FindFirstChild("Terrorshark") then
                            topos(game:GetService("ReplicatedStorage"):FindFirstChild("Terrorshark").HumanoidRootPart.CFrame * CFrame.new(2,20,2))                        
                        end
                    end
                end)
            end
        end
    end)
    
    spawn(function()
        while wait() do
            if  _G.CaDien and World3 then
                pcall(function()
                    if game:GetService("Workspace").Enemies:FindFirstChild("Piranha") then
                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                            if v.Name == "Piranha" then
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    repeat task.wait()
                                        AutoHaki()
                                        EquipWeapon(_G.SelectWeapon)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Humanoid.WalkSpeed = 0
                                        PosNarathiwat = v.HumanoidRootPart.CFrame
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        topos(v.HumanoidRootPart.CFrame * Pos)
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                                    until not  _G.CaDien or not v.Parent or v.Humanoid.Health <= 0               
                                end
                            end
                        end
                    else
                        if game:GetService("ReplicatedStorage"):FindFirstChild("Piranha") then
                            topos(game:GetService("ReplicatedStorage"):FindFirstChild("Piranha").HumanoidRootPart.CFrame * CFrame.new(2,20,2))               
                        end
                    end
                end)
            end
        end
    end)
    
    spawn(function()
        while wait() do
            if  _G.FishCrew and World3 then
                pcall(function()
                    if game:GetService("Workspace").Enemies:FindFirstChild("Fish Crew Member") then
                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                            if v.Name == "Fish Crew Member" then
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    repeat task.wait()
                                        AutoHaki()
                                        EquipWeapon(_G.SelectWeapon)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Humanoid.WalkSpeed = 0
                                        PosNarathiwat = v.HumanoidRootPart.CFrame
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        topos(v.HumanoidRootPart.CFrame * Pos)
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                                    until not  _G.FishCrew or not v.Parent or v.Humanoid.Health <= 0
                                end
                            end
                        end
                    else
                        if game:GetService("ReplicatedStorage"):FindFirstChild("Fish Crew Member") then
                            topos(game:GetService("ReplicatedStorage"):FindFirstChild("Fish Crew Member").HumanoidRootPart.CFrame * CFrame.new(2,20,2))                        
                        end
                    end
                end)
            end
        end
    end)

PiratesShip = Tabs.Se:AddToggle("PiratesShip", { Title = "Farm Pirates Ship", Description = "", Default = _G.Settings.Boat })
PiratesShip:OnChanged(function(value)
    _G.ShipPirates = value    
    _G.Settings.Boat = value
    SaveSettings()
    StopTween(_G.ShipPirates)
end)

function CheckPirateBoat()
    local checkmmpb = {"FishBoat"}
    for r, v in next, game:GetService("Workspace").Enemies:GetChildren() do
        if table.find(checkmmpb, v.Name) and v:FindFirstChild("Health") and v.Health.Value > 0 then
            return v
        end
    end
end

spawn(function()
    while wait() do
        pcall(function()
            if _G.ShipPirates then
                if CheckPirateBoat() then
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 32, false, game)
                    wait(0.5)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 32, false, game)
                    local v = CheckPirateBoat()
                    repeat
                        wait()
                        spawn(topos(v.Engine.CFrame * CFrame.new(0, -20, 0), 1))
                        AutoSkill = true
                        Skillaimbot = true
                        AimBotSkillPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                    until v.Parent or v.Health.Value <= 0 or not CheckPirateBoat()
                    AutoSkill = false
                    Skillaimbot = false
                end
            end
        end)
    end
end)

spawn(function()
    while wait() do
        if _G.ShipPirates then
            pcall(function()
                if CheckPirateBoat() then
                    AutoHaki()
                    game:GetService("VirtualUser"):CaptureController()
                    game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v:IsA("Tool") then
                            if v.ToolTip == "Melee" then -- "Blox Fruit", "Sword", "Wear", "Agility"
                                game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                            end
                        end
                    end
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 122, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 122, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    wait(0.2)
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 120, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 120, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    wait(0.2)
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 99, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 99, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    wait(0.2)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, "C", false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v:IsA("Tool") then
                            if v.ToolTip == "Blox Fruit" then -- "Blox Fruit", "Sword", "Wear", "Agility"
                                game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                            end
                        end
                    end
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 122, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 122, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    wait(0.2)
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 120, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 120, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    wait(0.2)
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 99, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 99, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    wait(0.5)
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v:IsA("Tool") then
                            if v.ToolTip == "Sword" then -- "Blox Fruit", "Sword", "Wear", "Agility"
                                game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                            end
                        end
                    end
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 122, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 122, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    wait(0.2)
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 120, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 120, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    wait(0.2)
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 99, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 99, false, game.Players.LocalPlayer.Character.HumanoidRootPart)
                end
            end)
        end
    end
end)

GhostShip = Tabs.Se:AddToggle("GhostShip", { Title = "Farm Ghost Ship", Description = "", Default = _G.Settings.GhostBoat })
GhostShip:OnChanged(function(value)
    _G.GhostBoat = value    
    _G.Settings.GhostBoat = value
    SaveSettings()
    StopTween(_G.GhostBoat)
end)

function CheckPirateBoat()
    local checkmmpb = {"PirateGrandBrigade", "PirateBrigade"}
    for r, v in next, game:GetService("Workspace").Enemies:GetChildren() do
        if table.find(checkmmpb, v.Name) and v:FindFirstChild("Health") and v.Health.Value > 0 then
            return v
        end
    end
end

spawn(function()
    while wait() do
        if _G.GhostBoat then
            pcall(function()
                if CheckPirateBoat() then
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 32, false, game)
                    wait(0.5)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 32, false, game)
                    local v = CheckPirateBoat()
                    repeat
                        wait()
                        spawn(topos(v.Engine.CFrame * CFrame.new(0, -20, 0)), 1)
                        AimBotSkillPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                        Skillaimbot = true
                        AutoSkill = false
                    until not v or not v.Parent or v.Health.Value <= 0 or not CheckPirateBoat()
                    Skillaimbot = true
                    AutoSkill = false
                end
            end)
        end
    end
end)

Tabs.Se:AddParagraph({
    Title = "Leviathan",
    Content = "-----"
})

Tabs.Se:AddButton({
    Title = "Buy Spy",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("InfoLeviathan", "2")
    end
})

Frozen = Tabs.Se:AddParagraph({
    Title = "Status Frozen Dimension:",
    Content = ""
})

spawn(function()
    while wait(3) do
        pcall(function()            
            if game.Workspace._WorldOrigin.Locations:FindFirstChild("Frozen Dimension") then
                Frozen:SetDesc("✅ Spawn")
            else
                Frozen:SetDesc("❌ Not Spawn")
            end            
        end)
    end
end)

local boatfrozen = {"Guardian","Beast Hunter"}

BoatFrozen = Tabs.Se:AddDropdown("BoatFrozen", {
    Title = "Boat Find",
    Values = boatfrozen,
    Multi = false,
    Default = _G.Settings.SelectBoatLevi,
})
BoatFrozen:SetValue(_G.Settings.SelectBoatLevi)
BoatFrozen:OnChanged(function(value)
_G.BoatFindLevi = value
_G.Settings.SelectBoatLevi = value
SaveSettings()
end)

FindFro = Tabs.Se:AddToggle("FindFro", { Title = "Auto Find Frozen Dimension", Description = "", Default = _G.Settings.FindLe })
FindFro:OnChanged(function(value)
    _G.AutoFindFrozen = value    
    _G.Settings.FindLe = value
    SaveSettings()
    StopTween(_G.AutoFindFrozen)
end)

local seatHistory = {}
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Workspace = game:GetService("Workspace")
local SetSpeedBoat = 350  

RunService.RenderStepped:Connect(function()
    for boatName, seat in pairs(seatHistory) do
        if seat and seat.Parent and seat.Name == "VehicleSeat" and not seat.Occupant then
            seatHistory[boatName] = seat
        end
    end
end)

local function tpToMyBoat()
    for boatName, seat in pairs(seatHistory) do
        if seat and seat.Parent and seat.Name == "VehicleSeat" and not seat.Occupant then
            topos(seat.CFrame)
        end
    end
end

spawn(function()
    while wait() do
        pcall(function()
            if _G.AutoFindFrozen then
                local LocalPlayer = game.Players.LocalPlayer
                local selectedBoat = _G.BoatFindLevi
                local MyBoat = nil

                for _, boat in pairs(Workspace.Boats:GetChildren()) do
                    if boat.Name == selectedBoat and boat:FindFirstChild("Owner") and boat.Owner.Value == LocalPlayer then
                        MyBoat = boat
                        break
                    end
                end

                if not MyBoat then
                    buyb = TPP(CFrame.new(-17064.3008, 103.064011, 881.570007, 0.207885921, 0, 0.97815311, 0, 1, 0, -0.97815311, 0, 0.207885921))
                    if (LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(-17064.3008, 103.064011, 881.570007, 0.207885921, 0, 0.97815311, 0, 1, 0, -0.97815311, 0, 0.207885921)).Magnitude <= 10 then
                        if buyb then buyb:Stop() end
                        local args = {
                            [1] = "BuyBoat",
                            [2] = selectedBoat
                        }
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    end
                elseif MyBoat then
                    local seat = MyBoat:FindFirstChild("VehicleSeat")
                    if seat and LocalPlayer.Character:FindFirstChild("Humanoid").Sit == false then
                        TPP(seat.CFrame * CFrame.new(0,1,0))
                    end
                end
            end
        end)
    end
end)

local isTeleporting = false
local notified = false
RunService.RenderStepped:Connect(function()
    if not _G.AutoFindFrozen then
        notified = false
        return
    end
    local player = Players.LocalPlayer
    local character = player.Character
    if not character or not character:FindFirstChild("Humanoid") then return end
    
    local function tpToMyBoat()
        if isTeleporting then return end
        isTeleporting = true
        for boatName, seat in pairs(seatHistory) do
            if seat and seat.Parent and seat.Name == "VehicleSeat" and not seat.Occupant then
                topos(seat.CFrame)
                break
            end
        end
        isTeleporting = false
    end
    
    local humanoid = character.Humanoid
    local boatFound = false
    local currentBoat = nil
    
    for _, b in pairs(Workspace.Boats:GetChildren()) do
        local seat = b:FindFirstChild("VehicleSeat")
        if seat and seat.Occupant == humanoid then
            boatFound = true
            currentBoat = seat
            seatHistory[b.Name] = seat
        elseif seat and seat.Occupant == nil then
            tpToMyBoat()
        end
    end

    if not boatFound then return end
    
    currentBoat.MaxSpeed = SetSpeedBoat
    currentBoat.CFrame = CFrame.new(Vector3.new(currentBoat.Position.X, currentBoat.Position.Y, currentBoat.Position.Z)) * currentBoat.CFrame.Rotation
    VirtualInputManager:SendKeyEvent(true, "W", false, game)

    for _, v in pairs(Workspace.Boats:GetDescendants()) do
        if v:IsA("BasePart") then v.CanCollide = false end
    end
    for _, v in pairs(character:GetDescendants()) do
        if v:IsA("BasePart") then v.CanCollide = false end
    end

    local islandsToDelete = { 
        "ShipwreckIsland", 
        "SandIsland", 
        "TreeIsland",
        "TinyIsland", 
        "MysticIsland", 
        "KitsuneIsland", 
        "PrehistoricIsland" 
    }
    for _, islandName in ipairs(islandsToDelete) do
        local island = Workspace.Map:FindFirstChild(islandName)
        if island and island:IsA("Model") then
            island:Destroy()
        end
    end

    local frozenIsland = Workspace.Map:FindFirstChild("FrozenDimension")
    if frozenIsland then
        VirtualInputManager:SendKeyEvent(false, "W", false, game)
        
         sendWebhook("Notification", "Fozen Dimension Spawn")
        _G.AutoFindFrozen = false
        Fluent:Notify({
            Title = "Notification",
            Content = "Frozen Dimension Spawn",
            Duration = 10
        })

        if not notified then
            notified = true
        end
        return
    end
end)

TpFro = Tabs.Se:AddToggle("TpFro", { Title = "Teleport Frozen Dimension", Description = "", Default = _G.Settings.TpFrozen })
TpFro:OnChanged(function(value)
    _G.TpLeviathan = value    
    _G.Settings.TpFrozen = value
    SaveSettings()
    StopTween(_G.TpLeviathan)
end)

spawn(function()
            while wait() do
                if _G.TpLeviathan then
                    pcall(function()
                        if game.Workspace._WorldOrigin.Locations:FindFirstChild('Frozen Dimension') then
                            topos(game.Workspace._WorldOrigin.Locations:FindFirstChild('Frozen Dimension').HumanoidRootPart.CFrame * CFrame.new(0,500,-100))
                        end
                    end)
                end
            end
        end)

Tabs.Se:AddParagraph({
    Title = "Attack Leviathan",
    Content = "Error"
})

local boatdrive = {"Tiki", "Hydra"}

IslandDrive = Tabs.Se:AddDropdown("IslandDrive", {
    Title = "Island Drive Boat",
    Values = boatdrive,
    Multi = false,
    Default = _G.Settings.Drivee,
})
IslandDrive:SetValue(_G.Settings.Drivee)
IslandDrive:OnChanged(function(value)
_G.Settings.Drivee = value
SaveSettings()
end)

Drive = Tabs.Se:AddToggle("Drive", { Title = "Drive Boat To Island Select", Description = "Possible Error", Default = _G.Settings.BoatD })
Drive:OnChanged(function(value)
    _G.BoatTo = value    
    _G.Settings.BoatD = value
    SaveSettings()    
end)

local TargetPositions = {
    Tiki = Vector3.new(-16066.626, -60, 433.520233),
    Hydra = Vector3.new(5057.6875, -60, 2470.07349)
}

RunService.RenderStepped:Connect(function()
    if not _G.BoatTo then return end 

    local player = Players.LocalPlayer
    local character = player.Character
    if not character or not character:FindFirstChild("Humanoid") then return end
    local humanoid = character.Humanoid

    local boat = nil
    for _, b in pairs(Workspace.Boats:GetChildren()) do
        if b.Name == "Beast Hunter" then
            local seat = b:FindFirstChild("VehicleSeat")
            if seat and seat.Occupant == humanoid then
                boat = seat
                break
            end
        end
    end

    if boat then
        boat.MaxSpeed = SetSpeedBoat  
        local destination = TargetPositions[_G.Settings.Drivee] or TargetPositions["Tiki"]
        local currentPosition = boat.Position
        local targetPosition = destination
        local direction = (targetPosition - currentPosition).unit
        local moveVector = direction * boat.MaxSpeed * RunService.RenderStepped:Wait()
        
        boat.CFrame = boat.CFrame + moveVector 
        boat.CFrame = CFrame.new(boat.Position, targetPosition)  

        if (boat.Position - targetPosition).magnitude < 120 then
            _G.BoatTo = false
            VirtualInputManager:SendKeyEvent(false, "W", false, game) 
            
            Fluent:Notify({
                Title = "Notification",
                Content = "Went to " .. (_G.Settings.Drivee or "Tiki"),
                Duration = 5
            })
        end
    end
end)

Tabs.V:AddParagraph({
    Title = "Prehistoric Island",
    Content = "-----"
})

Tabs.V:AddButton({
    Title = "Craft T-Rex Skull",
    Callback = function()
        local args = {
            [1] = "CraftItem",
            [2] = "Craft",
            [3] = "TRexSkull"
        }
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end
})

Tabs.V:AddButton({
    Title = "Craft Dino Hood",
    Callback = function()
        local args = {
            [1] = "CraftItem",
            [2] = "Craft",
            [3] = "DinoHood"
        }
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end
})

Tabs.V:AddButton({
    Title = "Remove Lava In Prehistoric Island",
    Callback = function()
        RemoveLava()
    end
})

function RemoveLava()
    for _, v in pairs(game.Workspace:GetDescendants()) do
        if v.Name == "Lava" then   
            v:Destroy()
        end
    end
    for _, v in pairs(game.ReplicatedStorage:GetDescendants()) do
        if v.Name == "Lava" then   
            v:Destroy()
        end
    end
end

function CraftVolcanicMagnet()
    local args = {"CraftItem", "Craft", "Volcanic Magnet"}
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end

Tabs.V:AddButton({
    Title = "Craft Volcanic Magnet",
    Callback = function()
        CraftVolcanicMagnet()
    end
})

FarmCraftVol = Tabs.V:AddToggle("FarmCraftVol", { Title = "Auto Farm Craft Volcanic Magnet", Description = "Farm Scrap Metal, Blaze Ember Craft Volcanic Magnet", Default = _G.Settings.FarmVol })
FarmCraftVol:OnChanged(function(value)
    _G.FarmVolcanic = value    
    _G.Settings.FarmVol = value
    SaveSettings()
    StopTween(_G.FarmVolcanic)
end)

spawn(function()
    while wait() do
        if _G.FarmVolcanic and GetMaterial("Scrap Metal") >= 10 and GetMaterial("Blaze Ember") >= 15 then
            CraftVolcanicMagnet()
            Fluent:Notify({
                Title = "Notification",
                Content = "Done Craft Volcanic Magnet",
                Duration = 5
            })
            _G.FarmVolcanic = false
        end
    end
end)

local VolcanicPos = { 
    ["Jungle Pirate"] = CFrame.new(-12110.0234, 336.796997, -10652.3623, -0.707134247, 0, -0.707079291, 0, 1, 0, 0.707079291, 0, -0.707134247), 
    ["Musketeer Pirate"] = CFrame.new(-13463.4551, 388.013, -9844.1377, -0.927179813, 0, 0.374617696, 0, 1, 0, -0.374617696, 0, -0.927179813), 
}

spawn(function() 
    while task.wait(0.2) do 
        if VolcanicBring then 
            pcall(function() 
                for _, enemy in ipairs(workspace.Enemies:GetChildren()) do 
                    if VolcanicPos[enemy.Name] and enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then 
                        local hrp = enemy.HumanoidRootPart 
                        local humanoid = enemy.Humanoid

                        hrp.CFrame = VolcanicPos[enemy.Name]
                        hrp.CanCollide = false
                        enemy.Head.CanCollide = false

                        humanoid.Sit = false
                        humanoid:ChangeState(11)
                        task.wait(0.1)
                        humanoid:ChangeState(14)

                        humanoid.JumpPower = 0
                        humanoid.WalkSpeed = 0

                        local animator = humanoid:FindFirstChild("Animator")
                        if animator then
                            animator:Destroy()
                        end

                        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                    end
                end
            end)
        end
    end
end)

local FarmVol1 = CFrame.new(-13537.1436, 470.96701, -9988.36914, 0.927146435, -0, -0.374699205, 0, 1, -0, 0.374699205, 0, 0.927146435)
local FarmVol2 = CFrame.new(-11984.1172, 358.145996, -10448.6553, 0.694307685, -0.323733032, 0.642754793, 0.422593713, 0.906319261, -7.19726086e-06, -0.582538724, 0.271629155, 0.766071975)

local function sendSkillKey(skillKey)
    local virtualInputManager = game:GetService("VirtualInputManager")
    virtualInputManager:SendKeyEvent(true, skillKey, false, game)
    virtualInputManager:SendKeyEvent(false, skillKey, false, game)
end

local function equipAndUseSkill(toolType)
    local player = game.Players.LocalPlayer
    local backpack = player.Backpack
    for _, item in pairs(backpack:GetChildren()) do
        if item:IsA("Tool") and item.ToolTip == toolType then
            item.Parent = player.Character  
            for _, skill in ipairs({"Z", "X", "C", "V", "F"}) do
                wait() 
                pcall(function() sendSkillKey(skill) end) 
            end
            item.Parent = backpack
            break
        end
    end
end

spawn(function() 
    while wait() do 
        if _G.FarmVolcanic and GetMaterial("Scrap Metal") < 10 then 
            pcall(function() 
                local enemyFolder = game:GetService("Workspace").Enemies 
                local targetList = { ["Jungle Pirate"] = true, ["Musketeer Pirate"] = true }

                local foundEnemy = false

                for i, v in pairs(enemyFolder:GetChildren()) do
                    if targetList[v.Name] and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        foundEnemy = true
                        repeat task.wait()
                            AutoHaki()
                            VolcanicBring = true
                            EquipWeapon(_G.SelectWeapon)
                            v.HumanoidRootPart.CanCollide = false
                            v.Humanoid.WalkSpeed = 0
                            v.Head.CanCollide = false 
                            MakoriGayMag = true
                            PosGay = v.HumanoidRootPart.CFrame
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                        until not _G.FarmVolcanic or not v.Parent or v.Humanoid.Health <= 0
                        MakoriGayMag = false
                    end
                end

                if not foundEnemy then
                    local character = game.Players.LocalPlayer.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        local distanceToFarmVol1 = (character.HumanoidRootPart.Position - FarmVol1.Position).Magnitude
                        if distanceToFarmVol1 > 1 then
                            topos(FarmVol1)
                        else
                            wait(2)
                            local distanceToFarmVol2 = (character.HumanoidRootPart.Position - FarmVol2.Position).Magnitude
                            if distanceToFarmVol2 > 1 then
                                topos(FarmVol2)
                            end
                        end
                    end
                    VolcanicBring = false
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        elseif _G.FarmVolcanic and drahun == "" and GetMaterial("Blaze Ember") < 15 then
            pcall(function()                
                topos(CFrame.new(5814.43, 1208.32, 884.57))
                local args = { [1] = {["Context"] = "RequestQuest"} }
                game:GetService("ReplicatedStorage").Modules.Net:FindFirstChild("RF/DragonHunter"):InvokeServer(unpack(args))
            end)
        elseif _G.FarmVolcanic and drahun == "Defeat 3 Venomous Assailants" and GetMaterial("Blaze Ember") < 15 then
            pcall(function()
                local found = false
                for _, v in pairs(workspace.Enemies:GetChildren()) do
                    if v.Name == "Venomous Assailant" and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        found = true
                        repeat task.wait()
                            AutoHaki()
                            HydraBring = true
                            EquipWeapon(_G.SelectWeapon)
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
                        until not _G.FarmVolcanic or not v.Parent or v.Humanoid.Health <= 0
                    end
                end

                if not found then
                    topos(DraQuestFarm)
                    HydraBring = false
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        elseif _G.FarmVolcanic and drahun == "Defeat 3 Hydra Enforcers" and GetMaterial("Blaze Ember") < 15 then
            pcall(function()
                local found = false
                for _, v in pairs(workspace.Enemies:GetChildren()) do
                    if v.Name == "Hydra Enforcer" and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        found = true
                        repeat task.wait()
                            AutoHaki()
                            HydraBring = true
                            EquipWeapon(_G.SelectWeapon)
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
                        until not _G.FarmVolcanic or not v.Parent or v.Humanoid.Health <= 0
                    end
                end

                if not found then
                    topos(DraQuestFarm)
                    HydraBring = false
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        elseif _G.FarmVolcanic and drahun == "Destroy 10 Tree On Hydra Island" and GetMaterial("Blaze Ember") < 15 then
            AutoHaki()
            for _, target in ipairs(targetstree) do
                if drahun ~= "Destroy 10 Tree On Hydra Island" then break end
                topos(target)
                wait()
                local character = game.Players.LocalPlayer.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local distance = (character.HumanoidRootPart.Position - target.Position).Magnitude
                    if distance <= 1 then
                        equipAndUseSkill("Melee")
                        equipAndUseSkill("Sword")
                        equipAndUseSkill("Gun")
                    end
                end
            end
        end
    end
end)

spawn(function()
    while wait() do
        if _G.FarmVolcanic and GetMaterial("Blaze Ember") < 15 then
            pcall(function()
                game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/DragonDojoEmber"):FireServer()
            end)
        end
    end
end)

Volcanic = Tabs.V:AddParagraph({
    Title = "Status Prehistoric Island:",
    Content = ""
})

spawn(function()
    while wait(3) do
        pcall(function()            
            if game.Workspace._WorldOrigin.Locations:FindFirstChild("Prehistoric Island") then
                Volcanic:SetDesc("✅ Spawn")
            else
                Volcanic:SetDesc("❌ Not Spawn")
            end            
        end)
    end
end)

FindPre = Tabs.V:AddToggle("FindPre", { Title = "Auto Find Prehistoric Island", Description = "", Default = _G.Settings.FindPre })
FindPre:OnChanged(function(value)
    _G.AutoFindPrehistoric = value    
    _G.Settings.FindPre = value
    SaveSettings()
    StopTween(_G.AutoFindPrehistoric)
end)

local seatHistory = {}
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Workspace = game:GetService("Workspace")
local SetSpeedBoat = 350  

RunService.RenderStepped:Connect(function()
    for boatName, seat in pairs(seatHistory) do
        if seat and seat.Parent and seat.Name == "VehicleSeat" and not seat.Occupant then
            seatHistory[boatName] = seat
        end
    end
end)

local function tpToMyBoat()
    for boatName, seat in pairs(seatHistory) do
        if seat and seat.Parent and seat.Name == "VehicleSeat" and not seat.Occupant then
            topos(seat.CFrame)
        end
    end
end

spawn(function()
    while wait() do
        pcall(function()
            if _G.AutoFindPrehistoric then
                local LocalPlayer = game.Players.LocalPlayer
                local MyBoat = nil

                for _, boat in pairs(Workspace.Boats:GetChildren()) do
                    if boat.Name == "Guardian" and boat:FindFirstChild("Owner") and boat.Owner.Value == LocalPlayer then
                        MyBoat = boat
                        break
                    end
                end

                if not MyBoat then
                    buyb = TPP(CFrame.new(-17064.3008, 103.064011, 881.570007, 0.207885921, 0, 0.97815311, 0, 1, 0, -0.97815311, 0, 0.207885921))
                    if (LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(-17064.3008, 103.064011, 881.570007, 0.207885921, 0, 0.97815311, 0, 1, 0, -0.97815311, 0, 0.207885921)).Magnitude <= 10 then
                        if buyb then buyb:Stop() end
                        local args = {
                            [1] = "BuyBoat",
                            [2] = "Guardian"
                        }
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    end
                elseif MyBoat then
                    local seat = MyBoat:FindFirstChild("VehicleSeat")
                    if seat and LocalPlayer.Character:FindFirstChild("Humanoid").Sit == false then
                        TPP(seat.CFrame * CFrame.new(0,1,0))
                    end
                end
            end
        end)
    end
end)

local isTeleporting = false
local notified = false
RunService.RenderStepped:Connect(function()
    if not _G.AutoFindPrehistoric then
        notified = false
        return
    end
    local player = Players.LocalPlayer
    local character = player.Character
    if not character or not character:FindFirstChild("Humanoid") then return end
    
    local function tpToMyBoat()
        if isTeleporting then return end
        isTeleporting = true
        for boatName, seat in pairs(seatHistory) do
            if seat and seat.Parent and seat.Name == "VehicleSeat" and not seat.Occupant then
                topos(seat.CFrame)
                break
            end
        end
        isTeleporting = false
    end
    
    local humanoid = character.Humanoid
    local boatFound = false
    local currentBoat = nil
    
    for _, b in pairs(Workspace.Boats:GetChildren()) do
        local seat = b:FindFirstChild("VehicleSeat")
        if seat and seat.Occupant == humanoid then
            boatFound = true
            currentBoat = seat
            seatHistory[b.Name] = seat
        elseif seat and seat.Occupant == nil then
            tpToMyBoat()
        end
    end

    if not boatFound then return end
    
    currentBoat.MaxSpeed = SetSpeedBoat
    currentBoat.CFrame = CFrame.new(Vector3.new(currentBoat.Position.X, currentBoat.Position.Y, currentBoat.Position.Z)) * currentBoat.CFrame.Rotation
    VirtualInputManager:SendKeyEvent(true, "W", false, game)

    for _, v in pairs(Workspace.Boats:GetDescendants()) do
        if v:IsA("BasePart") then v.CanCollide = false end
    end
    for _, v in pairs(character:GetDescendants()) do
        if v:IsA("BasePart") then v.CanCollide = false end
    end

    local islandsToDelete = { 
        "ShipwreckIsland", 
        "SandIsland", 
        "TreeIsland",
        "TinyIsland", 
        "MysticIsland", 
        "KitsuneIsland", 
        "FrozenDimension" 
    }
    for _, islandName in ipairs(islandsToDelete) do
        local island = Workspace.Map:FindFirstChild(islandName)
        if island and island:IsA("Model") then
            island:Destroy()
        end
    end

    local prehistoricIsland = Workspace.Map:FindFirstChild("PrehistoricIsland")
    if prehistoricIsland then
        VirtualInputManager:SendKeyEvent(false, "W", false, game)
        
         sendWebhook("Notification", "Prehistoric Island Spawn")
        _G.AutoFindPrehistoric = false
        Fluent:Notify({
            Title = "Notification",
            Content = "Prehistoric Island Spawn",
            Duration = 5
        })
        game.Players.LocalPlayer.Character.Humanoid.Sit = false
        _G.TpPrehistoric = true

        if not notified then
            notified = true
        end
        return
    end
end)

TpPre = Tabs.V:AddToggle("TpPre", { Title = "Teleport Prehistoric Island", Description = "", Default = _G.Settings.TpVolcanic })
TpPre:OnChanged(function(value)
    _G.TpPrehistoric = value    
    _G.Settings.TpVolcanic = value
    SaveSettings()
    StopTween(_G.TpPrehistoric)
end)

spawn(function()
    local island
    while not island do
        island = game:GetService("Workspace").Map:FindFirstChild("PrehistoricIsland")
        wait()
    end
    while wait() do
        if _G.TpPrehistoric then
            local prehistoricIslandCore = game:GetService("Workspace").Map:FindFirstChild("PrehistoricIsland")
            if prehistoricIslandCore then
                local relic = prehistoricIslandCore:FindFirstChild("Core") and prehistoricIslandCore.Core:FindFirstChild("PrehistoricRelic")
                local skull = relic and relic:FindFirstChild("Skull")
                if skull then
                    topos(CFrame.new(skull.Position))
                    _G.TpPrehistoric = false
                end
            end
        end
    end
end)

FixPre = Tabs.V:AddToggle("FixPre", { Title = "Auto Fix Volcanic", Description = "", Default = _G.Settings.FixVol })
FixPre:OnChanged(function(value)
    _G.DefendVolcano = value    
    _G.Settings.FixVol = value
    SaveSettings()
    StopTween(_G.DefendVolcano)
end)

local function useSkill(skillKey)
	game:GetService("VirtualInputManager"):SendKeyEvent(true, skillKey, false, game)
	game:GetService("VirtualInputManager"):SendKeyEvent(false, skillKey, false, game)
end

local function removeLava()
	local interiorLavaModel = game.Workspace.Map.PrehistoricIsland.Core:FindFirstChild("InteriorLava")
	if interiorLavaModel and interiorLavaModel:IsA("Model") then
		interiorLavaModel:Destroy()
	end

	local prehistoricIsland1 = game.Workspace.Map:FindFirstChild("PrehistoricIsland")
	if prehistoricIsland1 then
		for _, descendant in pairs(prehistoricIsland1:GetDescendants()) do
			if descendant:IsA("Part") and descendant.Name:lower():find("lava") then
				descendant:Destroy()
			end
		end
	end

	local prehistoricIsland2 = game.Workspace.Map:FindFirstChild("PrehistoricIsland")
	if prehistoricIsland2 then
		for _, model in pairs(prehistoricIsland2:GetDescendants()) do
			if model:IsA("Model") then
				for _, child in pairs(model:GetDescendants()) do
					if child:IsA("MeshPart") and child.Name:lower():find("lava") then
						child:Destroy()
					end
				end
			end
		end
	end
end

local function findValidRock()
	local volcanoRocksFolder = game.Workspace.Map.PrehistoricIsland.Core.VolcanoRocks
	for _, Rock in pairs(volcanoRocksFolder:GetChildren()) do
		if Rock:IsA("Model") then
			local volcanorock = Rock:FindFirstChild("volcanorock")
			if volcanorock and volcanorock:IsA("MeshPart") then
				local color = volcanorock.Color
				if color == Color3.fromRGB(185, 53, 56) or color == Color3.fromRGB(185, 53, 57) then
					return volcanorock
				end
			end
		end
	end
	return nil
end

local function equipAndUseSkill(toolType)
	local player = game.Players.LocalPlayer
	local backpack = player.Backpack
	for _, item in pairs(backpack:GetChildren()) do
		if item:IsA("Tool") and item.ToolTip == toolType then
			item.Parent = player.Character
			for _, skill in ipairs({"Z", "X", "C", "V", "F"}) do
				wait()
				pcall(function()
					useSkill(skill)
				end)
			end
			item.Parent = backpack
			break
		end
	end
end

spawn(function()
	while wait() do
		if _G.DefendVolcano then
			AutoHaki()
			pcall(removeLava)
			local currentTarget = findValidRock()
			if currentTarget then
				local targetPosition = CFrame.new(currentTarget.Position)
				topos(targetPosition)
				local color = currentTarget.Color
				if color ~= Color3.fromRGB(185, 53, 56) and color ~= Color3.fromRGB(185, 53, 57) then
					currentTarget = findValidRock()
				else
					local currentPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
					local distance = (currentPosition - currentTarget.Position).Magnitude
					if distance <= 1 then
						if _G.UseMelee then
							equipAndUseSkill("Melee")
						end
						if _G.UseSword then
							equipAndUseSkill("Sword")
						end
						if _G.UseGun then
							equipAndUseSkill("Gun")
						end
					end
					_G.TpPrehistoric = false
				end
			else
				_G.TpPrehistoric = true
			end
		end
	end
end)

GolemAttack = Tabs.V:AddToggle("GolemAttack", { Title = "Auto Kill Golem [ Attack ]", Description = "", Default = _G.Settings.KillGolem })
GolemAttack:OnChanged(function(value)
    _G.KillGolem = value    
    _G.Settings.KillGolem = value
    SaveSettings()
    StopTween(_G.KillGolem)
end)

spawn(function()
    while wait() do
        if _G.KillGolem and World3 then
            pcall(function()
                if game:GetService("Workspace").Enemies:FindFirstChild("Lava Golem") then
                    for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                        if v.Name == "Lava Golem" then
                            if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                EquipWeapon(_G.SelectWeapon)

                                repeat task.wait()
                                    AutoHaki()
                                    v.HumanoidRootPart.CanCollide = false
                                    v.Humanoid.WalkSpeed = 0
                                    v.HumanoidRootPart.Size = Vector3.new(50, 50, 50)
                                    topos(v.HumanoidRootPart.CFrame * Pos)
                                    sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                                until not _G.KillGolem or not v.Parent or v.Humanoid.Health <= 0
                            end
                        end
                    end
                else
                    UnEquipWeapon(_G.SelectWeapon)
                    if game:GetService("ReplicatedStorage"):FindFirstChild("Lava Golem") then
                        topos(game:GetService("ReplicatedStorage"):FindFirstChild("Lava Golem").HumanoidRootPart.CFrame * CFrame.new(2, 20, 2))
                    end
                end
            end)
        end
    end
end)

GolemFast = Tabs.V:AddToggle("GolemFast", { Title = "Auto Kill Golem [ Kill Aura Fast ]", Description = "Possible Error", Default = _G.Settings.KillGolemFast })
GolemFast:OnChanged(function(value)
    _G.Kill_Aura = value    
    _G.Settings.KillGolemFast = value
    SaveSettings()    
end)

spawn(function()
    pcall(function()
        while wait() do
            if _G.Kill_Aura then
                local player = game:GetService("Players").LocalPlayer
                local enemies = game:GetService("Workspace").Enemies:GetChildren()
                local playerPos = player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.Position
                if playerPos then
                    for _, enemy in pairs(enemies) do
                        if enemy:FindFirstChild("Humanoid") and enemy:FindFirstChild("HumanoidRootPart") and enemy.Humanoid.Health > 0 then
                            local distance = (enemy.HumanoidRootPart.Position - playerPos).Magnitude
                            if distance <= 1000 then
                                pcall(function()
                                    repeat wait()
                                        sethiddenproperty(player, "SimulationRadius", math.huge)
                                        enemy.Humanoid.Health = 0
                                        enemy.HumanoidRootPart.CanCollide = false
                                    until not _G.Kill_Aura or not enemy.Parent or enemy.Humanoid.Health <= 0
                                end)
                            end
                        end
                    end
                end
            end
        end
    end)
end)

BoneDino = Tabs.V:AddToggle("BoneDino", { Title = "Auto Collect Dino Bone", Description = "", Default = _G.Settings.CollectBone })
BoneDino:OnChanged(function(value)
    _G.CollectBone = value    
    _G.Settings.CollectBone = value
    SaveSettings()    
end)

spawn(function()
    while wait() do
        if _G.CollectBone then
            for _, obj in pairs(workspace:GetDescendants()) do
                if obj:IsA("BasePart") and obj.Name == "DinoBone" then
                    topos(CFrame.new(obj.Position))
                end
            end
        end
    end
end)

Egg = Tabs.V:AddToggle("Egg", { Title = "Auto Collect Dragon Egg", Description = "", Default = _G.Settings.CollectEgg })
Egg:OnChanged(function(value)
    _G.CollectEgg = value    
    _G.Settings.CollectEgg = value
    SaveSettings()  
end)

spawn(function()
	while wait() do
		if _G.CollectEgg then
			local dragonEggs = workspace.Map.PrehistoricIsland.Core.SpawnedDragonEggs:GetChildren()
			if #dragonEggs > 0 then
				local randomEgg = dragonEggs[math.random(1, #dragonEggs)]
				if randomEgg:IsA("Model") and randomEgg.PrimaryPart then
					topos(randomEgg.PrimaryPart.CFrame)
					local playerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
					local eggPosition = randomEgg.PrimaryPart.Position
					local distance = (playerPosition - eggPosition).Magnitude
					if distance <= 1 then
						game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
						wait(1.5)
						game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)
					end
				end
			end
		end
	end
end)

UseMelee = Tabs.V:AddToggle("UseMelee", { Title = "Use Melee Fix Volcanic", Description = "", Default = _G.Settings.UseM })
UseMelee:OnChanged(function(value)
    _G.UseMelee = value    
    _G.Settings.UseM = value
    SaveSettings()
end)

UseSword = Tabs.V:AddToggle("UseSword", { Title = "Use Sword Fix Volcanic", Description = "", Default = _G.Settings.UseS })
UseSword:OnChanged(function(value)
    _G.UseSword = value    
    _G.Settings.UseS = value
    SaveSettings()
end)

UseGun = Tabs.V:AddToggle("UseGun", { Title = "Use Gun Fix Volcanic", Description = "", Default = _G.Settings.UseG })
UseGun:OnChanged(function(value)
    _G.UseGun = value    
    _G.Settings.UseG = value
    SaveSettings()    
end)

Tabs.F:AddParagraph({
    Title = "Admin Panel",
    Content = "-----"
})

local FruitAdminPanel = {"Eagle","Gravity"}

FruitPanel = Tabs.F:AddDropdown("FruitPanel", {
    Title = "Fruits Admin Panel",
    Values = FruitAdminPanel,
    Multi = false,
    Default = _G.Settings.FruitPanel,
})
FruitPanel:SetValue(_G.Settings.FruitPanel)
FruitPanel:OnChanged(function(value)
_G.FruitAdmin = value
_G.Settings.FruitPanel = value
SaveSettings()
end)

local FileF = {"A","B","C","D-1","D-2"}

File = Tabs.F:AddDropdown("File", {
    Title = "Select File Farm",
    Values = FileF,
    Multi = false,
    Default = _G.Settings.SelectFile,
})
File:SetValue(_G.Settings.SelectFile)
File:OnChanged(function(value)
_G.File = value
_G.Settings.SelectFile = value
SaveSettings()
end)

FarmFile = Tabs.F:AddToggle("FarmFile", { Title = "Auto Farm File And Fruits Select", Description = "", Default = _G.Settings.FarmFile })
FarmFile:OnChanged(function(value)
    _G.FarmFile = value    
    _G.Settings.FarmFile = value
    SaveSettings()
    StopTween(_G.FarmFile)
end)

spawn(function() 
        while wait() do
         if _G.FarmFile and _G.FruitAdmin == "Eagle" and _G.File == "A" and not World1 then    
            pcall(function()   
                EquipWeapon(game.Players.LocalPlayer.Data.DevilFruit.Value)    
                local char = game.Players.LocalPlayer.Character
                if char and char:FindFirstChild("HumanoidRootPart") then
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, "W", false, game)
                    wait()
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, "W", false, game)

                    local currentPos = char.HumanoidRootPart.Position
                    local upPos = CFrame.new(currentPos + Vector3.new(0, 100000, 0))
                    topos(upPos)
                end
            end)
        end
    end
end)

local ForestPos = { 
    ["Mythological Pirate"] = CFrame.new(-13475.7363, 518.666992, -6972.9209, -0.851676583, 0.34199208, 0.397099853, 0.378620476, 0.925429761, 0.0150403501, -0.362344354, 0.163159639, -0.91765213), 
    ["Forest Pirate"] = CFrame.new(-13423.5469, 341.027008, -7806.01221, 0.336825609, -0.534917355, 0.774862528, -0.925413609, -0.0362888575, 0.377217233, -0.173661143, -0.844124734, -0.507242918), 
}

spawn(function() 
    while task.wait(0.2) do 
        if ForestBring then 
            pcall(function() 
                for _, enemy in ipairs(workspace.Enemies:GetChildren()) do 
                    if ForestPos[enemy.Name] and enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then 
                        local hrp = enemy.HumanoidRootPart 
                        local humanoid = enemy.Humanoid

                        hrp.CFrame = ForestPos[enemy.Name]
                        hrp.CanCollide = false
                        enemy.Head.CanCollide = false

                        humanoid.Sit = false
                        humanoid:ChangeState(11)
                        task.wait(0.1)
                        humanoid:ChangeState(14)

                        humanoid.JumpPower = 0
                        humanoid.WalkSpeed = 0

                        local animator = humanoid:FindFirstChild("Animator")
                        if animator then
                            animator:Destroy()
                        end

                        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                    end
                end
            end)
        end
    end
end)

local FarmFo1 = CFrame.new(-13470.5293, 400.981995, -7774.14502, -0.534864426, -0.336802781, 0.77490896, -0.0362904817, 0.925430357, 0.377175927, -0.844158113, 0.173616171, -0.507202506)
local FarmMy2 = CFrame.new(-13425.7852, 468.338013, -6875.34717, 0, 0, 1, 0, 1, -0, -1, 0, 0)
	
spawn(function() 
    while wait() do 
        if _G.FarmFile and _G.FruitAdmin == "Eagle" and _G.File == "B" and not World1 then 
            pcall(function() 
                local enemyFolder = game:GetService("Workspace").Enemies 
                local targetList = { ["Forest Pirate"] = true, ["Mythological Pirate"] = true }

                local foundEnemy = false

                for i, v in pairs(enemyFolder:GetChildren()) do
                    if targetList[v.Name] and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        foundEnemy = true
                        repeat task.wait()
                            AutoHaki()
                            
                            if v.Humanoid.Health <= v.Humanoid.MaxHealth * 37 / 100 then
                                EquipWeapon(game.Players.LocalPlayer.Data.DevilFruit.Value)
                                _G.AutoClickM1 = true
                            else
                                EquipWeapon(_G.SelectWeapon)
                                _G.AutoClickM1 = false
                            end

                            ForestBring = true
                            v.HumanoidRootPart.CanCollide = false
                            v.Humanoid.WalkSpeed = 0
                            v.Head.CanCollide = false 
                            MakoriGayMag = true
                            PosGay = v.HumanoidRootPart.CFrame
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                        until not _G.FarmFile or not v.Parent or v.Humanoid.Health <= 0
                        MakoriGayMag = false
                    end
                end

                if not foundEnemy then
                    local character = game.Players.LocalPlayer.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        local distanceToFarmFo1 = (character.HumanoidRootPart.Position - FarmFo1.Position).Magnitude
                        if distanceToFarmFo1 > 1 then
                            topos(FarmFo1)
                        else
                            wait(2)
                            local distanceToFarmMy2 = (character.HumanoidRootPart.Position - FarmMy2.Position).Magnitude
                            if distanceToFarmMy2 > 1 then
                                topos(FarmMy2)
                            end
                        end
                    end
                    ForestBring = false
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        end
    end
end)

local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

local function GetNearestMob()
    local nearestMob, shortestDistance = nil, math.huge
    for _, v in pairs(workspace.Enemies:GetChildren()) do
        if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            local distance = (Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestMob = v
            end
        end
    end
    return nearestMob
end

task.spawn(function()
    while task.wait(0.15) do
        if _G.AutoClickM1 then
            local mob = GetNearestMob()
            if mob then
                local root = Character:FindFirstChild("HumanoidRootPart")
                if root then
                    local direction = (mob.HumanoidRootPart.Position - root.Position).Unit
                    root.CFrame = CFrame.new(root.Position, root.Position + Vector3.new(direction.X, 0, direction.Z))
                end

                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
            end
        end
    end
end)

spawn(function() 
    while wait() do 
        if _G.FarmFile and _G.FruitAdmin == "Eagle" and _G.File == "C" and not World1 then 
            pcall(function() 
                local enemyFolder = game:GetService("Workspace").Enemies 
                local targetList = { ["Forest Pirate"] = true, ["Mythological Pirate"] = true }

                local foundEnemy = false

                for i, v in pairs(enemyFolder:GetChildren()) do
                    if targetList[v.Name] and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        foundEnemy = true
                        repeat task.wait()
                            AutoHaki()
                            
                            if v.Humanoid.Health <= v.Humanoid.MaxHealth * 37 / 100 then
                                EquipWeapon(game.Players.LocalPlayer.Data.DevilFruit.Value)
                                _G.AutoClickM1s2 = true
                            else
                                EquipWeapon(_G.SelectWeapon)
                                _G.AutoClickM1s2 = false
                            end

                            ForestBring = true
                            v.HumanoidRootPart.CanCollide = false
                            v.Humanoid.WalkSpeed = 0
                            v.Head.CanCollide = false 
                            MakoriGayMag = true
                            PosGay = v.HumanoidRootPart.CFrame
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                        until not _G.FarmFile or not v.Parent or v.Humanoid.Health <= 0
                        MakoriGayMag = false
                    end
                end

                if not foundEnemy then
                    local character = game.Players.LocalPlayer.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        local distanceToFarmFo1 = (character.HumanoidRootPart.Position - FarmFo1.Position).Magnitude
                        if distanceToFarmFo1 > 1 then
                            topos(FarmFo1)
                        else
                            wait(2)
                            local distanceToFarmMy2 = (character.HumanoidRootPart.Position - FarmMy2.Position).Magnitude
                            if distanceToFarmMy2 > 1 then
                                topos(FarmMy2)
                            end
                        end
                    end
                    ForestBring = false
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        end
    end
end)

local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

local function GetNearestMob()
    local nearestMob, shortestDistance = nil, math.huge
    for _, v in pairs(workspace.Enemies:GetChildren()) do
        if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            local distance = (Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestMob = v
            end
        end
    end
    return nearestMob
end

task.spawn(function()
    while task.wait(0.15) do
        if _G.AutoClickM1s2 then
            local mob = GetNearestMob()
            if mob then
                local root = Character:FindFirstChild("HumanoidRootPart")
                if root then
                    local direction = (mob.HumanoidRootPart.Position - root.Position).Unit
                    root.CFrame = CFrame.new(root.Position, root.Position + Vector3.new(direction.X, 0, direction.Z))
                end

                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
                task.wait(2)
                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
            end
        end
    end
end)
		 	 
spawn(function()
    while wait() do
        pcall(function()
            if _G.FarmFile and _G.FruitAdmin == "Eagle" and (_G.File == "D-1" or _G.File == "D-2") then
                Fluent:Notify({
                    Title = "Notification",
                    Content = "Eagle Don't Have File D-1 And D-2",
                    Duration = 5
                })
                _G.FarmFile = false
            end
        end)
    end
end)

spawn(function() 
    while wait() do 
        if _G.FarmFile and _G.FruitAdmin == "Gravity" and (_G.File == "A" or _G.File == "B") and not World1 then 
            pcall(function() 
                local enemyFolder = game:GetService("Workspace").Enemies 
                local targetList = { ["Forest Pirate"] = true, ["Mythological Pirate"] = true }

                local foundEnemy = false

                for i, v in pairs(enemyFolder:GetChildren()) do
                    if targetList[v.Name] and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        foundEnemy = true
                        repeat task.wait()
                            AutoHaki()
                            
                            if v.Humanoid.Health <= v.Humanoid.MaxHealth * 37 / 100 then
                                EquipWeapon(game.Players.LocalPlayer.Data.DevilFruit.Value)
                                _G.AutoClickM1 = true
                            else
                                EquipWeapon(_G.SelectWeapon)
                                _G.AutoClickM1 = false
                            end

                            ForestBring = true
                            v.HumanoidRootPart.CanCollide = false
                            v.Humanoid.WalkSpeed = 0
                            v.Head.CanCollide = false 
                            MakoriGayMag = true
                            PosGay = v.HumanoidRootPart.CFrame
                            topos(v.HumanoidRootPart.CFrame * Pos)
                            game:GetService("VirtualUser"):CaptureController()
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                        until not _G.FarmFile or not v.Parent or v.Humanoid.Health <= 0
                        MakoriGayMag = false
                    end
                end

                if not foundEnemy then
                    local character = game.Players.LocalPlayer.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        local distanceToFarmFo1 = (character.HumanoidRootPart.Position - FarmFo1.Position).Magnitude
                        if distanceToFarmFo1 > 1 then
                            topos(FarmFo1)
                        else
                            wait(2)
                            local distanceToFarmMy2 = (character.HumanoidRootPart.Position - FarmMy2.Position).Magnitude
                            if distanceToFarmMy2 > 1 then
                                topos(FarmMy2)
                            end
                        end
                    end
                    ForestBring = false
                    UnEquipWeapon(_G.SelectWeapon)
                end
            end)
        end
    end
end)

spawn(function()
    while task.wait() do
        pcall(function()
            if _G.FarmFile and _G.FruitAdmin == "Gravity" and _G.File == "C" and not World1 then
                local lp = game.Players.LocalPlayer
                local myChar = lp.Character
                if not myChar or not myChar:FindFirstChild("HumanoidRootPart") then return end

                local closestSeat = nil
                local minDist = math.huge

                for _, seat in pairs(workspace.Boats:GetDescendants()) do
                    if seat:IsA("VehicleSeat") then
                        local boatModel = seat:FindFirstAncestorOfClass("Model")
                        if boatModel then
                            local owner = boatModel:FindFirstChild("Owner")
                            if owner and tostring(owner.Value) ~= lp.Name then
                                local dist = (seat.Position - myChar.HumanoidRootPart.Position).Magnitude
                                if dist < minDist then
                                    minDist = dist
                                    closestSeat = seat
                                end
                            end
                        end
                    end
                end

                if closestSeat then
                    topos(closestSeat.CFrame * CFrame.new(0, 5, 0))

                    EquipWeapon(game.Players.LocalPlayer.Data.DevilFruit.Value)

                    game:GetService('VirtualInputManager'):SendKeyEvent(true, "Z", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "Z", false, game)

                game:GetService('VirtualInputManager'):SendKeyEvent(true, "X", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "X", false, game)

                game:GetService('VirtualInputManager'):SendKeyEvent(true, "C", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "C", false, game)
                game:GetService('VirtualInputManager'):SendKeyEvent(true, "V", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "V", false, game)
                end
            end
        end)
    end
end)
	
local VirtualInputManager = game:GetService("VirtualInputManager")	

spawn(function()
    while wait() do
        pcall(function()
            if _G.FarmFile and _G.FruitAdmin == "Gravity" and _G.File == "D-1" and not World1 then
                topos(CFrame.new(-4595.26318, 12.2220001, -2887.47705, 0.927179396, 0, 0.374617696, 0, 1, 0, -0.374617696, 0, 0.927179396))
                EquipWeapon(game.Players.LocalPlayer.Data.DevilFruit.Value)
                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        task.wait(0.1)
            end
        end)
    end
end)

local percentThreshold = 10
local currentTarget = nil

function getClosestPlayer()
    local lp = game.Players.LocalPlayer
    local myChar = lp.Character
    if not myChar or not myChar:FindFirstChild("HumanoidRootPart") then return nil end

    local closestPlayer = nil
    local minDist = math.huge

    for _, plr in pairs(game.Players:GetPlayers()) do
        if plr ~= lp and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Humanoid") and plr.Character.Humanoid.Health > 0 then
            local dist = (plr.Character.HumanoidRootPart.Position - myChar.HumanoidRootPart.Position).Magnitude
            if dist < minDist then
                minDist = dist
                closestPlayer = plr
            end
        end
    end

    return closestPlayer
end

spawn(function()
    while task.wait() do
        pcall(function()
            if _G.FarmFile and _G.FruitAdmin == "Gravity" and _G.File == "D-2" and not World1 then              
                if not currentTarget or not currentTarget.Character or not currentTarget.Character:FindFirstChild("HumanoidRootPart") or currentTarget.Character.Humanoid.Health <= 0 then
                    currentTarget = getClosestPlayer()
                end

                local enemy = currentTarget and currentTarget.Character
                if enemy and enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
                    local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude

                    _G.FarmGravityReal = enemy.Humanoid.Health <= enemy.Humanoid.MaxHealth * (percentThreshold / 100)
                    _G.FarmGravity = dist <= 15
                    _G.FarmGravityM = dist <= 15

                    if _G.FarmGravityReal then
                        _G.FarmGravity = false
                        _G.FarmGravityM = false
                    end

                    topos(enemy.HumanoidRootPart.CFrame)
                end
            else
                _G.FarmGravity = false
                _G.FarmGravityM = false
                _G.FarmGravityReal = false    
                currentTarget = nil
            end
        end)
    end
end)

spawn(function()
    while task.wait() do
        pcall(function()
            if _G.FarmGravity then
                game:GetService('VirtualInputManager'):SendKeyEvent(true, "Z", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "Z", false, game)

                game:GetService('VirtualInputManager'):SendKeyEvent(true, "X", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "X", false, game)

                game:GetService('VirtualInputManager'):SendKeyEvent(true, "C", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "C", false, game)
                game:GetService('VirtualInputManager'):SendKeyEvent(true, "V", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "V", false, game)

                EquipWeapon(game.Players.LocalPlayer.Data.DevilFruit.Value)
            end
        end)
    end
end)

spawn(function()
    while task.wait() do
        pcall(function()
            if _G.FarmGravityM then
                game:GetService('VirtualInputManager'):SendKeyEvent(true, "Z", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "Z", false, game)

                game:GetService('VirtualInputManager'):SendKeyEvent(true, "X", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "X", false, game)

                game:GetService('VirtualInputManager'):SendKeyEvent(true, "C", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "C", false, game)

                EquipWeapon(_G.SelectWeapon)
            end
        end)
    end
end)

spawn(function()
    while task.wait() do
        pcall(function()
            if _G.FarmGravityReal then
                game:GetService('VirtualInputManager'):SendKeyEvent(true, "Z", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "Z", false, game)

                game:GetService('VirtualInputManager'):SendKeyEvent(true, "X", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "X", false, game)

                game:GetService('VirtualInputManager'):SendKeyEvent(true, "C", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "C", false, game)
                game:GetService('VirtualInputManager'):SendKeyEvent(true, "V", false, game)
                wait()
                game:GetService('VirtualInputManager'):SendKeyEvent(false, "V", false, game)

                EquipWeapon(game.Players.LocalPlayer.Data.DevilFruit.Value)
            end
        end)
    end
end)

Tabs.F:AddParagraph({
    Title = "Fruits",
    Content = "-----"
})

RanFruit = Tabs.F:AddToggle("RanFruit", { Title = "Random Fruits", Description = "", Default = _G.Settings.RanFruit })
RanFruit:OnChanged(function(value)
    _G.Random_Auto = value    
    _G.Settings.RanFruit = value
    SaveSettings()    
end)

spawn(function()
        pcall(function()
            while wait(.1) do
                if _G.Random_Auto then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Cousin","Buy")
                end 
            end
        end)
    end)

Store = Tabs.F:AddToggle("Store", { Title = "Auto Store Fruits", Description = "", Default = _G.AutoStoreFruit })
Store:OnChanged(function(value)
    _G.AutoStoreFruit = value    
    _G.Settings.Store = value
    SaveSettings()
end)

function DropFruit()
	pcall(function()
		game.Players.LocalPlayer.PlayerGui.Main.FruitInventory.Position = UDim2.new(10.100, 0, 0.100, 0) 
		game.Players.LocalPlayer.PlayerGui.Main.FruitInventory.Visible = true 
		local invenfruit = game.Players.LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame
		wait(.3)
		for i,v in pairs(invenfruit:GetChildren()) do
			if string.find(v.Name,"-") then
				for _,Backpack in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
					FruitStoreF = string.split(Backpack.Name, " ")[1]
					FruitStoreR = FruitStoreF.."-"..FruitStoreF
					if v.Name == FruitStoreR then
						game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(Backpack.Name):Destroy()
					end												
				end
			end
		end
		for i,v in pairs(invenfruit:GetChildren()) do
			if string.find(v.Name,"-") then
				for _,Character in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
					FruitStoreF = string.split(Character.Name, " ")[1]
					FruitStoreR = FruitStoreF.."-"..FruitStoreF
					if v.Name == FruitStoreR then
						game:GetService("Players").LocalPlayer.Character:FindFirstChild(Character.Name):Destroy()
					end												
				end
			end
		end
	end)
end

spawn(function()
	while wait() do
		if _G.AutoStoreFruit then
			pcall(function()
				DropFruit()
				wait()
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Bomb Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Bomb Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Bomb-Bomb",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Bomb Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Bomb Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Spike Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Spike Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Spike-Spike",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Spike Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Spike Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Rocket Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Rocket Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Rocket-Rocket",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Rocket Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Rocket Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Blade Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Blade Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Blade-Blade",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Blade Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Blade Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Spring Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Spring Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Spring-Spring",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Spring Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Spring Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Gas Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Gas Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Gas-Gas",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Gas Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Gas Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Smoke Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Smoke Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Smoke-Smoke",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Smoke Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Smoke Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Spin Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Spin Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Spin-Spin",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Spin Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Spin Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Flame Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Flame Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Flame-Flame",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Flame Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Flame Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Eagle Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Eagle Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Eagle-Eagle",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Eagle Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Eagle Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Ice Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Ice Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Ice-Ice",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Ice Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Ice Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Sand Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Sand Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Sand-Sand",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Sand Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Sand Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Dark Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Dark Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Dark-Dark",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Dark Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Dark Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Ghost Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Ghost Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Ghost-Ghost",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Ghost Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Ghost Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Diamond Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Diamond Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Diamond-Diamond",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Diamond Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Diamond Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Light Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Light Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Light-Light",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Light Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Light Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Love Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Love Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Love-Love",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Love Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Love Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Rubber Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Rubber Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Rubber-Rubber",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Rubber Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Rubber Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Creation Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Creation Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Creation-Creation",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Creation Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Creation Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Magma Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Magma Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Magma-Magma",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Magma Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Magma Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Portal Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Portal Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Portal-Portal",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Portal Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Portal Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Quake Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Quake Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Quake-Quake",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Quake Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Quake Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Human-Human: Buddha Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Human-Human: Buddha Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Human-Human: Buddha",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Human-Human: Buddha Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Human-Human: Buddha Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Spider Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Spider Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Spider-Spider",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Spider Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Spider Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Bird: Phoenix Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Bird: Phoenix Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Bird-Bird: Phoenix",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Bird: Phoenix Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Bird: Phoenix Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Rumble Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Rumble Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Rumble-Rumble",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Rumble Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Rumble Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Pain Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Pain Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Pain-Pain",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Pain Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Pain Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Gravity Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Gravity Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Gravity-Gravity",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Gravity Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Gravity Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Dough Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Dough Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Dough-Dough",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Dough Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Dough Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Shadow Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Shadow Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Shadow-Shadow",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Shadow Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Shadow Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Venom Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Venom Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Venom-Venom",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Venom Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Venom Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Control Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Control Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Control-Control",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Control Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Control Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Dragon Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Dragon Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Dragon-Dragon",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Dragon Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Dragon Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Kitsune Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Kitsune Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Kitsune-Kitsune",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Kitsune Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Kitsune Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Leopard Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Leopard Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Leopard-Leopard",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Leopard Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Leopard Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("T-Rex Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("T-Rex Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","T-Rex-T-Rex",game:GetService("Players").LocalPlayer.Character:FindFirstChild("T-Rex Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("T-Rex Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Mammoth Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Mammoth Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Mammoth-Mammoth",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Mammoth Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Mammoth Fruit"))
				end
				if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Yeti Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Yeti Fruit") then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Yeti-Yeti",game:GetService("Players").LocalPlayer.Character:FindFirstChild("Yeti Fruit") or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Yeti Fruit"))
				end
			end)
		 end
	   end
    end)

CollectF = Tabs.F:AddToggle("CollectF", { Title = "Auto Collect Fruits", Description = "", Default = _G.Settings.CollectFruit })
CollectF:OnChanged(function(value)
    _G.CollectFruits = value    
    _G.Settings.CollectFruit = value
    SaveSettings()
end)

spawn(function()
    while wait(.1) do
        if _G.CollectFruits then
            local foundFruit = false
            for i, v in pairs(game.Workspace:GetChildren()) do
                if string.find(v.Name, "Fruit") then
                    foundFruit = true
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Handle.CFrame
                    break
                end
            end

            if not foundFruit and _G.HopFruits then  
                wait(5)
                Hop()  
            end  
        end
    end
end)

HopFruit = Tabs.F:AddToggle("HopFruit", { Title = "Hop Collect Fruits", Description = "", Default = _G.Settings.HopFruits })
HopFruit:OnChanged(function(value)
    if value and not _G.CollectFruits then
        Fluent:Notify({
            Title = "Notification",
            Content = "Pls Enable Auto Collect Fruits",
            Duration = 8
        })
    end
    _G.HopFruits = value    
    _G.Settings.HopFruits = value
    SaveSettings()   
end)

Tabs.F:AddParagraph({
    Title = "Raid",
    Content = "-----"
})

_G.SelectChip = selectraids or ""
	Raidslist = {}
	RaidsModule = require(game.ReplicatedStorage.Raids)
	for i,v in pairs(RaidsModule.raids) do
		table.insert(Raidslist,v)
	end
	for i,v in pairs(RaidsModule.advancedRaids) do
		table.insert(Raidslist,v)
	end
Chip = Tabs.F:AddDropdown("Chip", {
    Title = "Select Chip",
    Values = Raidslist,
    Multi = false,
    Default = 1,
})
Chip:SetValue("")
Chip:OnChanged(function(value)
_G.SelectChip = value
end)

BuyChip = Tabs.F:AddToggle("BuyChip", { Title = "Auto Buy Chip Select", Description = "", Default = _G.Settings.BuyChip })
BuyChip:OnChanged(function(value)
    _G.AutoBuyChip = value    
    _G.Settings.BuyChip = value
    SaveSettings()    
end)

spawn(function()
        pcall(function()
            while wait() do
                if _G.AutoBuyChip then
                    if not game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Special Microchip") or not game:GetService("Players").LocalPlayer.Character:FindFirstChild("Special Microchip") then
                        if not game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1") then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidsNpc", "Select", _G.SelectChip)
                        end
                    end
                end
            end
        end)
    end)

Start = Tabs.F:AddToggle("Start", { Title = "Auto Start Raid", Description = "", Default = _G.Settings.StartRaid })
Start:OnChanged(function(value)
    _G.Auto_StartRaid = value    
    _G.Settings.StartRaid = value
    SaveSettings()    
end)

spawn(function()
    while wait(.1) do
        pcall(function()
            if _G.Auto_StartRaid then
                if game:GetService("Players").LocalPlayer.PlayerGui.Main.Timer.Visible == false then
                    if not game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1") 
                    and (game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Special Microchip") 
                    or game:GetService("Players").LocalPlayer.Character:FindFirstChild("Special Microchip")) then
                        
                        local player = game:GetService("Players").LocalPlayer
                        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            if World2 then
                                player.Character.HumanoidRootPart.CFrame = CFrame.new(-6446.21094, 245.322006, -4485.10889, 
                                                                                     0.997567594, -0, -0.069705762, 
                                                                                     0, 1, -0, 
                                                                                     0.069705762, 0, 0.997567594)
                            elseif World3 then
                                player.Character.HumanoidRootPart.CFrame = CFrame.new(-5016.92676, 322.531006, -3093.74707, 
                                                                                     0.374604106, -0, -0.92718488, 
                                                                                     0, 1, -0, 
                                                                                     0.92718488, 0, 0.374604106)
                            end
                        end
                        
                        wait(1)

                        if World2 then
                            fireclickdetector(game:GetService("Workspace").Map.CircleIsland.RaidSummon2.Button.Main.ClickDetector)
                        elseif World3 then
                            fireclickdetector(game:GetService("Workspace").Map["Boat Castle"].RaidSummon2.Button.Main.ClickDetector)
                        end
                    end
                end
            end
        end)
    end
end)

FarmRaid = Tabs.F:AddToggle("FarmRaid", { Title = "Auto Farm Raid", Description = "", Default = _G.Settings.AttackRaid })
FarmRaid:OnChanged(function(value)
    _G.FarmRaid = value    
    _G.Settings.AttackRaid = value
    SaveSettings()
    StopTween(_G.FarmRaid)
end)

function RaidIsland(bluex)
    if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island " .. bluex) then
        min = 4500
        for r, v in pairs(game:GetService("Workspace")["_WorldOrigin"].Locations:GetChildren()) do
            if
                v.Name == "Island " .. bluex and
                    (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < min
            then
                min = (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            end
        end
        for r, v in pairs(game:GetService("Workspace")["_WorldOrigin"].Locations:GetChildren()) do
            if
                v.Name == "Island " .. bluex and
                    (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= min
            then
                return v
            end
        end
    end
end

function NextIsland()
    TableIslandsRaid = {5, 4, 3, 2, 1}
    for r, v in pairs(TableIslandsRaid) do
        if RaidIsland(v) and (RaidIsland(v).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 4500 then
            return RaidIsland(v)
        end
    end
end

function FarmRaid()
    local enemies = {}
    for _, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
        if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            local distance = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance <= 1000 then
                table.insert(enemies, v)
            end
        end
    end

    for _, enemy in pairs(enemies) do
        repeat
            if enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                EquipWeapon(_G.SelectWeapon)
                topos(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 30, 0))
                wait(0.1)
            end
        until not enemy:FindFirstChild("Humanoid") or enemy.Humanoid.Health <= 0
    end
end

spawn(function()
    while wait() do
        if _G.FarmRaid then
            FarmRaid()
            if NextIsland() then
                spawn(topos(NextIsland().CFrame * CFrame.new(0, 60, 0)), 1)
            end
        end
    end
end)

Awakening = Tabs.F:AddToggle("Awakening", { Title = "Auto Awakening Fruits", Description = "", Default = _G.Settings.Awa })
Awakening:OnChanged(function(value)
    _G.Auto_Awakening = value    
    _G.Settings.Awa = value
    SaveSettings()   
end)

spawn(function()
        pcall(function()
            while wait(.1) do
                if _G.Auto_Awakener then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Awakener","Check")
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Awakener","Awaken")
                end
            end
        end)
    end)

GetFruit = Tabs.F:AddToggle("GetFruit", { Title = "Get Fruits Under 1M Beli", Description = "", Default = _G.Settings.GetFruitM })
GetFruit:OnChanged(function(value)
    _G.AutoGetFruit = value    
    _G.Settings.GetFruitM = value
    SaveSettings()    
end)

local fruitsUnder1M = {
    "Rocket-Rocket", "Spin-Spin", "Chop-Chop", "Spring-Spring",
    "Bomb-Bomb", "Smoke-Smoke", "Spike-Spike", "Flame-Flame",
    "Falcon-Falcon", "Ice-Ice", "Sand-Sand", "Dark-Dark",
    "Ghost-Ghost", "Diamond-Diamond", "Light-Light",
    "Rubber-Rubber", "Barrier-Barrier"
}

spawn(function()
    while wait(1) do
        pcall(function()
            if _G.AutoGetFruit then
                local remote = game:GetService("ReplicatedStorage").Remotes.CommF_
                for _, fruit in pairs(fruitsUnder1M) do
                    remote:InvokeServer("LoadFruit", fruit)
                end
            end
        end)
    end
end)

Tabs.P:AddParagraph({
    Title = "Player",
    Content = "-----"
})

local Playerslist = {}
for i,v in pairs(game:GetService("Players"):GetChildren()) do
    table.insert(Playerslist,v.Name)
end

Selectsland = Tabs.P:AddDropdown("Selectsland", {
    Title = "Select Player",
    Values = Playerslist,
    Multi = false,
    Default = 2,
})
Selectsland:SetValue("")
Selectsland:OnChanged(function(value)
SelectPlayer = value
end)

Tabs.P:AddButton({
    Title = "Refresh New Player",
    Callback = function()
        table.clear(Playerslist)
        for i,v in pairs(game:GetService("Players"):GetChildren()) do
            table.insert(Playerslist,v.Name)
        end
    end
})

TpP = Tabs.P:AddToggle("TpP", { Title = "Teleport Player Select", Description = "", Default = _G.Settings.Tpp })
TpP:OnChanged(function(value)
    _G.TpPlayer = value    
    _G.Settings.Tpp = value
    SaveSettings()
    if value == false then
    wait()
    topos(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame)
    wait()
    StopTween(_G.TpPlayer)
    end
end)

spawn(function()
    while wait() do
        if _G.TpPlayer then
            pcall(function()
                if game.Players:FindFirstChild(SelectPlayer) then
                    topos(game.Players[SelectPlayer].Character.HumanoidRootPart.CFrame)
                end
            end)
        end
    end
end)

AimCamera = Tabs.P:AddToggle("AimCamera", { Title = "Aimbot Camera Near Player", Description = "", Default = _G.Settings.Aimbot })
AimCamera:OnChanged(function(value)
    _G.AimP = value    
    _G.Settings.Aimbot = value
    SaveSettings()    
end)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local AimDistance = 2000

local function getNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = AimDistance

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local targetPos = player.Character.HumanoidRootPart.Position
            local myPos = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.Position

            if myPos then
                local distance = (targetPos - myPos).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearestPlayer = player
                end
            end
        end
    end

    return nearestPlayer
end

spawn(function()
    while wait() do
        pcall(function()
            if _G.AimP then
                local targetPlayer = getNearestPlayer()
                if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
                    Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPosition) 
                end
            end
        end)
    end
end)

Walk = Tabs.P:AddToggle("Walk", { Title = "Walk Water", Description = "", Default = _G.Settings.Water })
Walk:OnChanged(function(value)
    _G.Water = value    
    _G.Settings.Water = value
    SaveSettings()    
end)

spawn(function()
			while task.wait() do
				pcall(function()
					if _G.Water then
						game:GetService("Workspace").Map["WaterBase-Plane"].Size = Vector3.new(1000,112,1000)
					else
						game:GetService("Workspace").Map["WaterBase-Plane"].Size = Vector3.new(1000,80,1000)
					end
				end)
			end
		end)
		
game:GetService("Players").LocalPlayer.PlayerGui.Main.Version.Visible = false		